name: Deploy Site

on:
  push:
    branches:
      - main
    paths:
      - 'site/**'
  pull_request:
    paths:
      - 'site/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  NIX_VERSION: nix-2.13.2
  NIXPKGS_CHANNEL: nixos-22.11
  NODE_OPTIONS: '--no-warnings'
  ACTIONS_RUNNER_DEBUG: true
  ASTRO_TELEMETRY_DISABLED: true


jobs:
  build:
    uses: unionlabs/workflows/.github/workflows/build.yml@329b802dafe949a7a93b6e6a5bf5065c3a81ab30
    secrets:
      nixbuild_token: ${{ secrets.nixbuild_token }}
      access-tokens: github.com=${{ secrets.GITHUB_TOKEN }}
    with:
      filter_builds: '(.top_attr == "packages") and (.system == "x86_64-linux") and (.attr == "site")'
      eval_target: 'site'
      eval_top_attr: 'packages'
    
  deploy-preview:
    runs-on: ['ubuntu-latest']
    needs: [build]
    permissions:
      contents: read
      pull-requests: write
    env:
      npm_config_yes: true
    environment: 'site-preview'
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: nixbuild/nix-quick-install-action@v26
      - uses: nixbuild/nixbuild-action@master
        with:
          nixbuild_token: ${{ secrets.nixbuild_token }}
      - run: mkdir dump
      - run: nix copy --to file://`pwd`/dump --from ssh-ng://eu.nixbuild.net `nix eval --raw .#packages.x86_64-linux.site` --extra-experimental-features nix-command
      - run: cat dump/nar/*.nar.xz | xz -dc | nix-store --restore result

      - name: '[preview] ðŸ”¶ Publish to Cloudflare Pages'
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_WORKERS_API_TOKEN }}
        run: npx --yes wrangler@latest pages --project-name="site" deploy result >> /tmp/site_deploy.txt

      - name: Remove Lychee Cache
        run: rm -rf .lycheecache
      - name: Link Check
        id: lychee
        uses: lycheeverse/lychee-action@v1.9.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: |
            'result/**/index.html' --no-progress

      - name: Comment Link Checker Results
        if: env.lychee_exit_code != 0
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: ./lychee/out.md
          comment_tag: link-checker

      - name: Set Deploy Output
        run: |
          {
            echo 'DEPLOY_OUTPUT<<EOF'
            tail -n 2 /tmp/site_deploy.txt
            echo 'EOF'
          } >> $GITHUB_ENV

      - name: Comment Site Deploy Results
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            # Site/Docs ðŸ¤ 
            ${{ env.DEPLOY_OUTPUT }}

            **${{ env.LAST_UPDATED_AT }}**
          comment_tag: deploy-preview-result

  deploy-manual:
    runs-on: ['ubuntu-latest']
    needs: [build]
    permissions: write-all
    env:
      npm_config_yes: true
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: nixbuild/nix-quick-install-action@v26
      - uses: nixbuild/nixbuild-action@master
        with:
          nixbuild_token: ${{ secrets.nixbuild_token }}
      - run: mkdir dump
      - run: nix copy --to file://`pwd`/dump --from ssh-ng://eu.nixbuild.net `nix eval --raw .#packages.x86_64-linux.site` --extra-experimental-features nix-command
      - run: cat dump/nar/*.nar.xz | xz -dc | nix-store --restore result

        # create preview deployment when trigger is workflow_dispatch && branch is not main
      - name: '[workflow-dispatch] ðŸ”¶ Publish to Cloudflare Pages'
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_WORKERS_API_TOKEN }}
        run: npx --yes wrangler@latest pages --project-name="site" deploy result


  deploy-production:
    runs-on: ['ubuntu-latest']
    needs: [build]
    permissions: write-all
    env:
      npm_config_yes: true
    environment: 'site-production'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: nixbuild/nix-quick-install-action@v26
      - uses: nixbuild/nixbuild-action@master
        with:
          nixbuild_token: ${{ secrets.nixbuild_token }}
      - run: mkdir dump
      - run: nix copy --to file://`pwd`/dump --from ssh-ng://eu.nixbuild.net `nix eval --raw .#packages.x86_64-linux.site` --extra-experimental-features nix-command
      - run: cat dump/nar/*.nar.xz | xz -dc | nix-store --restore result

      - name: '[production] ðŸ”¶ Publish to Cloudflare Pages'
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_WORKERS_API_TOKEN }}
        run: npx --yes wrangler@latest pages --project-name="site" --branch="main" deploy result
