pragma solidity ^0.8.18;

import "forge-std/Test.sol";
import "../../../contracts/core/IZKVerifier.sol";
import "../../../contracts/lib/CometblsHelp.sol";
import "../../../contracts/lib/Encoder.sol";
import "../../../contracts/clients/TestnetVerifier.sol";
import "../../../contracts/proto/ibc/core/channel/v1/channel.sol";
import "../../../contracts/proto/tendermint/types/canonical.sol";

contract VerifierTest is Test {
    using CometblsHelp for TendermintTypesHeader.Data;
    using CometblsHelp for IZKVerifier;

    IZKVerifier testnetVerifier;

    function setUp() public {
        testnetVerifier = new TestnetVerifier();
    }

    /*
Gnark Proof
Public inputs: 0000000600000000000000060000000000000000000000000000000010B7AEC2603155B841022186480D64DB000000000000000000000000000000001BBBE9BFA12A58987BEC21FB945DFB810000000000000000000000000000000010B7AEC2603155B841022186480D64DB000000000000000000000000000000001BBBE9BFA12A58987BEC21FB945DFB811BF54D584358BACF7428A114B333D709708BC54DDEA41B369CEC928999311D070A9A0161CF647EAC03A640E4A2BE432373B5AF4520AD5D8B9D4E936EA1D9AFE8
Trusted root: 10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81
Untrusted root: 10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81
EVM compatible ZKP: 283CA2E40BA660AA51D0C1AA13401C5F00F3D79900C25D612ECE54BA1280628D24333AA9BF31F4345E25254053E07BD6750A4169E6A751CEA2B8BC9A41A795A60BDE3879DEC5E291525A0560D524820FB3FC3411BA98B6820B374D1F90E58C100F515B8ABC2E1BA96FA60F232044688DB4D65C2809E96B90D79A45E789C2F3EA0934A9A5AE8DA0DF5F982F89771683EB60836D1E3BF876513B38E41DCCC97A2D28032CE1E112DDB2E185F48DC11DC75E80E0908FE06BF56AFCD89E8D994F7BEB1A411D5A5A2EF2C282AC18050A9A254C7818B7BB0F1C68D529A083154DF5E63E0B46A6D9963B8A27B663BE0E4D3EFEAAD6B028A15A827B957748122190E7D45813C526109387A1931D99E1FA4317DB4BE46A595E914E0AE10EB4DBF34CFF5E4917E68CDC76DECA59D571E31590D8229E7AA4A437D9E94A082BAA6F2D8ED7D95D0384F5A24A73D39BBB7AA99F9A8564B45E53E11761918D37C258CD79D9D69274
     */
    function testValidTestnetProof() public {
        bytes memory blockHash = hex"1AD5BACC115AF66ADBA05C6D2393D73FD41E0DF1F761ED33344668BF71DEB9CB";
        bytes memory partSetHeaderHash = hex"6A80C88DA6FE1FA7773949270805567C963028008B10441E0180CF8AA1D400C9";
        TendermintTypesCanonicalVote.Data memory vote = TendermintTypesCanonicalVote.Data({
            type_: TendermintTypesTypesGlobalEnums.SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT,
            height: 1,
            round: 0,
            block_id: TendermintTypesCanonicalBlockID.Data({
                hash: blockHash,
                part_set_header: TendermintTypesCanonicalPartSetHeader.Data({
                    total: 1,
                    hash: partSetHeaderHash
                    })
                }),
            chain_id: "union-devnet-1"
            });
        bytes memory signedVote = Encoder.encodeDelim(TendermintTypesCanonicalVote.encode(vote));
        bytes32 trustedValidatorsHash = hex"10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81";
        bytes32 untrustedValidatorsHash = hex"10B7AEC2603155B841022186480D64DB1BBBE9BFA12A58987BEC21FB945DFB81";
        bytes memory zkp = hex
        require(
                testnetVerifier.verifyZKP(trustedValidatorsHash, untrustedValidatorsHash, signedVote, zkp),
                "invalid proof"
        );
    }
}
