pragma solidity ^0.8.18;

import "forge-std/Test.sol";
import "../../contracts/core/IZKVerifier.sol";
import "../../contracts/lib/CometblsHelp.sol";
import "../../contracts/lib/Encoder.sol";
import "../../contracts/clients/TestnetVerifier.sol";
import "../../contracts/proto/ibc/core/channel/v1/channel.sol";
import "../../contracts/proto/tendermint/types/canonical.sol";

contract VerifierTest is Test {
    using CometblsHelp for TendermintTypesHeader.Data;
    using CometblsHelp for IZKVerifier;

    IZKVerifier testnetVerifier;

    function setUp() public {
        testnetVerifier = new TestnetVerifier();
    }

    /*
Gnark Proof: 0466CB548CC37E2F0A7F7BD8C613BE82DB28A47632CC529BA60A38F1AF8228981FE83E4005EA6441E978C15E94178803F3E955DC48DCAB1B2DF014EA2BFE828A020384DC54BE10A0C164648A951B745756BAAE4FF3F0779C7CCE560950205E312CF49922BD296F7432D2062A3D5CF7DF7E8ACBD050E16A756F60D41FFEA901252B1DA6008F9E148D7BB14B89827AEA455D3F909AD4F6979A037C99273694901C1B2546E91DC1D9D19F99C656CE7A06EA52870D5C81C19FEE2494418C52E7E4062EA08F30A03C67EB5AE225B9095B48D50D2D8599D4E024D83CE312E108933A6A2D0E845BB62D62B924D38A4E6EFB244D2A1962A58A89CB6932BBE83216C2AEDE2D20102C81124E8D8817BE7236804440170F57A1CF901A6C02067DFB51EA2FDB1125265B645D5CEA001A06BB020459889492B35650CB38F6D7F77ACC8861B55F0D89E48F53D16A23F7EE5F488C276F10B25DFE98EA33FFF9F91137763DB3A5E8175C365CFD8C02DD390A566998A3574031A53017B733EFDEBE6A24FDE9C58525
Public inputs: 000000060000000000000006000000000000000000000000000000001C693384712792A76DAC1C8E967AEACA00000000000000000000000000000000D9426A3A2E30513AC201A8F009065877000000000000000000000000000000001C693384712792A76DAC1C8E967AEACA00000000000000000000000000000000D9426A3A2E30513AC201A8F0090658770A67924AA9239EE57D82B91759F143D81415AADCAD550AC9208855CA1D58FD5923E2FF58DADE7D3C0C92F5E0DE8EDAA24B7DC3E99156CD5B31C99508841B2782
Trusted root: 1C693384712792A76DAC1C8E967AEACAD9426A3A2E30513AC201A8F009065877
Untrusted root: 1C693384712792A76DAC1C8E967AEACAD9426A3A2E30513AC201A8F009065877
EVM compatible ZKP: 0466CB548CC37E2F0A7F7BD8C613BE82DB28A47632CC529BA60A38F1AF8228981FE83E4005EA6441E978C15E94178803F3E955DC48DCAB1B2DF014EA2BFE828A020384DC54BE10A0C164648A951B745756BAAE4FF3F0779C7CCE560950205E312CF49922BD296F7432D2062A3D5CF7DF7E8ACBD050E16A756F60D41FFEA901252B1DA6008F9E148D7BB14B89827AEA455D3F909AD4F6979A037C99273694901C1B2546E91DC1D9D19F99C656CE7A06EA52870D5C81C19FEE2494418C52E7E4062EA08F30A03C67EB5AE225B9095B48D50D2D8599D4E024D83CE312E108933A6A2D0E845BB62D62B924D38A4E6EFB244D2A1962A58A89CB6932BBE83216C2AEDE2D20102C81124E8D8817BE7236804440170F57A1CF901A6C02067DFB51EA2FDB1125265B645D5CEA001A06BB020459889492B35650CB38F6D7F77ACC8861B55F0D89E48F53D16A23F7EE5F488C276F10B25DFE98EA33FFF9F91137763DB3A5E8
    */
    function testValidTestnetProof() public {
        bytes memory blockHash = hex"7022627E60ED78120D2FE8DC7ACDB58A2321B0304F8912D2DFB86CE038E23CA8";
        bytes memory partSetHeaderHash = hex"41B8793236EE0980E2EAF1A2FAD268C4A3D8979A0C432F06E284EEC5E74DD69C";
        TendermintTypesCanonicalVote.Data memory vote = TendermintTypesCanonicalVote.Data({
            type_: TendermintTypesTypesGlobalEnums.SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT,
            height: 574,
            round: 0,
            block_id: TendermintTypesCanonicalBlockID.Data({
                hash: blockHash,
                part_set_header: TendermintTypesCanonicalPartSetHeader.Data({
                    total: 1,
                    hash: partSetHeaderHash
                    })
                }),
            chain_id: "union-devnet-1"
            });
        bytes memory signedVote = Encoder.encodeDelim(TendermintTypesCanonicalVote.encode(vote));
        bytes32 trustedValidatorsHash = hex"1C693384712792A76DAC1C8E967AEACAD9426A3A2E30513AC201A8F009065877";
        bytes32 untrustedValidatorsHash = hex"1C693384712792A76DAC1C8E967AEACAD9426A3A2E30513AC201A8F009065877";
        bytes memory zkp = hex"0466CB548CC37E2F0A7F7BD8C613BE82DB28A47632CC529BA60A38F1AF8228981FE83E4005EA6441E978C15E94178803F3E955DC48DCAB1B2DF014EA2BFE828A020384DC54BE10A0C164648A951B745756BAAE4FF3F0779C7CCE560950205E312CF49922BD296F7432D2062A3D5CF7DF7E8ACBD050E16A756F60D41FFEA901252B1DA6008F9E148D7BB14B89827AEA455D3F909AD4F6979A037C99273694901C1B2546E91DC1D9D19F99C656CE7A06EA52870D5C81C19FEE2494418C52E7E4062EA08F30A03C67EB5AE225B9095B48D50D2D8599D4E024D83CE312E108933A6A2D0E845BB62D62B924D38A4E6EFB244D2A1962A58A89CB6932BBE83216C2AEDE2D20102C81124E8D8817BE7236804440170F57A1CF901A6C02067DFB51EA2FDB1125265B645D5CEA001A06BB020459889492B35650CB38F6D7F77ACC8861B55F0D89E48F53D16A23F7EE5F488C276F10B25DFE98EA33FFF9F91137763DB3A5E8";
        require(
                testnetVerifier.verifyZKP(trustedValidatorsHash, untrustedValidatorsHash, signedVote, zkp),
                "invalid proof"
        );
    }
}
