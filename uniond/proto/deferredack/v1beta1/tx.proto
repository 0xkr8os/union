syntax = "proto3";
package deferredack.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "ibc/core/channel/v1/channel.proto";
import "ibc/applications/transfer/v2/packet.proto";

option go_package = "union/x/deferredack/types";

// Msg defines the deferredack module's gRPC message service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc WriteDeferredAck(MsgWriteDeferredAck) returns (MsgWriteDeferredAckResponse);
}

message MsgWriteDeferredAck {
  option (cosmos.msg.v1.signer) = "sender";

  string                                               sender             = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
  DeferredPacketInfo                                   deferredPacketInfo = 2;
  ibc.core.channel.v1.Acknowledgement                  ack                = 3;
}

message MsgWriteDeferredAckResponse {
  
}

message DeferredPacketInfo {
  string refund_channel_id                 = 1;
  string refund_port_id                    = 2;
  string packet_src_channel_id             = 3;
  string packet_src_port_id                = 4;
  uint64 packet_timeout_timestamp          = 5;
  string packet_timeout_height             = 6;
  bytes  packet_data                       = 7;
  uint64 sequence                          = 8;
}
