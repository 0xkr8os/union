syntax = "proto3";

package union.prover.api.v1;

import "tendermint/types/validator.proto";
import "tendermint/types/canonical.proto";

option go_package = "union/prover/rpc/grpc";

message FrElement {
  bytes value = 1;
}

message ZeroKnowledgeProof {
  bytes content = 1;
  bytes evm_proof = 2;
  bytes public_inputs = 3;
}

message ValidatorSetCommit {
  repeated .tendermint.types.SimpleValidator validators = 1;
  repeated bytes signatures = 2;
  bytes bitmap = 3;
}

message ProveRequest {
  .tendermint.types.CanonicalVote vote = 1;
  ValidatorSetCommit trusted_commit = 2;
  ValidatorSetCommit untrusted_commit = 3;
}

message ProveResponse {
  ZeroKnowledgeProof proof = 1;
  bytes trusted_validator_set_root = 2;
  bytes untrusted_validator_set_root = 3;
}

message VerifyRequest {
  ZeroKnowledgeProof proof = 1;
  bytes trusted_validator_set_root = 2;
  bytes untrusted_validator_set_root = 3;
  FrElement block_header_x = 4;
  FrElement block_header_y = 5;
}

message VerifyResponse {
  bool valid = 1;
}

message GenerateContractRequest {}

message GenerateContractResponse {
  bytes content = 1;
}

service UnionProverAPI {
  rpc Prove(ProveRequest) returns (ProveResponse);
  rpc Verify(VerifyRequest) returns (VerifyResponse);
  rpc GenerateContract(GenerateContractRequest) returns (GenerateContractResponse);
}

