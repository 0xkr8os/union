schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Represent a cosmos address as [Betch32](https://en.bitcoin.it/wiki/Bech32) format prefixed by the blockchain prefix.
e.i. `cosmos1jse8senm9hcvydhl8v9x47kfe5z82zmwtw8jvj`
"""
scalar Address

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""Represent the actual server configuration"""
type Configuration {
  """Amount value of token to send"""
  amountSend: Long!

  """The network chain ID"""
  chainId: String!

  """Token denom"""
  denom: String!

  """Fee amount allowed"""
  feeAmount: Long!

  """Gas limit allowed on transaction"""
  gasLimit: UInt64!

  """Memo used when send transaction"""
  memo: String!

  """Address prefix"""
  prefix: String!
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""Represent a signed 64-bit integer"""
scalar Long

"""All inputs needed to send token to a given address"""
input SendInput {
  """Captcha token"""
  captchaToken: String

  """Address where to send token(s)"""
  toAddress: Address!
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

"""Represent a transaction response"""
type TxResponse {
  """
  Return the result code of transaction.
  See code correspondence error : https://github.com/cosmos/cosmos-sdk/blob/main/types/errors/errors.go
  """
  code: Int!

  """Transaction gas used"""
  gasUsed: Long!

  """Transaction gas wanted"""
  gasWanted: Long!

  """Corresponding to the transaction hash."""
  hash: String!

  """Description of error if available."""
  rawLog: String
}

"""An unsigned 64-bit integer"""
scalar UInt64

"""Represent a void return type, representing no value"""
scalar Void

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "v0.abis"
  """
  delete_v0_abis(
    """filter the rows which have to be deleted"""
    where: v0_abis_bool_exp!
  ): v0_abis_mutation_response

  """
  delete single row from the table: "v0.abis"
  """
  delete_v0_abis_by_pk(id: Int!): v0_abis

  """
  delete data from the table: "v0.blocks"
  """
  delete_v0_blocks(
    """filter the rows which have to be deleted"""
    where: v0_blocks_bool_exp!
  ): v0_blocks_mutation_response

  """
  delete single row from the table: "v0.blocks"
  """
  delete_v0_blocks_by_pk(chain_id: Int!, hash: String!): v0_blocks

  """
  delete data from the table: "v0.chains"
  """
  delete_v0_chains(
    """filter the rows which have to be deleted"""
    where: v0_chains_bool_exp!
  ): v0_chains_mutation_response

  """
  delete single row from the table: "v0.chains"
  """
  delete_v0_chains_by_pk(id: Int!): v0_chains

  """
  delete data from the table: "v0.events"
  """
  delete_v0_events(
    """filter the rows which have to be deleted"""
    where: v0_events_bool_exp!
  ): v0_events_mutation_response

  """
  delete single row from the table: "v0.events"
  """
  delete_v0_events_by_pk(block_hash: String!, chain_id: Int!, index: Int!): v0_events

  """
  delete data from the table: "v0.logs"
  """
  delete_v0_logs(
    """filter the rows which have to be deleted"""
    where: v0_logs_bool_exp!
  ): v0_logs_mutation_response

  """
  delete single row from the table: "v0.logs"
  """
  delete_v0_logs_by_pk(block_hash: String!, chain_id: Int!): v0_logs

  """
  delete data from the table: "v0.transactions"
  """
  delete_v0_transactions(
    """filter the rows which have to be deleted"""
    where: v0_transactions_bool_exp!
  ): v0_transactions_mutation_response

  """
  delete single row from the table: "v0.transactions"
  """
  delete_v0_transactions_by_pk(chain_id: Int!, hash: String!): v0_transactions

  """
  insert data into the table: "v0.abis"
  """
  insert_v0_abis(
    """the rows to be inserted"""
    objects: [v0_abis_insert_input!]!

    """upsert condition"""
    on_conflict: v0_abis_on_conflict
  ): v0_abis_mutation_response

  """
  insert a single row into the table: "v0.abis"
  """
  insert_v0_abis_one(
    """the row to be inserted"""
    object: v0_abis_insert_input!

    """upsert condition"""
    on_conflict: v0_abis_on_conflict
  ): v0_abis

  """
  insert data into the table: "v0.blocks"
  """
  insert_v0_blocks(
    """the rows to be inserted"""
    objects: [v0_blocks_insert_input!]!

    """upsert condition"""
    on_conflict: v0_blocks_on_conflict
  ): v0_blocks_mutation_response

  """
  insert a single row into the table: "v0.blocks"
  """
  insert_v0_blocks_one(
    """the row to be inserted"""
    object: v0_blocks_insert_input!

    """upsert condition"""
    on_conflict: v0_blocks_on_conflict
  ): v0_blocks

  """
  insert data into the table: "v0.chains"
  """
  insert_v0_chains(
    """the rows to be inserted"""
    objects: [v0_chains_insert_input!]!

    """upsert condition"""
    on_conflict: v0_chains_on_conflict
  ): v0_chains_mutation_response

  """
  insert a single row into the table: "v0.chains"
  """
  insert_v0_chains_one(
    """the row to be inserted"""
    object: v0_chains_insert_input!

    """upsert condition"""
    on_conflict: v0_chains_on_conflict
  ): v0_chains

  """
  insert data into the table: "v0.events"
  """
  insert_v0_events(
    """the rows to be inserted"""
    objects: [v0_events_insert_input!]!

    """upsert condition"""
    on_conflict: v0_events_on_conflict
  ): v0_events_mutation_response

  """
  insert a single row into the table: "v0.events"
  """
  insert_v0_events_one(
    """the row to be inserted"""
    object: v0_events_insert_input!

    """upsert condition"""
    on_conflict: v0_events_on_conflict
  ): v0_events

  """
  insert data into the table: "v0.logs"
  """
  insert_v0_logs(
    """the rows to be inserted"""
    objects: [v0_logs_insert_input!]!

    """upsert condition"""
    on_conflict: v0_logs_on_conflict
  ): v0_logs_mutation_response

  """
  insert a single row into the table: "v0.logs"
  """
  insert_v0_logs_one(
    """the row to be inserted"""
    object: v0_logs_insert_input!

    """upsert condition"""
    on_conflict: v0_logs_on_conflict
  ): v0_logs

  """
  insert data into the table: "v0.transactions"
  """
  insert_v0_transactions(
    """the rows to be inserted"""
    objects: [v0_transactions_insert_input!]!

    """upsert condition"""
    on_conflict: v0_transactions_on_conflict
  ): v0_transactions_mutation_response

  """
  insert a single row into the table: "v0.transactions"
  """
  insert_v0_transactions_one(
    """the row to be inserted"""
    object: v0_transactions_insert_input!

    """upsert condition"""
    on_conflict: v0_transactions_on_conflict
  ): v0_transactions
  union: unionMutation

  """
  update data of the table: "v0.abis"
  """
  update_v0_abis(
    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_abis_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_abis_set_input

    """filter the rows which have to be updated"""
    where: v0_abis_bool_exp!
  ): v0_abis_mutation_response

  """
  update single row of the table: "v0.abis"
  """
  update_v0_abis_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_abis_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_abis_set_input
    pk_columns: v0_abis_pk_columns_input!
  ): v0_abis

  """
  update multiples rows of table: "v0.abis"
  """
  update_v0_abis_many(
    """updates to execute, in order"""
    updates: [v0_abis_updates!]!
  ): [v0_abis_mutation_response]

  """
  update data of the table: "v0.blocks"
  """
  update_v0_blocks(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_blocks_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_blocks_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_blocks_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_blocks_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_blocks_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_blocks_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_blocks_set_input

    """filter the rows which have to be updated"""
    where: v0_blocks_bool_exp!
  ): v0_blocks_mutation_response

  """
  update single row of the table: "v0.blocks"
  """
  update_v0_blocks_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_blocks_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_blocks_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_blocks_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_blocks_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_blocks_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_blocks_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_blocks_set_input
    pk_columns: v0_blocks_pk_columns_input!
  ): v0_blocks

  """
  update multiples rows of table: "v0.blocks"
  """
  update_v0_blocks_many(
    """updates to execute, in order"""
    updates: [v0_blocks_updates!]!
  ): [v0_blocks_mutation_response]

  """
  update data of the table: "v0.chains"
  """
  update_v0_chains(
    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_chains_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_chains_set_input

    """filter the rows which have to be updated"""
    where: v0_chains_bool_exp!
  ): v0_chains_mutation_response

  """
  update single row of the table: "v0.chains"
  """
  update_v0_chains_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_chains_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_chains_set_input
    pk_columns: v0_chains_pk_columns_input!
  ): v0_chains

  """
  update multiples rows of table: "v0.chains"
  """
  update_v0_chains_many(
    """updates to execute, in order"""
    updates: [v0_chains_updates!]!
  ): [v0_chains_mutation_response]

  """
  update data of the table: "v0.events"
  """
  update_v0_events(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_events_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_events_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_events_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_events_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_events_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_events_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_events_set_input

    """filter the rows which have to be updated"""
    where: v0_events_bool_exp!
  ): v0_events_mutation_response

  """
  update single row of the table: "v0.events"
  """
  update_v0_events_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_events_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_events_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_events_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_events_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_events_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_events_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_events_set_input
    pk_columns: v0_events_pk_columns_input!
  ): v0_events

  """
  update multiples rows of table: "v0.events"
  """
  update_v0_events_many(
    """updates to execute, in order"""
    updates: [v0_events_updates!]!
  ): [v0_events_mutation_response]

  """
  update data of the table: "v0.logs"
  """
  update_v0_logs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_logs_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_logs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_logs_set_input

    """filter the rows which have to be updated"""
    where: v0_logs_bool_exp!
  ): v0_logs_mutation_response

  """
  update single row of the table: "v0.logs"
  """
  update_v0_logs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_logs_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_logs_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_logs_set_input
    pk_columns: v0_logs_pk_columns_input!
  ): v0_logs

  """
  update multiples rows of table: "v0.logs"
  """
  update_v0_logs_many(
    """updates to execute, in order"""
    updates: [v0_logs_updates!]!
  ): [v0_logs_mutation_response]

  """
  update data of the table: "v0.transactions"
  """
  update_v0_transactions(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_transactions_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_transactions_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_transactions_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_transactions_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_transactions_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_transactions_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_transactions_set_input

    """filter the rows which have to be updated"""
    where: v0_transactions_bool_exp!
  ): v0_transactions_mutation_response

  """
  update single row of the table: "v0.transactions"
  """
  update_v0_transactions_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: v0_transactions_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: v0_transactions_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: v0_transactions_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: v0_transactions_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: v0_transactions_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: v0_transactions_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: v0_transactions_set_input
    pk_columns: v0_transactions_pk_columns_input!
  ): v0_transactions

  """
  update multiples rows of table: "v0.transactions"
  """
  update_v0_transactions_many(
    """updates to execute, in order"""
    updates: [v0_transactions_updates!]!
  ): [v0_transactions_mutation_response]
}

scalar numeric

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  union: unionQuery

  """
  fetch data from the table: "v0.abis"
  """
  v0_abis(
    """distinct select on columns"""
    distinct_on: [v0_abis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_abis_order_by!]

    """filter the rows returned"""
    where: v0_abis_bool_exp
  ): [v0_abis!]!

  """
  fetch aggregated fields from the table: "v0.abis"
  """
  v0_abis_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_abis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_abis_order_by!]

    """filter the rows returned"""
    where: v0_abis_bool_exp
  ): v0_abis_aggregate!

  """fetch data from the table: "v0.abis" using primary key columns"""
  v0_abis_by_pk(id: Int!): v0_abis

  """
  fetch data from the table: "v0.acknowledge_packets"
  """
  v0_acknowledge_packets(
    """distinct select on columns"""
    distinct_on: [v0_acknowledge_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_acknowledge_packets_order_by!]

    """filter the rows returned"""
    where: v0_acknowledge_packets_bool_exp
  ): [v0_acknowledge_packets!]!

  """
  fetch aggregated fields from the table: "v0.acknowledge_packets"
  """
  v0_acknowledge_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_acknowledge_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_acknowledge_packets_order_by!]

    """filter the rows returned"""
    where: v0_acknowledge_packets_bool_exp
  ): v0_acknowledge_packets_aggregate!

  """
  fetch data from the table: "v0.active_proposals"
  """
  v0_active_proposals(
    """distinct select on columns"""
    distinct_on: [v0_active_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_active_proposals_order_by!]

    """filter the rows returned"""
    where: v0_active_proposals_bool_exp
  ): [v0_active_proposals!]!

  """
  fetch aggregated fields from the table: "v0.active_proposals"
  """
  v0_active_proposals_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_active_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_active_proposals_order_by!]

    """filter the rows returned"""
    where: v0_active_proposals_bool_exp
  ): v0_active_proposals_aggregate!

  """
  fetch data from the table: "v0.blocks"
  """
  v0_blocks(
    """distinct select on columns"""
    distinct_on: [v0_blocks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_blocks_order_by!]

    """filter the rows returned"""
    where: v0_blocks_bool_exp
  ): [v0_blocks!]!

  """
  fetch aggregated fields from the table: "v0.blocks"
  """
  v0_blocks_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_blocks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_blocks_order_by!]

    """filter the rows returned"""
    where: v0_blocks_bool_exp
  ): v0_blocks_aggregate!

  """fetch data from the table: "v0.blocks" using primary key columns"""
  v0_blocks_by_pk(chain_id: Int!, hash: String!): v0_blocks

  """
  fetch data from the table: "v0.burns"
  """
  v0_burns(
    """distinct select on columns"""
    distinct_on: [v0_burns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_burns_order_by!]

    """filter the rows returned"""
    where: v0_burns_bool_exp
  ): [v0_burns!]!

  """
  fetch aggregated fields from the table: "v0.burns"
  """
  v0_burns_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_burns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_burns_order_by!]

    """filter the rows returned"""
    where: v0_burns_bool_exp
  ): v0_burns_aggregate!

  """
  fetch data from the table: "v0.chains"
  """
  v0_chains(
    """distinct select on columns"""
    distinct_on: [v0_chains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_chains_order_by!]

    """filter the rows returned"""
    where: v0_chains_bool_exp
  ): [v0_chains!]!

  """
  fetch aggregated fields from the table: "v0.chains"
  """
  v0_chains_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_chains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_chains_order_by!]

    """filter the rows returned"""
    where: v0_chains_bool_exp
  ): v0_chains_aggregate!

  """fetch data from the table: "v0.chains" using primary key columns"""
  v0_chains_by_pk(id: Int!): v0_chains

  """
  fetch data from the table: "v0.channel_open_acks"
  """
  v0_channel_open_acks(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_acks_bool_exp
  ): [v0_channel_open_acks!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_acks"
  """
  v0_channel_open_acks_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_acks_bool_exp
  ): v0_channel_open_acks_aggregate!

  """
  fetch data from the table: "v0.channel_open_confirms"
  """
  v0_channel_open_confirms(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_confirms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_confirms_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_confirms_bool_exp
  ): [v0_channel_open_confirms!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_confirms"
  """
  v0_channel_open_confirms_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_confirms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_confirms_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_confirms_bool_exp
  ): v0_channel_open_confirms_aggregate!

  """
  fetch data from the table: "v0.channel_open_inits"
  """
  v0_channel_open_inits(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_inits_bool_exp
  ): [v0_channel_open_inits!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_inits"
  """
  v0_channel_open_inits_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_inits_bool_exp
  ): v0_channel_open_inits_aggregate!

  """
  fetch data from the table: "v0.channel_open_tries"
  """
  v0_channel_open_tries(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_tries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_tries_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_tries_bool_exp
  ): [v0_channel_open_tries!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_tries"
  """
  v0_channel_open_tries_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_tries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_tries_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_tries_bool_exp
  ): v0_channel_open_tries_aggregate!

  """
  fetch data from the table: "v0.coin_receiveds"
  """
  v0_coin_receiveds(
    """distinct select on columns"""
    distinct_on: [v0_coin_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_coin_receiveds_bool_exp
  ): [v0_coin_receiveds!]!

  """
  fetch aggregated fields from the table: "v0.coin_receiveds"
  """
  v0_coin_receiveds_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_coin_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_coin_receiveds_bool_exp
  ): v0_coin_receiveds_aggregate!

  """
  fetch data from the table: "v0.coin_spents"
  """
  v0_coin_spents(
    """distinct select on columns"""
    distinct_on: [v0_coin_spents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_spents_order_by!]

    """filter the rows returned"""
    where: v0_coin_spents_bool_exp
  ): [v0_coin_spents!]!

  """
  fetch aggregated fields from the table: "v0.coin_spents"
  """
  v0_coin_spents_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_coin_spents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_spents_order_by!]

    """filter the rows returned"""
    where: v0_coin_spents_bool_exp
  ): v0_coin_spents_aggregate!

  """
  fetch data from the table: "v0.coinbases"
  """
  v0_coinbases(
    """distinct select on columns"""
    distinct_on: [v0_coinbases_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coinbases_order_by!]

    """filter the rows returned"""
    where: v0_coinbases_bool_exp
  ): [v0_coinbases!]!

  """
  fetch aggregated fields from the table: "v0.coinbases"
  """
  v0_coinbases_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_coinbases_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coinbases_order_by!]

    """filter the rows returned"""
    where: v0_coinbases_bool_exp
  ): v0_coinbases_aggregate!

  """
  fetch data from the table: "v0.commissions"
  """
  v0_commissions(
    """distinct select on columns"""
    distinct_on: [v0_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_commissions_order_by!]

    """filter the rows returned"""
    where: v0_commissions_bool_exp
  ): [v0_commissions!]!

  """
  fetch aggregated fields from the table: "v0.commissions"
  """
  v0_commissions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_commissions_order_by!]

    """filter the rows returned"""
    where: v0_commissions_bool_exp
  ): v0_commissions_aggregate!

  """
  fetch data from the table: "v0.complete_redelegations"
  """
  v0_complete_redelegations(
    """distinct select on columns"""
    distinct_on: [v0_complete_redelegations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_complete_redelegations_order_by!]

    """filter the rows returned"""
    where: v0_complete_redelegations_bool_exp
  ): [v0_complete_redelegations!]!

  """
  fetch aggregated fields from the table: "v0.complete_redelegations"
  """
  v0_complete_redelegations_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_complete_redelegations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_complete_redelegations_order_by!]

    """filter the rows returned"""
    where: v0_complete_redelegations_bool_exp
  ): v0_complete_redelegations_aggregate!

  """
  fetch data from the table: "v0.connection_open_acks"
  """
  v0_connection_open_acks(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_acks_bool_exp
  ): [v0_connection_open_acks!]!

  """
  fetch aggregated fields from the table: "v0.connection_open_acks"
  """
  v0_connection_open_acks_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_acks_bool_exp
  ): v0_connection_open_acks_aggregate!

  """
  fetch data from the table: "v0.connection_open_inits"
  """
  v0_connection_open_inits(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_inits_bool_exp
  ): [v0_connection_open_inits!]!

  """
  fetch aggregated fields from the table: "v0.connection_open_inits"
  """
  v0_connection_open_inits_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_inits_bool_exp
  ): v0_connection_open_inits_aggregate!

  """
  fetch data from the table: "v0.consensus_param_updates"
  """
  v0_consensus_param_updates(
    """distinct select on columns"""
    distinct_on: [v0_consensus_param_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_consensus_param_updates_order_by!]

    """filter the rows returned"""
    where: v0_consensus_param_updates_bool_exp
  ): [v0_consensus_param_updates!]!

  """
  fetch aggregated fields from the table: "v0.consensus_param_updates"
  """
  v0_consensus_param_updates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_consensus_param_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_consensus_param_updates_order_by!]

    """filter the rows returned"""
    where: v0_consensus_param_updates_bool_exp
  ): v0_consensus_param_updates_aggregate!

  """
  fetch data from the table: "v0.create_clients"
  """
  v0_create_clients(
    """distinct select on columns"""
    distinct_on: [v0_create_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_clients_order_by!]

    """filter the rows returned"""
    where: v0_create_clients_bool_exp
  ): [v0_create_clients!]!

  """
  fetch aggregated fields from the table: "v0.create_clients"
  """
  v0_create_clients_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_create_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_clients_order_by!]

    """filter the rows returned"""
    where: v0_create_clients_bool_exp
  ): v0_create_clients_aggregate!

  """
  fetch data from the table: "v0.create_validators"
  """
  v0_create_validators(
    """distinct select on columns"""
    distinct_on: [v0_create_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_validators_order_by!]

    """filter the rows returned"""
    where: v0_create_validators_bool_exp
  ): [v0_create_validators!]!

  """
  fetch aggregated fields from the table: "v0.create_validators"
  """
  v0_create_validators_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_create_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_validators_order_by!]

    """filter the rows returned"""
    where: v0_create_validators_bool_exp
  ): v0_create_validators_aggregate!

  """
  fetch data from the table: "v0.delegates"
  """
  v0_delegates(
    """distinct select on columns"""
    distinct_on: [v0_delegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_delegates_order_by!]

    """filter the rows returned"""
    where: v0_delegates_bool_exp
  ): [v0_delegates!]!

  """
  fetch aggregated fields from the table: "v0.delegates"
  """
  v0_delegates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_delegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_delegates_order_by!]

    """filter the rows returned"""
    where: v0_delegates_bool_exp
  ): v0_delegates_aggregate!

  """
  fetch data from the table: "v0.edit_validators"
  """
  v0_edit_validators(
    """distinct select on columns"""
    distinct_on: [v0_edit_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_edit_validators_order_by!]

    """filter the rows returned"""
    where: v0_edit_validators_bool_exp
  ): [v0_edit_validators!]!

  """
  fetch aggregated fields from the table: "v0.edit_validators"
  """
  v0_edit_validators_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_edit_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_edit_validators_order_by!]

    """filter the rows returned"""
    where: v0_edit_validators_bool_exp
  ): v0_edit_validators_aggregate!

  """
  fetch data from the table: "v0.events"
  """
  v0_events(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): [v0_events!]!

  """
  fetch aggregated fields from the table: "v0.events"
  """
  v0_events_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): v0_events_aggregate!

  """fetch data from the table: "v0.events" using primary key columns"""
  v0_events_by_pk(block_hash: String!, chain_id: Int!, index: Int!): v0_events

  """
  fetch data from the table: "v0.executes"
  """
  v0_executes(
    """distinct select on columns"""
    distinct_on: [v0_executes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_executes_order_by!]

    """filter the rows returned"""
    where: v0_executes_bool_exp
  ): [v0_executes!]!

  """
  fetch aggregated fields from the table: "v0.executes"
  """
  v0_executes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_executes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_executes_order_by!]

    """filter the rows returned"""
    where: v0_executes_bool_exp
  ): v0_executes_aggregate!

  """
  fetch data from the table: "v0.ibc_packet_receiveds"
  """
  v0_ibc_packet_receiveds(
    """distinct select on columns"""
    distinct_on: [v0_ibc_packet_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_ibc_packet_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_ibc_packet_receiveds_bool_exp
  ): [v0_ibc_packet_receiveds!]!

  """
  fetch aggregated fields from the table: "v0.ibc_packet_receiveds"
  """
  v0_ibc_packet_receiveds_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_ibc_packet_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_ibc_packet_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_ibc_packet_receiveds_bool_exp
  ): v0_ibc_packet_receiveds_aggregate!

  """
  fetch data from the table: "v0.instantiates"
  """
  v0_instantiates(
    """distinct select on columns"""
    distinct_on: [v0_instantiates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_instantiates_order_by!]

    """filter the rows returned"""
    where: v0_instantiates_bool_exp
  ): [v0_instantiates!]!

  """
  fetch aggregated fields from the table: "v0.instantiates"
  """
  v0_instantiates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_instantiates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_instantiates_order_by!]

    """filter the rows returned"""
    where: v0_instantiates_bool_exp
  ): v0_instantiates_aggregate!

  """
  fetch data from the table: "v0.livenesses"
  """
  v0_livenesses(
    """distinct select on columns"""
    distinct_on: [v0_livenesses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_livenesses_order_by!]

    """filter the rows returned"""
    where: v0_livenesses_bool_exp
  ): [v0_livenesses!]!

  """
  fetch aggregated fields from the table: "v0.livenesses"
  """
  v0_livenesses_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_livenesses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_livenesses_order_by!]

    """filter the rows returned"""
    where: v0_livenesses_bool_exp
  ): v0_livenesses_aggregate!

  """
  fetch data from the table: "v0.logs"
  """
  v0_logs(
    """distinct select on columns"""
    distinct_on: [v0_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_logs_order_by!]

    """filter the rows returned"""
    where: v0_logs_bool_exp
  ): [v0_logs!]!

  """
  fetch aggregated fields from the table: "v0.logs"
  """
  v0_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_logs_order_by!]

    """filter the rows returned"""
    where: v0_logs_bool_exp
  ): v0_logs_aggregate!

  """fetch data from the table: "v0.logs" using primary key columns"""
  v0_logs_by_pk(block_hash: String!, chain_id: Int!): v0_logs

  """
  fetch data from the table: "v0.messages"
  """
  v0_messages(
    """distinct select on columns"""
    distinct_on: [v0_messages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_messages_order_by!]

    """filter the rows returned"""
    where: v0_messages_bool_exp
  ): [v0_messages!]!

  """
  fetch aggregated fields from the table: "v0.messages"
  """
  v0_messages_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_messages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_messages_order_by!]

    """filter the rows returned"""
    where: v0_messages_bool_exp
  ): v0_messages_aggregate!

  """
  fetch data from the table: "v0.mints"
  """
  v0_mints(
    """distinct select on columns"""
    distinct_on: [v0_mints_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_mints_order_by!]

    """filter the rows returned"""
    where: v0_mints_bool_exp
  ): [v0_mints!]!

  """
  fetch aggregated fields from the table: "v0.mints"
  """
  v0_mints_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_mints_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_mints_order_by!]

    """filter the rows returned"""
    where: v0_mints_bool_exp
  ): v0_mints_aggregate!

  """
  fetch data from the table: "v0.proposal_deposits"
  """
  v0_proposal_deposits(
    """distinct select on columns"""
    distinct_on: [v0_proposal_deposits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_deposits_order_by!]

    """filter the rows returned"""
    where: v0_proposal_deposits_bool_exp
  ): [v0_proposal_deposits!]!

  """
  fetch aggregated fields from the table: "v0.proposal_deposits"
  """
  v0_proposal_deposits_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_proposal_deposits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_deposits_order_by!]

    """filter the rows returned"""
    where: v0_proposal_deposits_bool_exp
  ): v0_proposal_deposits_aggregate!

  """
  fetch data from the table: "v0.proposal_votes"
  """
  v0_proposal_votes(
    """distinct select on columns"""
    distinct_on: [v0_proposal_votes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_votes_order_by!]

    """filter the rows returned"""
    where: v0_proposal_votes_bool_exp
  ): [v0_proposal_votes!]!

  """
  fetch aggregated fields from the table: "v0.proposal_votes"
  """
  v0_proposal_votes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_proposal_votes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_votes_order_by!]

    """filter the rows returned"""
    where: v0_proposal_votes_bool_exp
  ): v0_proposal_votes_aggregate!

  """
  fetch data from the table: "v0.recv_packets"
  """
  v0_recv_packets(
    """distinct select on columns"""
    distinct_on: [v0_recv_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_recv_packets_order_by!]

    """filter the rows returned"""
    where: v0_recv_packets_bool_exp
  ): [v0_recv_packets!]!

  """
  fetch aggregated fields from the table: "v0.recv_packets"
  """
  v0_recv_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_recv_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_recv_packets_order_by!]

    """filter the rows returned"""
    where: v0_recv_packets_bool_exp
  ): v0_recv_packets_aggregate!

  """
  fetch data from the table: "v0.redelegates"
  """
  v0_redelegates(
    """distinct select on columns"""
    distinct_on: [v0_redelegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_redelegates_order_by!]

    """filter the rows returned"""
    where: v0_redelegates_bool_exp
  ): [v0_redelegates!]!

  """
  fetch aggregated fields from the table: "v0.redelegates"
  """
  v0_redelegates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_redelegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_redelegates_order_by!]

    """filter the rows returned"""
    where: v0_redelegates_bool_exp
  ): v0_redelegates_aggregate!

  """
  fetch data from the table: "v0.replies"
  """
  v0_replies(
    """distinct select on columns"""
    distinct_on: [v0_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_replies_order_by!]

    """filter the rows returned"""
    where: v0_replies_bool_exp
  ): [v0_replies!]!

  """
  fetch aggregated fields from the table: "v0.replies"
  """
  v0_replies_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_replies_order_by!]

    """filter the rows returned"""
    where: v0_replies_bool_exp
  ): v0_replies_aggregate!

  """
  fetch data from the table: "v0.rewardses"
  """
  v0_rewardses(
    """distinct select on columns"""
    distinct_on: [v0_rewardses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_rewardses_order_by!]

    """filter the rows returned"""
    where: v0_rewardses_bool_exp
  ): [v0_rewardses!]!

  """
  fetch aggregated fields from the table: "v0.rewardses"
  """
  v0_rewardses_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_rewardses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_rewardses_order_by!]

    """filter the rows returned"""
    where: v0_rewardses_bool_exp
  ): v0_rewardses_aggregate!

  """
  fetch data from the table: "v0.send_packets"
  """
  v0_send_packets(
    """distinct select on columns"""
    distinct_on: [v0_send_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_send_packets_order_by!]

    """filter the rows returned"""
    where: v0_send_packets_bool_exp
  ): [v0_send_packets!]!

  """
  fetch aggregated fields from the table: "v0.send_packets"
  """
  v0_send_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_send_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_send_packets_order_by!]

    """filter the rows returned"""
    where: v0_send_packets_bool_exp
  ): v0_send_packets_aggregate!

  """
  fetch data from the table: "v0.slashes"
  """
  v0_slashes(
    """distinct select on columns"""
    distinct_on: [v0_slashes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_slashes_order_by!]

    """filter the rows returned"""
    where: v0_slashes_bool_exp
  ): [v0_slashes!]!

  """
  fetch aggregated fields from the table: "v0.slashes"
  """
  v0_slashes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_slashes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_slashes_order_by!]

    """filter the rows returned"""
    where: v0_slashes_bool_exp
  ): v0_slashes_aggregate!

  """
  fetch data from the table: "v0.store_codes"
  """
  v0_store_codes(
    """distinct select on columns"""
    distinct_on: [v0_store_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_codes_bool_exp
  ): [v0_store_codes!]!

  """
  fetch aggregated fields from the table: "v0.store_codes"
  """
  v0_store_codes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_store_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_codes_bool_exp
  ): v0_store_codes_aggregate!

  """
  fetch data from the table: "v0.store_wasm_codes"
  """
  v0_store_wasm_codes(
    """distinct select on columns"""
    distinct_on: [v0_store_wasm_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_wasm_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_wasm_codes_bool_exp
  ): [v0_store_wasm_codes!]!

  """
  fetch aggregated fields from the table: "v0.store_wasm_codes"
  """
  v0_store_wasm_codes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_store_wasm_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_wasm_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_wasm_codes_bool_exp
  ): v0_store_wasm_codes_aggregate!

  """
  fetch data from the table: "v0.submit_proposals"
  """
  v0_submit_proposals(
    """distinct select on columns"""
    distinct_on: [v0_submit_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_submit_proposals_order_by!]

    """filter the rows returned"""
    where: v0_submit_proposals_bool_exp
  ): [v0_submit_proposals!]!

  """
  fetch aggregated fields from the table: "v0.submit_proposals"
  """
  v0_submit_proposals_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_submit_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_submit_proposals_order_by!]

    """filter the rows returned"""
    where: v0_submit_proposals_bool_exp
  ): v0_submit_proposals_aggregate!

  """
  fetch data from the table: "v0.transactions"
  """
  v0_transactions(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): [v0_transactions!]!

  """
  fetch aggregated fields from the table: "v0.transactions"
  """
  v0_transactions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): v0_transactions_aggregate!

  """fetch data from the table: "v0.transactions" using primary key columns"""
  v0_transactions_by_pk(chain_id: Int!, hash: String!): v0_transactions

  """
  fetch data from the table: "v0.transfers"
  """
  v0_transfers(
    """distinct select on columns"""
    distinct_on: [v0_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transfers_order_by!]

    """filter the rows returned"""
    where: v0_transfers_bool_exp
  ): [v0_transfers!]!

  """
  fetch aggregated fields from the table: "v0.transfers"
  """
  v0_transfers_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transfers_order_by!]

    """filter the rows returned"""
    where: v0_transfers_bool_exp
  ): v0_transfers_aggregate!

  """
  fetch data from the table: "v0.update_clients"
  """
  v0_update_clients(
    """distinct select on columns"""
    distinct_on: [v0_update_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_update_clients_order_by!]

    """filter the rows returned"""
    where: v0_update_clients_bool_exp
  ): [v0_update_clients!]!

  """
  fetch aggregated fields from the table: "v0.update_clients"
  """
  v0_update_clients_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_update_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_update_clients_order_by!]

    """filter the rows returned"""
    where: v0_update_clients_bool_exp
  ): v0_update_clients_aggregate!

  """
  fetch data from the table: "v0.validator_updates"
  """
  v0_validator_updates(
    """distinct select on columns"""
    distinct_on: [v0_validator_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_validator_updates_order_by!]

    """filter the rows returned"""
    where: v0_validator_updates_bool_exp
  ): [v0_validator_updates!]!

  """
  fetch aggregated fields from the table: "v0.validator_updates"
  """
  v0_validator_updates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_validator_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_validator_updates_order_by!]

    """filter the rows returned"""
    where: v0_validator_updates_bool_exp
  ): v0_validator_updates_aggregate!

  """
  fetch data from the table: "v0.wasm_fungible_token_packets"
  """
  v0_wasm_fungible_token_packets(
    """distinct select on columns"""
    distinct_on: [v0_wasm_fungible_token_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_fungible_token_packets_order_by!]

    """filter the rows returned"""
    where: v0_wasm_fungible_token_packets_bool_exp
  ): [v0_wasm_fungible_token_packets!]!

  """
  fetch aggregated fields from the table: "v0.wasm_fungible_token_packets"
  """
  v0_wasm_fungible_token_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_wasm_fungible_token_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_fungible_token_packets_order_by!]

    """filter the rows returned"""
    where: v0_wasm_fungible_token_packets_bool_exp
  ): v0_wasm_fungible_token_packets_aggregate!

  """
  fetch data from the table: "v0.wasm_ibc_transfers"
  """
  v0_wasm_ibc_transfers(
    """distinct select on columns"""
    distinct_on: [v0_wasm_ibc_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_ibc_transfers_order_by!]

    """filter the rows returned"""
    where: v0_wasm_ibc_transfers_bool_exp
  ): [v0_wasm_ibc_transfers!]!

  """
  fetch aggregated fields from the table: "v0.wasm_ibc_transfers"
  """
  v0_wasm_ibc_transfers_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_wasm_ibc_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_ibc_transfers_order_by!]

    """filter the rows returned"""
    where: v0_wasm_ibc_transfers_bool_exp
  ): v0_wasm_ibc_transfers_aggregate!

  """
  fetch data from the table: "v0.wasm_message"
  """
  v0_wasm_message(
    """distinct select on columns"""
    distinct_on: [v0_wasm_message_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_message_order_by!]

    """filter the rows returned"""
    where: v0_wasm_message_bool_exp
  ): [v0_wasm_message!]!

  """
  fetch aggregated fields from the table: "v0.wasm_message"
  """
  v0_wasm_message_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_wasm_message_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_message_order_by!]

    """filter the rows returned"""
    where: v0_wasm_message_bool_exp
  ): v0_wasm_message_aggregate!

  """
  fetch data from the table: "v0.withdraw_commissions"
  """
  v0_withdraw_commissions(
    """distinct select on columns"""
    distinct_on: [v0_withdraw_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_withdraw_commissions_order_by!]

    """filter the rows returned"""
    where: v0_withdraw_commissions_bool_exp
  ): [v0_withdraw_commissions!]!

  """
  fetch aggregated fields from the table: "v0.withdraw_commissions"
  """
  v0_withdraw_commissions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_withdraw_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_withdraw_commissions_order_by!]

    """filter the rows returned"""
    where: v0_withdraw_commissions_bool_exp
  ): v0_withdraw_commissions_aggregate!
}

type subscription_root {
  union: unionSubscription

  """
  fetch data from the table: "v0.abis"
  """
  v0_abis(
    """distinct select on columns"""
    distinct_on: [v0_abis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_abis_order_by!]

    """filter the rows returned"""
    where: v0_abis_bool_exp
  ): [v0_abis!]!

  """
  fetch aggregated fields from the table: "v0.abis"
  """
  v0_abis_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_abis_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_abis_order_by!]

    """filter the rows returned"""
    where: v0_abis_bool_exp
  ): v0_abis_aggregate!

  """fetch data from the table: "v0.abis" using primary key columns"""
  v0_abis_by_pk(id: Int!): v0_abis

  """
  fetch data from the table in a streaming manner: "v0.abis"
  """
  v0_abis_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_abis_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_abis_bool_exp
  ): [v0_abis!]!

  """
  fetch data from the table: "v0.acknowledge_packets"
  """
  v0_acknowledge_packets(
    """distinct select on columns"""
    distinct_on: [v0_acknowledge_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_acknowledge_packets_order_by!]

    """filter the rows returned"""
    where: v0_acknowledge_packets_bool_exp
  ): [v0_acknowledge_packets!]!

  """
  fetch aggregated fields from the table: "v0.acknowledge_packets"
  """
  v0_acknowledge_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_acknowledge_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_acknowledge_packets_order_by!]

    """filter the rows returned"""
    where: v0_acknowledge_packets_bool_exp
  ): v0_acknowledge_packets_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.acknowledge_packets"
  """
  v0_acknowledge_packets_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_acknowledge_packets_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_acknowledge_packets_bool_exp
  ): [v0_acknowledge_packets!]!

  """
  fetch data from the table: "v0.active_proposals"
  """
  v0_active_proposals(
    """distinct select on columns"""
    distinct_on: [v0_active_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_active_proposals_order_by!]

    """filter the rows returned"""
    where: v0_active_proposals_bool_exp
  ): [v0_active_proposals!]!

  """
  fetch aggregated fields from the table: "v0.active_proposals"
  """
  v0_active_proposals_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_active_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_active_proposals_order_by!]

    """filter the rows returned"""
    where: v0_active_proposals_bool_exp
  ): v0_active_proposals_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.active_proposals"
  """
  v0_active_proposals_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_active_proposals_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_active_proposals_bool_exp
  ): [v0_active_proposals!]!

  """
  fetch data from the table: "v0.blocks"
  """
  v0_blocks(
    """distinct select on columns"""
    distinct_on: [v0_blocks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_blocks_order_by!]

    """filter the rows returned"""
    where: v0_blocks_bool_exp
  ): [v0_blocks!]!

  """
  fetch aggregated fields from the table: "v0.blocks"
  """
  v0_blocks_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_blocks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_blocks_order_by!]

    """filter the rows returned"""
    where: v0_blocks_bool_exp
  ): v0_blocks_aggregate!

  """fetch data from the table: "v0.blocks" using primary key columns"""
  v0_blocks_by_pk(chain_id: Int!, hash: String!): v0_blocks

  """
  fetch data from the table in a streaming manner: "v0.blocks"
  """
  v0_blocks_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_blocks_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_blocks_bool_exp
  ): [v0_blocks!]!

  """
  fetch data from the table: "v0.burns"
  """
  v0_burns(
    """distinct select on columns"""
    distinct_on: [v0_burns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_burns_order_by!]

    """filter the rows returned"""
    where: v0_burns_bool_exp
  ): [v0_burns!]!

  """
  fetch aggregated fields from the table: "v0.burns"
  """
  v0_burns_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_burns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_burns_order_by!]

    """filter the rows returned"""
    where: v0_burns_bool_exp
  ): v0_burns_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.burns"
  """
  v0_burns_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_burns_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_burns_bool_exp
  ): [v0_burns!]!

  """
  fetch data from the table: "v0.chains"
  """
  v0_chains(
    """distinct select on columns"""
    distinct_on: [v0_chains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_chains_order_by!]

    """filter the rows returned"""
    where: v0_chains_bool_exp
  ): [v0_chains!]!

  """
  fetch aggregated fields from the table: "v0.chains"
  """
  v0_chains_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_chains_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_chains_order_by!]

    """filter the rows returned"""
    where: v0_chains_bool_exp
  ): v0_chains_aggregate!

  """fetch data from the table: "v0.chains" using primary key columns"""
  v0_chains_by_pk(id: Int!): v0_chains

  """
  fetch data from the table in a streaming manner: "v0.chains"
  """
  v0_chains_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_chains_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_chains_bool_exp
  ): [v0_chains!]!

  """
  fetch data from the table: "v0.channel_open_acks"
  """
  v0_channel_open_acks(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_acks_bool_exp
  ): [v0_channel_open_acks!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_acks"
  """
  v0_channel_open_acks_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_acks_bool_exp
  ): v0_channel_open_acks_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.channel_open_acks"
  """
  v0_channel_open_acks_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_channel_open_acks_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_channel_open_acks_bool_exp
  ): [v0_channel_open_acks!]!

  """
  fetch data from the table: "v0.channel_open_confirms"
  """
  v0_channel_open_confirms(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_confirms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_confirms_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_confirms_bool_exp
  ): [v0_channel_open_confirms!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_confirms"
  """
  v0_channel_open_confirms_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_confirms_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_confirms_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_confirms_bool_exp
  ): v0_channel_open_confirms_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.channel_open_confirms"
  """
  v0_channel_open_confirms_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_channel_open_confirms_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_channel_open_confirms_bool_exp
  ): [v0_channel_open_confirms!]!

  """
  fetch data from the table: "v0.channel_open_inits"
  """
  v0_channel_open_inits(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_inits_bool_exp
  ): [v0_channel_open_inits!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_inits"
  """
  v0_channel_open_inits_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_inits_bool_exp
  ): v0_channel_open_inits_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.channel_open_inits"
  """
  v0_channel_open_inits_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_channel_open_inits_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_channel_open_inits_bool_exp
  ): [v0_channel_open_inits!]!

  """
  fetch data from the table: "v0.channel_open_tries"
  """
  v0_channel_open_tries(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_tries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_tries_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_tries_bool_exp
  ): [v0_channel_open_tries!]!

  """
  fetch aggregated fields from the table: "v0.channel_open_tries"
  """
  v0_channel_open_tries_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_channel_open_tries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_channel_open_tries_order_by!]

    """filter the rows returned"""
    where: v0_channel_open_tries_bool_exp
  ): v0_channel_open_tries_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.channel_open_tries"
  """
  v0_channel_open_tries_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_channel_open_tries_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_channel_open_tries_bool_exp
  ): [v0_channel_open_tries!]!

  """
  fetch data from the table: "v0.coin_receiveds"
  """
  v0_coin_receiveds(
    """distinct select on columns"""
    distinct_on: [v0_coin_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_coin_receiveds_bool_exp
  ): [v0_coin_receiveds!]!

  """
  fetch aggregated fields from the table: "v0.coin_receiveds"
  """
  v0_coin_receiveds_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_coin_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_coin_receiveds_bool_exp
  ): v0_coin_receiveds_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.coin_receiveds"
  """
  v0_coin_receiveds_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_coin_receiveds_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_coin_receiveds_bool_exp
  ): [v0_coin_receiveds!]!

  """
  fetch data from the table: "v0.coin_spents"
  """
  v0_coin_spents(
    """distinct select on columns"""
    distinct_on: [v0_coin_spents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_spents_order_by!]

    """filter the rows returned"""
    where: v0_coin_spents_bool_exp
  ): [v0_coin_spents!]!

  """
  fetch aggregated fields from the table: "v0.coin_spents"
  """
  v0_coin_spents_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_coin_spents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coin_spents_order_by!]

    """filter the rows returned"""
    where: v0_coin_spents_bool_exp
  ): v0_coin_spents_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.coin_spents"
  """
  v0_coin_spents_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_coin_spents_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_coin_spents_bool_exp
  ): [v0_coin_spents!]!

  """
  fetch data from the table: "v0.coinbases"
  """
  v0_coinbases(
    """distinct select on columns"""
    distinct_on: [v0_coinbases_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coinbases_order_by!]

    """filter the rows returned"""
    where: v0_coinbases_bool_exp
  ): [v0_coinbases!]!

  """
  fetch aggregated fields from the table: "v0.coinbases"
  """
  v0_coinbases_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_coinbases_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_coinbases_order_by!]

    """filter the rows returned"""
    where: v0_coinbases_bool_exp
  ): v0_coinbases_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.coinbases"
  """
  v0_coinbases_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_coinbases_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_coinbases_bool_exp
  ): [v0_coinbases!]!

  """
  fetch data from the table: "v0.commissions"
  """
  v0_commissions(
    """distinct select on columns"""
    distinct_on: [v0_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_commissions_order_by!]

    """filter the rows returned"""
    where: v0_commissions_bool_exp
  ): [v0_commissions!]!

  """
  fetch aggregated fields from the table: "v0.commissions"
  """
  v0_commissions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_commissions_order_by!]

    """filter the rows returned"""
    where: v0_commissions_bool_exp
  ): v0_commissions_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.commissions"
  """
  v0_commissions_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_commissions_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_commissions_bool_exp
  ): [v0_commissions!]!

  """
  fetch data from the table: "v0.complete_redelegations"
  """
  v0_complete_redelegations(
    """distinct select on columns"""
    distinct_on: [v0_complete_redelegations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_complete_redelegations_order_by!]

    """filter the rows returned"""
    where: v0_complete_redelegations_bool_exp
  ): [v0_complete_redelegations!]!

  """
  fetch aggregated fields from the table: "v0.complete_redelegations"
  """
  v0_complete_redelegations_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_complete_redelegations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_complete_redelegations_order_by!]

    """filter the rows returned"""
    where: v0_complete_redelegations_bool_exp
  ): v0_complete_redelegations_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.complete_redelegations"
  """
  v0_complete_redelegations_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_complete_redelegations_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_complete_redelegations_bool_exp
  ): [v0_complete_redelegations!]!

  """
  fetch data from the table: "v0.connection_open_acks"
  """
  v0_connection_open_acks(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_acks_bool_exp
  ): [v0_connection_open_acks!]!

  """
  fetch aggregated fields from the table: "v0.connection_open_acks"
  """
  v0_connection_open_acks_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_acks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_acks_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_acks_bool_exp
  ): v0_connection_open_acks_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.connection_open_acks"
  """
  v0_connection_open_acks_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_connection_open_acks_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_connection_open_acks_bool_exp
  ): [v0_connection_open_acks!]!

  """
  fetch data from the table: "v0.connection_open_inits"
  """
  v0_connection_open_inits(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_inits_bool_exp
  ): [v0_connection_open_inits!]!

  """
  fetch aggregated fields from the table: "v0.connection_open_inits"
  """
  v0_connection_open_inits_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_connection_open_inits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_connection_open_inits_order_by!]

    """filter the rows returned"""
    where: v0_connection_open_inits_bool_exp
  ): v0_connection_open_inits_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.connection_open_inits"
  """
  v0_connection_open_inits_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_connection_open_inits_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_connection_open_inits_bool_exp
  ): [v0_connection_open_inits!]!

  """
  fetch data from the table: "v0.consensus_param_updates"
  """
  v0_consensus_param_updates(
    """distinct select on columns"""
    distinct_on: [v0_consensus_param_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_consensus_param_updates_order_by!]

    """filter the rows returned"""
    where: v0_consensus_param_updates_bool_exp
  ): [v0_consensus_param_updates!]!

  """
  fetch aggregated fields from the table: "v0.consensus_param_updates"
  """
  v0_consensus_param_updates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_consensus_param_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_consensus_param_updates_order_by!]

    """filter the rows returned"""
    where: v0_consensus_param_updates_bool_exp
  ): v0_consensus_param_updates_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.consensus_param_updates"
  """
  v0_consensus_param_updates_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_consensus_param_updates_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_consensus_param_updates_bool_exp
  ): [v0_consensus_param_updates!]!

  """
  fetch data from the table: "v0.create_clients"
  """
  v0_create_clients(
    """distinct select on columns"""
    distinct_on: [v0_create_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_clients_order_by!]

    """filter the rows returned"""
    where: v0_create_clients_bool_exp
  ): [v0_create_clients!]!

  """
  fetch aggregated fields from the table: "v0.create_clients"
  """
  v0_create_clients_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_create_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_clients_order_by!]

    """filter the rows returned"""
    where: v0_create_clients_bool_exp
  ): v0_create_clients_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.create_clients"
  """
  v0_create_clients_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_create_clients_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_create_clients_bool_exp
  ): [v0_create_clients!]!

  """
  fetch data from the table: "v0.create_validators"
  """
  v0_create_validators(
    """distinct select on columns"""
    distinct_on: [v0_create_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_validators_order_by!]

    """filter the rows returned"""
    where: v0_create_validators_bool_exp
  ): [v0_create_validators!]!

  """
  fetch aggregated fields from the table: "v0.create_validators"
  """
  v0_create_validators_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_create_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_create_validators_order_by!]

    """filter the rows returned"""
    where: v0_create_validators_bool_exp
  ): v0_create_validators_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.create_validators"
  """
  v0_create_validators_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_create_validators_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_create_validators_bool_exp
  ): [v0_create_validators!]!

  """
  fetch data from the table: "v0.delegates"
  """
  v0_delegates(
    """distinct select on columns"""
    distinct_on: [v0_delegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_delegates_order_by!]

    """filter the rows returned"""
    where: v0_delegates_bool_exp
  ): [v0_delegates!]!

  """
  fetch aggregated fields from the table: "v0.delegates"
  """
  v0_delegates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_delegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_delegates_order_by!]

    """filter the rows returned"""
    where: v0_delegates_bool_exp
  ): v0_delegates_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.delegates"
  """
  v0_delegates_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_delegates_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_delegates_bool_exp
  ): [v0_delegates!]!

  """
  fetch data from the table: "v0.edit_validators"
  """
  v0_edit_validators(
    """distinct select on columns"""
    distinct_on: [v0_edit_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_edit_validators_order_by!]

    """filter the rows returned"""
    where: v0_edit_validators_bool_exp
  ): [v0_edit_validators!]!

  """
  fetch aggregated fields from the table: "v0.edit_validators"
  """
  v0_edit_validators_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_edit_validators_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_edit_validators_order_by!]

    """filter the rows returned"""
    where: v0_edit_validators_bool_exp
  ): v0_edit_validators_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.edit_validators"
  """
  v0_edit_validators_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_edit_validators_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_edit_validators_bool_exp
  ): [v0_edit_validators!]!

  """
  fetch data from the table: "v0.events"
  """
  v0_events(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): [v0_events!]!

  """
  fetch aggregated fields from the table: "v0.events"
  """
  v0_events_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): v0_events_aggregate!

  """fetch data from the table: "v0.events" using primary key columns"""
  v0_events_by_pk(block_hash: String!, chain_id: Int!, index: Int!): v0_events

  """
  fetch data from the table in a streaming manner: "v0.events"
  """
  v0_events_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_events_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): [v0_events!]!

  """
  fetch data from the table: "v0.executes"
  """
  v0_executes(
    """distinct select on columns"""
    distinct_on: [v0_executes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_executes_order_by!]

    """filter the rows returned"""
    where: v0_executes_bool_exp
  ): [v0_executes!]!

  """
  fetch aggregated fields from the table: "v0.executes"
  """
  v0_executes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_executes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_executes_order_by!]

    """filter the rows returned"""
    where: v0_executes_bool_exp
  ): v0_executes_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.executes"
  """
  v0_executes_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_executes_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_executes_bool_exp
  ): [v0_executes!]!

  """
  fetch data from the table: "v0.ibc_packet_receiveds"
  """
  v0_ibc_packet_receiveds(
    """distinct select on columns"""
    distinct_on: [v0_ibc_packet_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_ibc_packet_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_ibc_packet_receiveds_bool_exp
  ): [v0_ibc_packet_receiveds!]!

  """
  fetch aggregated fields from the table: "v0.ibc_packet_receiveds"
  """
  v0_ibc_packet_receiveds_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_ibc_packet_receiveds_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_ibc_packet_receiveds_order_by!]

    """filter the rows returned"""
    where: v0_ibc_packet_receiveds_bool_exp
  ): v0_ibc_packet_receiveds_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.ibc_packet_receiveds"
  """
  v0_ibc_packet_receiveds_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_ibc_packet_receiveds_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_ibc_packet_receiveds_bool_exp
  ): [v0_ibc_packet_receiveds!]!

  """
  fetch data from the table: "v0.instantiates"
  """
  v0_instantiates(
    """distinct select on columns"""
    distinct_on: [v0_instantiates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_instantiates_order_by!]

    """filter the rows returned"""
    where: v0_instantiates_bool_exp
  ): [v0_instantiates!]!

  """
  fetch aggregated fields from the table: "v0.instantiates"
  """
  v0_instantiates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_instantiates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_instantiates_order_by!]

    """filter the rows returned"""
    where: v0_instantiates_bool_exp
  ): v0_instantiates_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.instantiates"
  """
  v0_instantiates_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_instantiates_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_instantiates_bool_exp
  ): [v0_instantiates!]!

  """
  fetch data from the table: "v0.livenesses"
  """
  v0_livenesses(
    """distinct select on columns"""
    distinct_on: [v0_livenesses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_livenesses_order_by!]

    """filter the rows returned"""
    where: v0_livenesses_bool_exp
  ): [v0_livenesses!]!

  """
  fetch aggregated fields from the table: "v0.livenesses"
  """
  v0_livenesses_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_livenesses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_livenesses_order_by!]

    """filter the rows returned"""
    where: v0_livenesses_bool_exp
  ): v0_livenesses_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.livenesses"
  """
  v0_livenesses_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_livenesses_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_livenesses_bool_exp
  ): [v0_livenesses!]!

  """
  fetch data from the table: "v0.logs"
  """
  v0_logs(
    """distinct select on columns"""
    distinct_on: [v0_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_logs_order_by!]

    """filter the rows returned"""
    where: v0_logs_bool_exp
  ): [v0_logs!]!

  """
  fetch aggregated fields from the table: "v0.logs"
  """
  v0_logs_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_logs_order_by!]

    """filter the rows returned"""
    where: v0_logs_bool_exp
  ): v0_logs_aggregate!

  """fetch data from the table: "v0.logs" using primary key columns"""
  v0_logs_by_pk(block_hash: String!, chain_id: Int!): v0_logs

  """
  fetch data from the table in a streaming manner: "v0.logs"
  """
  v0_logs_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_logs_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_logs_bool_exp
  ): [v0_logs!]!

  """
  fetch data from the table: "v0.messages"
  """
  v0_messages(
    """distinct select on columns"""
    distinct_on: [v0_messages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_messages_order_by!]

    """filter the rows returned"""
    where: v0_messages_bool_exp
  ): [v0_messages!]!

  """
  fetch aggregated fields from the table: "v0.messages"
  """
  v0_messages_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_messages_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_messages_order_by!]

    """filter the rows returned"""
    where: v0_messages_bool_exp
  ): v0_messages_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.messages"
  """
  v0_messages_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_messages_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_messages_bool_exp
  ): [v0_messages!]!

  """
  fetch data from the table: "v0.mints"
  """
  v0_mints(
    """distinct select on columns"""
    distinct_on: [v0_mints_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_mints_order_by!]

    """filter the rows returned"""
    where: v0_mints_bool_exp
  ): [v0_mints!]!

  """
  fetch aggregated fields from the table: "v0.mints"
  """
  v0_mints_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_mints_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_mints_order_by!]

    """filter the rows returned"""
    where: v0_mints_bool_exp
  ): v0_mints_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.mints"
  """
  v0_mints_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_mints_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_mints_bool_exp
  ): [v0_mints!]!

  """
  fetch data from the table: "v0.proposal_deposits"
  """
  v0_proposal_deposits(
    """distinct select on columns"""
    distinct_on: [v0_proposal_deposits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_deposits_order_by!]

    """filter the rows returned"""
    where: v0_proposal_deposits_bool_exp
  ): [v0_proposal_deposits!]!

  """
  fetch aggregated fields from the table: "v0.proposal_deposits"
  """
  v0_proposal_deposits_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_proposal_deposits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_deposits_order_by!]

    """filter the rows returned"""
    where: v0_proposal_deposits_bool_exp
  ): v0_proposal_deposits_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.proposal_deposits"
  """
  v0_proposal_deposits_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_proposal_deposits_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_proposal_deposits_bool_exp
  ): [v0_proposal_deposits!]!

  """
  fetch data from the table: "v0.proposal_votes"
  """
  v0_proposal_votes(
    """distinct select on columns"""
    distinct_on: [v0_proposal_votes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_votes_order_by!]

    """filter the rows returned"""
    where: v0_proposal_votes_bool_exp
  ): [v0_proposal_votes!]!

  """
  fetch aggregated fields from the table: "v0.proposal_votes"
  """
  v0_proposal_votes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_proposal_votes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_proposal_votes_order_by!]

    """filter the rows returned"""
    where: v0_proposal_votes_bool_exp
  ): v0_proposal_votes_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.proposal_votes"
  """
  v0_proposal_votes_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_proposal_votes_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_proposal_votes_bool_exp
  ): [v0_proposal_votes!]!

  """
  fetch data from the table: "v0.recv_packets"
  """
  v0_recv_packets(
    """distinct select on columns"""
    distinct_on: [v0_recv_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_recv_packets_order_by!]

    """filter the rows returned"""
    where: v0_recv_packets_bool_exp
  ): [v0_recv_packets!]!

  """
  fetch aggregated fields from the table: "v0.recv_packets"
  """
  v0_recv_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_recv_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_recv_packets_order_by!]

    """filter the rows returned"""
    where: v0_recv_packets_bool_exp
  ): v0_recv_packets_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.recv_packets"
  """
  v0_recv_packets_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_recv_packets_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_recv_packets_bool_exp
  ): [v0_recv_packets!]!

  """
  fetch data from the table: "v0.redelegates"
  """
  v0_redelegates(
    """distinct select on columns"""
    distinct_on: [v0_redelegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_redelegates_order_by!]

    """filter the rows returned"""
    where: v0_redelegates_bool_exp
  ): [v0_redelegates!]!

  """
  fetch aggregated fields from the table: "v0.redelegates"
  """
  v0_redelegates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_redelegates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_redelegates_order_by!]

    """filter the rows returned"""
    where: v0_redelegates_bool_exp
  ): v0_redelegates_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.redelegates"
  """
  v0_redelegates_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_redelegates_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_redelegates_bool_exp
  ): [v0_redelegates!]!

  """
  fetch data from the table: "v0.replies"
  """
  v0_replies(
    """distinct select on columns"""
    distinct_on: [v0_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_replies_order_by!]

    """filter the rows returned"""
    where: v0_replies_bool_exp
  ): [v0_replies!]!

  """
  fetch aggregated fields from the table: "v0.replies"
  """
  v0_replies_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_replies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_replies_order_by!]

    """filter the rows returned"""
    where: v0_replies_bool_exp
  ): v0_replies_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.replies"
  """
  v0_replies_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_replies_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_replies_bool_exp
  ): [v0_replies!]!

  """
  fetch data from the table: "v0.rewardses"
  """
  v0_rewardses(
    """distinct select on columns"""
    distinct_on: [v0_rewardses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_rewardses_order_by!]

    """filter the rows returned"""
    where: v0_rewardses_bool_exp
  ): [v0_rewardses!]!

  """
  fetch aggregated fields from the table: "v0.rewardses"
  """
  v0_rewardses_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_rewardses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_rewardses_order_by!]

    """filter the rows returned"""
    where: v0_rewardses_bool_exp
  ): v0_rewardses_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.rewardses"
  """
  v0_rewardses_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_rewardses_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_rewardses_bool_exp
  ): [v0_rewardses!]!

  """
  fetch data from the table: "v0.send_packets"
  """
  v0_send_packets(
    """distinct select on columns"""
    distinct_on: [v0_send_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_send_packets_order_by!]

    """filter the rows returned"""
    where: v0_send_packets_bool_exp
  ): [v0_send_packets!]!

  """
  fetch aggregated fields from the table: "v0.send_packets"
  """
  v0_send_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_send_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_send_packets_order_by!]

    """filter the rows returned"""
    where: v0_send_packets_bool_exp
  ): v0_send_packets_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.send_packets"
  """
  v0_send_packets_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_send_packets_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_send_packets_bool_exp
  ): [v0_send_packets!]!

  """
  fetch data from the table: "v0.slashes"
  """
  v0_slashes(
    """distinct select on columns"""
    distinct_on: [v0_slashes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_slashes_order_by!]

    """filter the rows returned"""
    where: v0_slashes_bool_exp
  ): [v0_slashes!]!

  """
  fetch aggregated fields from the table: "v0.slashes"
  """
  v0_slashes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_slashes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_slashes_order_by!]

    """filter the rows returned"""
    where: v0_slashes_bool_exp
  ): v0_slashes_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.slashes"
  """
  v0_slashes_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_slashes_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_slashes_bool_exp
  ): [v0_slashes!]!

  """
  fetch data from the table: "v0.store_codes"
  """
  v0_store_codes(
    """distinct select on columns"""
    distinct_on: [v0_store_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_codes_bool_exp
  ): [v0_store_codes!]!

  """
  fetch aggregated fields from the table: "v0.store_codes"
  """
  v0_store_codes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_store_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_codes_bool_exp
  ): v0_store_codes_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.store_codes"
  """
  v0_store_codes_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_store_codes_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_store_codes_bool_exp
  ): [v0_store_codes!]!

  """
  fetch data from the table: "v0.store_wasm_codes"
  """
  v0_store_wasm_codes(
    """distinct select on columns"""
    distinct_on: [v0_store_wasm_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_wasm_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_wasm_codes_bool_exp
  ): [v0_store_wasm_codes!]!

  """
  fetch aggregated fields from the table: "v0.store_wasm_codes"
  """
  v0_store_wasm_codes_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_store_wasm_codes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_store_wasm_codes_order_by!]

    """filter the rows returned"""
    where: v0_store_wasm_codes_bool_exp
  ): v0_store_wasm_codes_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.store_wasm_codes"
  """
  v0_store_wasm_codes_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_store_wasm_codes_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_store_wasm_codes_bool_exp
  ): [v0_store_wasm_codes!]!

  """
  fetch data from the table: "v0.submit_proposals"
  """
  v0_submit_proposals(
    """distinct select on columns"""
    distinct_on: [v0_submit_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_submit_proposals_order_by!]

    """filter the rows returned"""
    where: v0_submit_proposals_bool_exp
  ): [v0_submit_proposals!]!

  """
  fetch aggregated fields from the table: "v0.submit_proposals"
  """
  v0_submit_proposals_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_submit_proposals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_submit_proposals_order_by!]

    """filter the rows returned"""
    where: v0_submit_proposals_bool_exp
  ): v0_submit_proposals_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.submit_proposals"
  """
  v0_submit_proposals_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_submit_proposals_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_submit_proposals_bool_exp
  ): [v0_submit_proposals!]!

  """
  fetch data from the table: "v0.transactions"
  """
  v0_transactions(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): [v0_transactions!]!

  """
  fetch aggregated fields from the table: "v0.transactions"
  """
  v0_transactions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): v0_transactions_aggregate!

  """fetch data from the table: "v0.transactions" using primary key columns"""
  v0_transactions_by_pk(chain_id: Int!, hash: String!): v0_transactions

  """
  fetch data from the table in a streaming manner: "v0.transactions"
  """
  v0_transactions_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_transactions_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): [v0_transactions!]!

  """
  fetch data from the table: "v0.transfers"
  """
  v0_transfers(
    """distinct select on columns"""
    distinct_on: [v0_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transfers_order_by!]

    """filter the rows returned"""
    where: v0_transfers_bool_exp
  ): [v0_transfers!]!

  """
  fetch aggregated fields from the table: "v0.transfers"
  """
  v0_transfers_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transfers_order_by!]

    """filter the rows returned"""
    where: v0_transfers_bool_exp
  ): v0_transfers_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.transfers"
  """
  v0_transfers_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_transfers_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_transfers_bool_exp
  ): [v0_transfers!]!

  """
  fetch data from the table: "v0.update_clients"
  """
  v0_update_clients(
    """distinct select on columns"""
    distinct_on: [v0_update_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_update_clients_order_by!]

    """filter the rows returned"""
    where: v0_update_clients_bool_exp
  ): [v0_update_clients!]!

  """
  fetch aggregated fields from the table: "v0.update_clients"
  """
  v0_update_clients_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_update_clients_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_update_clients_order_by!]

    """filter the rows returned"""
    where: v0_update_clients_bool_exp
  ): v0_update_clients_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.update_clients"
  """
  v0_update_clients_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_update_clients_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_update_clients_bool_exp
  ): [v0_update_clients!]!

  """
  fetch data from the table: "v0.validator_updates"
  """
  v0_validator_updates(
    """distinct select on columns"""
    distinct_on: [v0_validator_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_validator_updates_order_by!]

    """filter the rows returned"""
    where: v0_validator_updates_bool_exp
  ): [v0_validator_updates!]!

  """
  fetch aggregated fields from the table: "v0.validator_updates"
  """
  v0_validator_updates_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_validator_updates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_validator_updates_order_by!]

    """filter the rows returned"""
    where: v0_validator_updates_bool_exp
  ): v0_validator_updates_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.validator_updates"
  """
  v0_validator_updates_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_validator_updates_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_validator_updates_bool_exp
  ): [v0_validator_updates!]!

  """
  fetch data from the table: "v0.wasm_fungible_token_packets"
  """
  v0_wasm_fungible_token_packets(
    """distinct select on columns"""
    distinct_on: [v0_wasm_fungible_token_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_fungible_token_packets_order_by!]

    """filter the rows returned"""
    where: v0_wasm_fungible_token_packets_bool_exp
  ): [v0_wasm_fungible_token_packets!]!

  """
  fetch aggregated fields from the table: "v0.wasm_fungible_token_packets"
  """
  v0_wasm_fungible_token_packets_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_wasm_fungible_token_packets_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_fungible_token_packets_order_by!]

    """filter the rows returned"""
    where: v0_wasm_fungible_token_packets_bool_exp
  ): v0_wasm_fungible_token_packets_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.wasm_fungible_token_packets"
  """
  v0_wasm_fungible_token_packets_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_wasm_fungible_token_packets_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_wasm_fungible_token_packets_bool_exp
  ): [v0_wasm_fungible_token_packets!]!

  """
  fetch data from the table: "v0.wasm_ibc_transfers"
  """
  v0_wasm_ibc_transfers(
    """distinct select on columns"""
    distinct_on: [v0_wasm_ibc_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_ibc_transfers_order_by!]

    """filter the rows returned"""
    where: v0_wasm_ibc_transfers_bool_exp
  ): [v0_wasm_ibc_transfers!]!

  """
  fetch aggregated fields from the table: "v0.wasm_ibc_transfers"
  """
  v0_wasm_ibc_transfers_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_wasm_ibc_transfers_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_ibc_transfers_order_by!]

    """filter the rows returned"""
    where: v0_wasm_ibc_transfers_bool_exp
  ): v0_wasm_ibc_transfers_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.wasm_ibc_transfers"
  """
  v0_wasm_ibc_transfers_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_wasm_ibc_transfers_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_wasm_ibc_transfers_bool_exp
  ): [v0_wasm_ibc_transfers!]!

  """
  fetch data from the table: "v0.wasm_message"
  """
  v0_wasm_message(
    """distinct select on columns"""
    distinct_on: [v0_wasm_message_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_message_order_by!]

    """filter the rows returned"""
    where: v0_wasm_message_bool_exp
  ): [v0_wasm_message!]!

  """
  fetch aggregated fields from the table: "v0.wasm_message"
  """
  v0_wasm_message_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_wasm_message_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_wasm_message_order_by!]

    """filter the rows returned"""
    where: v0_wasm_message_bool_exp
  ): v0_wasm_message_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.wasm_message"
  """
  v0_wasm_message_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_wasm_message_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_wasm_message_bool_exp
  ): [v0_wasm_message!]!

  """
  fetch data from the table: "v0.withdraw_commissions"
  """
  v0_withdraw_commissions(
    """distinct select on columns"""
    distinct_on: [v0_withdraw_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_withdraw_commissions_order_by!]

    """filter the rows returned"""
    where: v0_withdraw_commissions_bool_exp
  ): [v0_withdraw_commissions!]!

  """
  fetch aggregated fields from the table: "v0.withdraw_commissions"
  """
  v0_withdraw_commissions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_withdraw_commissions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_withdraw_commissions_order_by!]

    """filter the rows returned"""
    where: v0_withdraw_commissions_bool_exp
  ): v0_withdraw_commissions_aggregate!

  """
  fetch data from the table in a streaming manner: "v0.withdraw_commissions"
  """
  v0_withdraw_commissions_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [v0_withdraw_commissions_stream_cursor_input]!

    """filter the rows returned"""
    where: v0_withdraw_commissions_bool_exp
  ): [v0_withdraw_commissions!]!
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

type unionMutation {
  """
  Send the configured amount of token to the given address, returning nothing as the transaction is made
  asynchronously. A successful invocation means that the send operation is queued and will be processed, but it'll
  does not necessary lead to a successful transaction.
  
  For clients needing information on the underlying transaction state, consider using the `send` subscription.
  """
  send(input: SendInput!): Void
}

type unionQuery {
  """This query allow to get the actual server configuration."""
  configuration: Configuration!
}

type unionSubscription {
  """
  Send the configured amount of token to the given address.
  
  By opening the subscription the send message is added to a queue, once the transaction is successfully submitted
  with all the queued messages it'll return the corresponding before closing the stream. A successful submission does
  not mean it has been successfully written in a block, it is the client's responsibility to make additional checks
  through the transaction's code and hash.
  """
  send(input: SendInput!): TxResponse!
}

"""
columns and relationships of "v0.abis"
"""
type v0_abis {
  abi: String
  address: String!
  chain_id: Int
  height: Int
  id: Int!
}

"""
aggregated selection of "v0.abis"
"""
type v0_abis_aggregate {
  aggregate: v0_abis_aggregate_fields
  nodes: [v0_abis!]!
}

"""
aggregate fields of "v0.abis"
"""
type v0_abis_aggregate_fields {
  avg: v0_abis_avg_fields
  count(columns: [v0_abis_select_column!], distinct: Boolean): Int!
  max: v0_abis_max_fields
  min: v0_abis_min_fields
  stddev: v0_abis_stddev_fields
  stddev_pop: v0_abis_stddev_pop_fields
  stddev_samp: v0_abis_stddev_samp_fields
  sum: v0_abis_sum_fields
  var_pop: v0_abis_var_pop_fields
  var_samp: v0_abis_var_samp_fields
  variance: v0_abis_variance_fields
}

"""aggregate avg on columns"""
type v0_abis_avg_fields {
  chain_id: Float
  height: Float
  id: Float
}

"""
Boolean expression to filter rows from the table "v0.abis". All fields are combined with a logical 'AND'.
"""
input v0_abis_bool_exp {
  _and: [v0_abis_bool_exp!]
  _not: v0_abis_bool_exp
  _or: [v0_abis_bool_exp!]
  abi: String_comparison_exp
  address: String_comparison_exp
  chain_id: Int_comparison_exp
  height: Int_comparison_exp
  id: Int_comparison_exp
}

"""
unique or primary key constraints on table "v0.abis"
"""
enum v0_abis_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  abis_pkey
}

"""
input type for incrementing numeric columns in table "v0.abis"
"""
input v0_abis_inc_input {
  chain_id: Int
  height: Int
  id: Int
}

"""
input type for inserting data into table "v0.abis"
"""
input v0_abis_insert_input {
  abi: String
  address: String
  chain_id: Int
  height: Int
  id: Int
}

"""aggregate max on columns"""
type v0_abis_max_fields {
  abi: String
  address: String
  chain_id: Int
  height: Int
  id: Int
}

"""aggregate min on columns"""
type v0_abis_min_fields {
  abi: String
  address: String
  chain_id: Int
  height: Int
  id: Int
}

"""
response of any mutation on the table "v0.abis"
"""
type v0_abis_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [v0_abis!]!
}

"""
on_conflict condition type for table "v0.abis"
"""
input v0_abis_on_conflict {
  constraint: v0_abis_constraint!
  update_columns: [v0_abis_update_column!]! = []
  where: v0_abis_bool_exp
}

"""Ordering options when selecting data from "v0.abis"."""
input v0_abis_order_by {
  abi: order_by
  address: order_by
  chain_id: order_by
  height: order_by
  id: order_by
}

"""primary key columns input for table: v0.abis"""
input v0_abis_pk_columns_input {
  id: Int!
}

"""
select columns of table "v0.abis"
"""
enum v0_abis_select_column {
  """column name"""
  abi

  """column name"""
  address

  """column name"""
  chain_id

  """column name"""
  height

  """column name"""
  id
}

"""
input type for updating data in table "v0.abis"
"""
input v0_abis_set_input {
  abi: String
  address: String
  chain_id: Int
  height: Int
  id: Int
}

"""aggregate stddev on columns"""
type v0_abis_stddev_fields {
  chain_id: Float
  height: Float
  id: Float
}

"""aggregate stddev_pop on columns"""
type v0_abis_stddev_pop_fields {
  chain_id: Float
  height: Float
  id: Float
}

"""aggregate stddev_samp on columns"""
type v0_abis_stddev_samp_fields {
  chain_id: Float
  height: Float
  id: Float
}

"""
Streaming cursor of the table "v0_abis"
"""
input v0_abis_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_abis_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_abis_stream_cursor_value_input {
  abi: String
  address: String
  chain_id: Int
  height: Int
  id: Int
}

"""aggregate sum on columns"""
type v0_abis_sum_fields {
  chain_id: Int
  height: Int
  id: Int
}

"""
update columns of table "v0.abis"
"""
enum v0_abis_update_column {
  """column name"""
  abi

  """column name"""
  address

  """column name"""
  chain_id

  """column name"""
  height

  """column name"""
  id
}

input v0_abis_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: v0_abis_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: v0_abis_set_input

  """filter the rows which have to be updated"""
  where: v0_abis_bool_exp!
}

"""aggregate var_pop on columns"""
type v0_abis_var_pop_fields {
  chain_id: Float
  height: Float
  id: Float
}

"""aggregate var_samp on columns"""
type v0_abis_var_samp_fields {
  chain_id: Float
  height: Float
  id: Float
}

"""aggregate variance on columns"""
type v0_abis_variance_fields {
  chain_id: Float
  height: Float
  id: Float
}

"""
columns and relationships of "v0.acknowledge_packets"
"""
type v0_acknowledge_packets {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""
aggregated selection of "v0.acknowledge_packets"
"""
type v0_acknowledge_packets_aggregate {
  aggregate: v0_acknowledge_packets_aggregate_fields
  nodes: [v0_acknowledge_packets!]!
}

"""
aggregate fields of "v0.acknowledge_packets"
"""
type v0_acknowledge_packets_aggregate_fields {
  avg: v0_acknowledge_packets_avg_fields
  count(columns: [v0_acknowledge_packets_select_column!], distinct: Boolean): Int!
  max: v0_acknowledge_packets_max_fields
  min: v0_acknowledge_packets_min_fields
  stddev: v0_acknowledge_packets_stddev_fields
  stddev_pop: v0_acknowledge_packets_stddev_pop_fields
  stddev_samp: v0_acknowledge_packets_stddev_samp_fields
  sum: v0_acknowledge_packets_sum_fields
  var_pop: v0_acknowledge_packets_var_pop_fields
  var_samp: v0_acknowledge_packets_var_samp_fields
  variance: v0_acknowledge_packets_variance_fields
}

"""aggregate avg on columns"""
type v0_acknowledge_packets_avg_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
Boolean expression to filter rows from the table "v0.acknowledge_packets". All fields are combined with a logical 'AND'.
"""
input v0_acknowledge_packets_bool_exp {
  _and: [v0_acknowledge_packets_bool_exp!]
  _not: v0_acknowledge_packets_bool_exp
  _or: [v0_acknowledge_packets_bool_exp!]
  connection_id: String_comparison_exp
  msg_index: Int_comparison_exp
  packet_channel_ordering: String_comparison_exp
  packet_connection: String_comparison_exp
  packet_dst_channel: String_comparison_exp
  packet_dst_port: String_comparison_exp
  packet_sequence: numeric_comparison_exp
  packet_src_channel: String_comparison_exp
  packet_src_port: String_comparison_exp
  packet_timeout_height: String_comparison_exp
  packet_timeout_timestamp: numeric_comparison_exp
}

"""aggregate max on columns"""
type v0_acknowledge_packets_max_fields {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""aggregate min on columns"""
type v0_acknowledge_packets_min_fields {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""Ordering options when selecting data from "v0.acknowledge_packets"."""
input v0_acknowledge_packets_order_by {
  connection_id: order_by
  msg_index: order_by
  packet_channel_ordering: order_by
  packet_connection: order_by
  packet_dst_channel: order_by
  packet_dst_port: order_by
  packet_sequence: order_by
  packet_src_channel: order_by
  packet_src_port: order_by
  packet_timeout_height: order_by
  packet_timeout_timestamp: order_by
}

"""
select columns of table "v0.acknowledge_packets"
"""
enum v0_acknowledge_packets_select_column {
  """column name"""
  connection_id

  """column name"""
  msg_index

  """column name"""
  packet_channel_ordering

  """column name"""
  packet_connection

  """column name"""
  packet_dst_channel

  """column name"""
  packet_dst_port

  """column name"""
  packet_sequence

  """column name"""
  packet_src_channel

  """column name"""
  packet_src_port

  """column name"""
  packet_timeout_height

  """column name"""
  packet_timeout_timestamp
}

"""aggregate stddev on columns"""
type v0_acknowledge_packets_stddev_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate stddev_pop on columns"""
type v0_acknowledge_packets_stddev_pop_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate stddev_samp on columns"""
type v0_acknowledge_packets_stddev_samp_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
Streaming cursor of the table "v0_acknowledge_packets"
"""
input v0_acknowledge_packets_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_acknowledge_packets_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_acknowledge_packets_stream_cursor_value_input {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""aggregate sum on columns"""
type v0_acknowledge_packets_sum_fields {
  msg_index: Int
  packet_sequence: numeric
  packet_timeout_timestamp: numeric
}

"""aggregate var_pop on columns"""
type v0_acknowledge_packets_var_pop_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate var_samp on columns"""
type v0_acknowledge_packets_var_samp_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate variance on columns"""
type v0_acknowledge_packets_variance_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
columns and relationships of "v0.active_proposals"
"""
type v0_active_proposals {
  mode: String
  proposal_id: Int
  proposal_log: String
  proposal_result: String
}

"""
aggregated selection of "v0.active_proposals"
"""
type v0_active_proposals_aggregate {
  aggregate: v0_active_proposals_aggregate_fields
  nodes: [v0_active_proposals!]!
}

"""
aggregate fields of "v0.active_proposals"
"""
type v0_active_proposals_aggregate_fields {
  avg: v0_active_proposals_avg_fields
  count(columns: [v0_active_proposals_select_column!], distinct: Boolean): Int!
  max: v0_active_proposals_max_fields
  min: v0_active_proposals_min_fields
  stddev: v0_active_proposals_stddev_fields
  stddev_pop: v0_active_proposals_stddev_pop_fields
  stddev_samp: v0_active_proposals_stddev_samp_fields
  sum: v0_active_proposals_sum_fields
  var_pop: v0_active_proposals_var_pop_fields
  var_samp: v0_active_proposals_var_samp_fields
  variance: v0_active_proposals_variance_fields
}

"""aggregate avg on columns"""
type v0_active_proposals_avg_fields {
  proposal_id: Float
}

"""
Boolean expression to filter rows from the table "v0.active_proposals". All fields are combined with a logical 'AND'.
"""
input v0_active_proposals_bool_exp {
  _and: [v0_active_proposals_bool_exp!]
  _not: v0_active_proposals_bool_exp
  _or: [v0_active_proposals_bool_exp!]
  mode: String_comparison_exp
  proposal_id: Int_comparison_exp
  proposal_log: String_comparison_exp
  proposal_result: String_comparison_exp
}

"""aggregate max on columns"""
type v0_active_proposals_max_fields {
  mode: String
  proposal_id: Int
  proposal_log: String
  proposal_result: String
}

"""aggregate min on columns"""
type v0_active_proposals_min_fields {
  mode: String
  proposal_id: Int
  proposal_log: String
  proposal_result: String
}

"""Ordering options when selecting data from "v0.active_proposals"."""
input v0_active_proposals_order_by {
  mode: order_by
  proposal_id: order_by
  proposal_log: order_by
  proposal_result: order_by
}

"""
select columns of table "v0.active_proposals"
"""
enum v0_active_proposals_select_column {
  """column name"""
  mode

  """column name"""
  proposal_id

  """column name"""
  proposal_log

  """column name"""
  proposal_result
}

"""aggregate stddev on columns"""
type v0_active_proposals_stddev_fields {
  proposal_id: Float
}

"""aggregate stddev_pop on columns"""
type v0_active_proposals_stddev_pop_fields {
  proposal_id: Float
}

"""aggregate stddev_samp on columns"""
type v0_active_proposals_stddev_samp_fields {
  proposal_id: Float
}

"""
Streaming cursor of the table "v0_active_proposals"
"""
input v0_active_proposals_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_active_proposals_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_active_proposals_stream_cursor_value_input {
  mode: String
  proposal_id: Int
  proposal_log: String
  proposal_result: String
}

"""aggregate sum on columns"""
type v0_active_proposals_sum_fields {
  proposal_id: Int
}

"""aggregate var_pop on columns"""
type v0_active_proposals_var_pop_fields {
  proposal_id: Float
}

"""aggregate var_samp on columns"""
type v0_active_proposals_var_samp_fields {
  proposal_id: Float
}

"""aggregate variance on columns"""
type v0_active_proposals_variance_fields {
  proposal_id: Float
}

"""
columns and relationships of "v0.blocks"
"""
type v0_blocks {
  """An object relationship"""
  chain: v0_chains!
  chain_id: Int!
  data(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  events(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): [v0_events!]!

  """An aggregate relationship"""
  events_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): v0_events_aggregate!
  hash: String!
  height: Int!
  time: timestamptz!

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): [v0_transactions!]!

  """An aggregate relationship"""
  transactions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): v0_transactions_aggregate!
}

"""
aggregated selection of "v0.blocks"
"""
type v0_blocks_aggregate {
  aggregate: v0_blocks_aggregate_fields
  nodes: [v0_blocks!]!
}

input v0_blocks_aggregate_bool_exp {
  count: v0_blocks_aggregate_bool_exp_count
}

input v0_blocks_aggregate_bool_exp_count {
  arguments: [v0_blocks_select_column!]
  distinct: Boolean
  filter: v0_blocks_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "v0.blocks"
"""
type v0_blocks_aggregate_fields {
  avg: v0_blocks_avg_fields
  count(columns: [v0_blocks_select_column!], distinct: Boolean): Int!
  max: v0_blocks_max_fields
  min: v0_blocks_min_fields
  stddev: v0_blocks_stddev_fields
  stddev_pop: v0_blocks_stddev_pop_fields
  stddev_samp: v0_blocks_stddev_samp_fields
  sum: v0_blocks_sum_fields
  var_pop: v0_blocks_var_pop_fields
  var_samp: v0_blocks_var_samp_fields
  variance: v0_blocks_variance_fields
}

"""
order by aggregate values of table "v0.blocks"
"""
input v0_blocks_aggregate_order_by {
  avg: v0_blocks_avg_order_by
  count: order_by
  max: v0_blocks_max_order_by
  min: v0_blocks_min_order_by
  stddev: v0_blocks_stddev_order_by
  stddev_pop: v0_blocks_stddev_pop_order_by
  stddev_samp: v0_blocks_stddev_samp_order_by
  sum: v0_blocks_sum_order_by
  var_pop: v0_blocks_var_pop_order_by
  var_samp: v0_blocks_var_samp_order_by
  variance: v0_blocks_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input v0_blocks_append_input {
  data: jsonb
}

"""
input type for inserting array relation for remote table "v0.blocks"
"""
input v0_blocks_arr_rel_insert_input {
  data: [v0_blocks_insert_input!]!

  """upsert condition"""
  on_conflict: v0_blocks_on_conflict
}

"""aggregate avg on columns"""
type v0_blocks_avg_fields {
  chain_id: Float
  height: Float
}

"""
order by avg() on columns of table "v0.blocks"
"""
input v0_blocks_avg_order_by {
  chain_id: order_by
  height: order_by
}

"""
Boolean expression to filter rows from the table "v0.blocks". All fields are combined with a logical 'AND'.
"""
input v0_blocks_bool_exp {
  _and: [v0_blocks_bool_exp!]
  _not: v0_blocks_bool_exp
  _or: [v0_blocks_bool_exp!]
  chain: v0_chains_bool_exp
  chain_id: Int_comparison_exp
  data: jsonb_comparison_exp
  events: v0_events_bool_exp
  events_aggregate: v0_events_aggregate_bool_exp
  hash: String_comparison_exp
  height: Int_comparison_exp
  time: timestamptz_comparison_exp
  transactions: v0_transactions_bool_exp
  transactions_aggregate: v0_transactions_aggregate_bool_exp
}

"""
unique or primary key constraints on table "v0.blocks"
"""
enum v0_blocks_constraint {
  """
  unique or primary key constraint on columns "chain_id", "hash"
  """
  blocks_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input v0_blocks_delete_at_path_input {
  data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input v0_blocks_delete_elem_input {
  data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input v0_blocks_delete_key_input {
  data: String
}

"""
input type for incrementing numeric columns in table "v0.blocks"
"""
input v0_blocks_inc_input {
  chain_id: Int
  height: Int
}

"""
input type for inserting data into table "v0.blocks"
"""
input v0_blocks_insert_input {
  chain: v0_chains_obj_rel_insert_input
  chain_id: Int
  data: jsonb
  events: v0_events_arr_rel_insert_input
  hash: String
  height: Int
  time: timestamptz
  transactions: v0_transactions_arr_rel_insert_input
}

"""aggregate max on columns"""
type v0_blocks_max_fields {
  chain_id: Int
  hash: String
  height: Int
  time: timestamptz
}

"""
order by max() on columns of table "v0.blocks"
"""
input v0_blocks_max_order_by {
  chain_id: order_by
  hash: order_by
  height: order_by
  time: order_by
}

"""aggregate min on columns"""
type v0_blocks_min_fields {
  chain_id: Int
  hash: String
  height: Int
  time: timestamptz
}

"""
order by min() on columns of table "v0.blocks"
"""
input v0_blocks_min_order_by {
  chain_id: order_by
  hash: order_by
  height: order_by
  time: order_by
}

"""
response of any mutation on the table "v0.blocks"
"""
type v0_blocks_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [v0_blocks!]!
}

"""
input type for inserting object relation for remote table "v0.blocks"
"""
input v0_blocks_obj_rel_insert_input {
  data: v0_blocks_insert_input!

  """upsert condition"""
  on_conflict: v0_blocks_on_conflict
}

"""
on_conflict condition type for table "v0.blocks"
"""
input v0_blocks_on_conflict {
  constraint: v0_blocks_constraint!
  update_columns: [v0_blocks_update_column!]! = []
  where: v0_blocks_bool_exp
}

"""Ordering options when selecting data from "v0.blocks"."""
input v0_blocks_order_by {
  chain: v0_chains_order_by
  chain_id: order_by
  data: order_by
  events_aggregate: v0_events_aggregate_order_by
  hash: order_by
  height: order_by
  time: order_by
  transactions_aggregate: v0_transactions_aggregate_order_by
}

"""primary key columns input for table: v0.blocks"""
input v0_blocks_pk_columns_input {
  chain_id: Int!
  hash: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input v0_blocks_prepend_input {
  data: jsonb
}

"""
select columns of table "v0.blocks"
"""
enum v0_blocks_select_column {
  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  hash

  """column name"""
  height

  """column name"""
  time
}

"""
input type for updating data in table "v0.blocks"
"""
input v0_blocks_set_input {
  chain_id: Int
  data: jsonb
  hash: String
  height: Int
  time: timestamptz
}

"""aggregate stddev on columns"""
type v0_blocks_stddev_fields {
  chain_id: Float
  height: Float
}

"""
order by stddev() on columns of table "v0.blocks"
"""
input v0_blocks_stddev_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate stddev_pop on columns"""
type v0_blocks_stddev_pop_fields {
  chain_id: Float
  height: Float
}

"""
order by stddev_pop() on columns of table "v0.blocks"
"""
input v0_blocks_stddev_pop_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate stddev_samp on columns"""
type v0_blocks_stddev_samp_fields {
  chain_id: Float
  height: Float
}

"""
order by stddev_samp() on columns of table "v0.blocks"
"""
input v0_blocks_stddev_samp_order_by {
  chain_id: order_by
  height: order_by
}

"""
Streaming cursor of the table "v0_blocks"
"""
input v0_blocks_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_blocks_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_blocks_stream_cursor_value_input {
  chain_id: Int
  data: jsonb
  hash: String
  height: Int
  time: timestamptz
}

"""aggregate sum on columns"""
type v0_blocks_sum_fields {
  chain_id: Int
  height: Int
}

"""
order by sum() on columns of table "v0.blocks"
"""
input v0_blocks_sum_order_by {
  chain_id: order_by
  height: order_by
}

"""
update columns of table "v0.blocks"
"""
enum v0_blocks_update_column {
  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  hash

  """column name"""
  height

  """column name"""
  time
}

input v0_blocks_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: v0_blocks_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: v0_blocks_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: v0_blocks_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: v0_blocks_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: v0_blocks_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: v0_blocks_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: v0_blocks_set_input

  """filter the rows which have to be updated"""
  where: v0_blocks_bool_exp!
}

"""aggregate var_pop on columns"""
type v0_blocks_var_pop_fields {
  chain_id: Float
  height: Float
}

"""
order by var_pop() on columns of table "v0.blocks"
"""
input v0_blocks_var_pop_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate var_samp on columns"""
type v0_blocks_var_samp_fields {
  chain_id: Float
  height: Float
}

"""
order by var_samp() on columns of table "v0.blocks"
"""
input v0_blocks_var_samp_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate variance on columns"""
type v0_blocks_variance_fields {
  chain_id: Float
  height: Float
}

"""
order by variance() on columns of table "v0.blocks"
"""
input v0_blocks_variance_order_by {
  chain_id: order_by
  height: order_by
}

"""
columns and relationships of "v0.burns"
"""
type v0_burns {
  amount: bigint
  burner: String
  denom: String
  mode: String
}

"""
aggregated selection of "v0.burns"
"""
type v0_burns_aggregate {
  aggregate: v0_burns_aggregate_fields
  nodes: [v0_burns!]!
}

"""
aggregate fields of "v0.burns"
"""
type v0_burns_aggregate_fields {
  avg: v0_burns_avg_fields
  count(columns: [v0_burns_select_column!], distinct: Boolean): Int!
  max: v0_burns_max_fields
  min: v0_burns_min_fields
  stddev: v0_burns_stddev_fields
  stddev_pop: v0_burns_stddev_pop_fields
  stddev_samp: v0_burns_stddev_samp_fields
  sum: v0_burns_sum_fields
  var_pop: v0_burns_var_pop_fields
  var_samp: v0_burns_var_samp_fields
  variance: v0_burns_variance_fields
}

"""aggregate avg on columns"""
type v0_burns_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.burns". All fields are combined with a logical 'AND'.
"""
input v0_burns_bool_exp {
  _and: [v0_burns_bool_exp!]
  _not: v0_burns_bool_exp
  _or: [v0_burns_bool_exp!]
  amount: bigint_comparison_exp
  burner: String_comparison_exp
  denom: String_comparison_exp
  mode: String_comparison_exp
}

"""aggregate max on columns"""
type v0_burns_max_fields {
  amount: bigint
  burner: String
  denom: String
  mode: String
}

"""aggregate min on columns"""
type v0_burns_min_fields {
  amount: bigint
  burner: String
  denom: String
  mode: String
}

"""Ordering options when selecting data from "v0.burns"."""
input v0_burns_order_by {
  amount: order_by
  burner: order_by
  denom: order_by
  mode: order_by
}

"""
select columns of table "v0.burns"
"""
enum v0_burns_select_column {
  """column name"""
  amount

  """column name"""
  burner

  """column name"""
  denom

  """column name"""
  mode
}

"""aggregate stddev on columns"""
type v0_burns_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_burns_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_burns_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_burns"
"""
input v0_burns_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_burns_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_burns_stream_cursor_value_input {
  amount: bigint
  burner: String
  denom: String
  mode: String
}

"""aggregate sum on columns"""
type v0_burns_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_burns_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_burns_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_burns_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.chains"
"""
type v0_chains {
  """An array relationship"""
  blocks(
    """distinct select on columns"""
    distinct_on: [v0_blocks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_blocks_order_by!]

    """filter the rows returned"""
    where: v0_blocks_bool_exp
  ): [v0_blocks!]!

  """An aggregate relationship"""
  blocks_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_blocks_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_blocks_order_by!]

    """filter the rows returned"""
    where: v0_blocks_bool_exp
  ): v0_blocks_aggregate!
  chain_id: String!

  """An array relationship"""
  events(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): [v0_events!]!

  """An aggregate relationship"""
  events_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): v0_events_aggregate!
  id: Int!

  """An array relationship"""
  logs(
    """distinct select on columns"""
    distinct_on: [v0_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_logs_order_by!]

    """filter the rows returned"""
    where: v0_logs_bool_exp
  ): [v0_logs!]!

  """An aggregate relationship"""
  logs_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_logs_order_by!]

    """filter the rows returned"""
    where: v0_logs_bool_exp
  ): v0_logs_aggregate!

  """An array relationship"""
  transactions(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): [v0_transactions!]!

  """An aggregate relationship"""
  transactions_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_transactions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_transactions_order_by!]

    """filter the rows returned"""
    where: v0_transactions_bool_exp
  ): v0_transactions_aggregate!
}

"""
aggregated selection of "v0.chains"
"""
type v0_chains_aggregate {
  aggregate: v0_chains_aggregate_fields
  nodes: [v0_chains!]!
}

"""
aggregate fields of "v0.chains"
"""
type v0_chains_aggregate_fields {
  avg: v0_chains_avg_fields
  count(columns: [v0_chains_select_column!], distinct: Boolean): Int!
  max: v0_chains_max_fields
  min: v0_chains_min_fields
  stddev: v0_chains_stddev_fields
  stddev_pop: v0_chains_stddev_pop_fields
  stddev_samp: v0_chains_stddev_samp_fields
  sum: v0_chains_sum_fields
  var_pop: v0_chains_var_pop_fields
  var_samp: v0_chains_var_samp_fields
  variance: v0_chains_variance_fields
}

"""aggregate avg on columns"""
type v0_chains_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "v0.chains". All fields are combined with a logical 'AND'.
"""
input v0_chains_bool_exp {
  _and: [v0_chains_bool_exp!]
  _not: v0_chains_bool_exp
  _or: [v0_chains_bool_exp!]
  blocks: v0_blocks_bool_exp
  blocks_aggregate: v0_blocks_aggregate_bool_exp
  chain_id: String_comparison_exp
  events: v0_events_bool_exp
  events_aggregate: v0_events_aggregate_bool_exp
  id: Int_comparison_exp
  logs: v0_logs_bool_exp
  logs_aggregate: v0_logs_aggregate_bool_exp
  transactions: v0_transactions_bool_exp
  transactions_aggregate: v0_transactions_aggregate_bool_exp
}

"""
unique or primary key constraints on table "v0.chains"
"""
enum v0_chains_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  chains_pkey
}

"""
input type for incrementing numeric columns in table "v0.chains"
"""
input v0_chains_inc_input {
  id: Int
}

"""
input type for inserting data into table "v0.chains"
"""
input v0_chains_insert_input {
  blocks: v0_blocks_arr_rel_insert_input
  chain_id: String
  events: v0_events_arr_rel_insert_input
  id: Int
  logs: v0_logs_arr_rel_insert_input
  transactions: v0_transactions_arr_rel_insert_input
}

"""aggregate max on columns"""
type v0_chains_max_fields {
  chain_id: String
  id: Int
}

"""aggregate min on columns"""
type v0_chains_min_fields {
  chain_id: String
  id: Int
}

"""
response of any mutation on the table "v0.chains"
"""
type v0_chains_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [v0_chains!]!
}

"""
input type for inserting object relation for remote table "v0.chains"
"""
input v0_chains_obj_rel_insert_input {
  data: v0_chains_insert_input!

  """upsert condition"""
  on_conflict: v0_chains_on_conflict
}

"""
on_conflict condition type for table "v0.chains"
"""
input v0_chains_on_conflict {
  constraint: v0_chains_constraint!
  update_columns: [v0_chains_update_column!]! = []
  where: v0_chains_bool_exp
}

"""Ordering options when selecting data from "v0.chains"."""
input v0_chains_order_by {
  blocks_aggregate: v0_blocks_aggregate_order_by
  chain_id: order_by
  events_aggregate: v0_events_aggregate_order_by
  id: order_by
  logs_aggregate: v0_logs_aggregate_order_by
  transactions_aggregate: v0_transactions_aggregate_order_by
}

"""primary key columns input for table: v0.chains"""
input v0_chains_pk_columns_input {
  id: Int!
}

"""
select columns of table "v0.chains"
"""
enum v0_chains_select_column {
  """column name"""
  chain_id

  """column name"""
  id
}

"""
input type for updating data in table "v0.chains"
"""
input v0_chains_set_input {
  chain_id: String
  id: Int
}

"""aggregate stddev on columns"""
type v0_chains_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type v0_chains_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type v0_chains_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "v0_chains"
"""
input v0_chains_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_chains_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_chains_stream_cursor_value_input {
  chain_id: String
  id: Int
}

"""aggregate sum on columns"""
type v0_chains_sum_fields {
  id: Int
}

"""
update columns of table "v0.chains"
"""
enum v0_chains_update_column {
  """column name"""
  chain_id

  """column name"""
  id
}

input v0_chains_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: v0_chains_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: v0_chains_set_input

  """filter the rows which have to be updated"""
  where: v0_chains_bool_exp!
}

"""aggregate var_pop on columns"""
type v0_chains_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type v0_chains_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type v0_chains_variance_fields {
  id: Float
}

"""
columns and relationships of "v0.channel_open_acks"
"""
type v0_channel_open_acks {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""
aggregated selection of "v0.channel_open_acks"
"""
type v0_channel_open_acks_aggregate {
  aggregate: v0_channel_open_acks_aggregate_fields
  nodes: [v0_channel_open_acks!]!
}

"""
aggregate fields of "v0.channel_open_acks"
"""
type v0_channel_open_acks_aggregate_fields {
  avg: v0_channel_open_acks_avg_fields
  count(columns: [v0_channel_open_acks_select_column!], distinct: Boolean): Int!
  max: v0_channel_open_acks_max_fields
  min: v0_channel_open_acks_min_fields
  stddev: v0_channel_open_acks_stddev_fields
  stddev_pop: v0_channel_open_acks_stddev_pop_fields
  stddev_samp: v0_channel_open_acks_stddev_samp_fields
  sum: v0_channel_open_acks_sum_fields
  var_pop: v0_channel_open_acks_var_pop_fields
  var_samp: v0_channel_open_acks_var_samp_fields
  variance: v0_channel_open_acks_variance_fields
}

"""aggregate avg on columns"""
type v0_channel_open_acks_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.channel_open_acks". All fields are combined with a logical 'AND'.
"""
input v0_channel_open_acks_bool_exp {
  _and: [v0_channel_open_acks_bool_exp!]
  _not: v0_channel_open_acks_bool_exp
  _or: [v0_channel_open_acks_bool_exp!]
  channel_id: String_comparison_exp
  connection_id: String_comparison_exp
  counterparty_channel_id: String_comparison_exp
  counterparty_port_id: String_comparison_exp
  msg_index: Int_comparison_exp
  port_id: String_comparison_exp
}

"""aggregate max on columns"""
type v0_channel_open_acks_max_fields {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""aggregate min on columns"""
type v0_channel_open_acks_min_fields {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""Ordering options when selecting data from "v0.channel_open_acks"."""
input v0_channel_open_acks_order_by {
  channel_id: order_by
  connection_id: order_by
  counterparty_channel_id: order_by
  counterparty_port_id: order_by
  msg_index: order_by
  port_id: order_by
}

"""
select columns of table "v0.channel_open_acks"
"""
enum v0_channel_open_acks_select_column {
  """column name"""
  channel_id

  """column name"""
  connection_id

  """column name"""
  counterparty_channel_id

  """column name"""
  counterparty_port_id

  """column name"""
  msg_index

  """column name"""
  port_id
}

"""aggregate stddev on columns"""
type v0_channel_open_acks_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_channel_open_acks_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_channel_open_acks_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_channel_open_acks"
"""
input v0_channel_open_acks_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_channel_open_acks_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_channel_open_acks_stream_cursor_value_input {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""aggregate sum on columns"""
type v0_channel_open_acks_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_channel_open_acks_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_channel_open_acks_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_channel_open_acks_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.channel_open_confirms"
"""
type v0_channel_open_confirms {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""
aggregated selection of "v0.channel_open_confirms"
"""
type v0_channel_open_confirms_aggregate {
  aggregate: v0_channel_open_confirms_aggregate_fields
  nodes: [v0_channel_open_confirms!]!
}

"""
aggregate fields of "v0.channel_open_confirms"
"""
type v0_channel_open_confirms_aggregate_fields {
  avg: v0_channel_open_confirms_avg_fields
  count(columns: [v0_channel_open_confirms_select_column!], distinct: Boolean): Int!
  max: v0_channel_open_confirms_max_fields
  min: v0_channel_open_confirms_min_fields
  stddev: v0_channel_open_confirms_stddev_fields
  stddev_pop: v0_channel_open_confirms_stddev_pop_fields
  stddev_samp: v0_channel_open_confirms_stddev_samp_fields
  sum: v0_channel_open_confirms_sum_fields
  var_pop: v0_channel_open_confirms_var_pop_fields
  var_samp: v0_channel_open_confirms_var_samp_fields
  variance: v0_channel_open_confirms_variance_fields
}

"""aggregate avg on columns"""
type v0_channel_open_confirms_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.channel_open_confirms". All fields are combined with a logical 'AND'.
"""
input v0_channel_open_confirms_bool_exp {
  _and: [v0_channel_open_confirms_bool_exp!]
  _not: v0_channel_open_confirms_bool_exp
  _or: [v0_channel_open_confirms_bool_exp!]
  channel_id: String_comparison_exp
  connection_id: String_comparison_exp
  counterparty_channel_id: String_comparison_exp
  counterparty_port_id: String_comparison_exp
  msg_index: Int_comparison_exp
  port_id: String_comparison_exp
}

"""aggregate max on columns"""
type v0_channel_open_confirms_max_fields {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""aggregate min on columns"""
type v0_channel_open_confirms_min_fields {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""Ordering options when selecting data from "v0.channel_open_confirms"."""
input v0_channel_open_confirms_order_by {
  channel_id: order_by
  connection_id: order_by
  counterparty_channel_id: order_by
  counterparty_port_id: order_by
  msg_index: order_by
  port_id: order_by
}

"""
select columns of table "v0.channel_open_confirms"
"""
enum v0_channel_open_confirms_select_column {
  """column name"""
  channel_id

  """column name"""
  connection_id

  """column name"""
  counterparty_channel_id

  """column name"""
  counterparty_port_id

  """column name"""
  msg_index

  """column name"""
  port_id
}

"""aggregate stddev on columns"""
type v0_channel_open_confirms_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_channel_open_confirms_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_channel_open_confirms_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_channel_open_confirms"
"""
input v0_channel_open_confirms_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_channel_open_confirms_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_channel_open_confirms_stream_cursor_value_input {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
}

"""aggregate sum on columns"""
type v0_channel_open_confirms_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_channel_open_confirms_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_channel_open_confirms_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_channel_open_confirms_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.channel_open_inits"
"""
type v0_channel_open_inits {
  channel_id: String
  connection_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""
aggregated selection of "v0.channel_open_inits"
"""
type v0_channel_open_inits_aggregate {
  aggregate: v0_channel_open_inits_aggregate_fields
  nodes: [v0_channel_open_inits!]!
}

"""
aggregate fields of "v0.channel_open_inits"
"""
type v0_channel_open_inits_aggregate_fields {
  avg: v0_channel_open_inits_avg_fields
  count(columns: [v0_channel_open_inits_select_column!], distinct: Boolean): Int!
  max: v0_channel_open_inits_max_fields
  min: v0_channel_open_inits_min_fields
  stddev: v0_channel_open_inits_stddev_fields
  stddev_pop: v0_channel_open_inits_stddev_pop_fields
  stddev_samp: v0_channel_open_inits_stddev_samp_fields
  sum: v0_channel_open_inits_sum_fields
  var_pop: v0_channel_open_inits_var_pop_fields
  var_samp: v0_channel_open_inits_var_samp_fields
  variance: v0_channel_open_inits_variance_fields
}

"""aggregate avg on columns"""
type v0_channel_open_inits_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.channel_open_inits". All fields are combined with a logical 'AND'.
"""
input v0_channel_open_inits_bool_exp {
  _and: [v0_channel_open_inits_bool_exp!]
  _not: v0_channel_open_inits_bool_exp
  _or: [v0_channel_open_inits_bool_exp!]
  channel_id: String_comparison_exp
  connection_id: String_comparison_exp
  counterparty_port_id: String_comparison_exp
  msg_index: Int_comparison_exp
  port_id: String_comparison_exp
  version: String_comparison_exp
}

"""aggregate max on columns"""
type v0_channel_open_inits_max_fields {
  channel_id: String
  connection_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""aggregate min on columns"""
type v0_channel_open_inits_min_fields {
  channel_id: String
  connection_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""Ordering options when selecting data from "v0.channel_open_inits"."""
input v0_channel_open_inits_order_by {
  channel_id: order_by
  connection_id: order_by
  counterparty_port_id: order_by
  msg_index: order_by
  port_id: order_by
  version: order_by
}

"""
select columns of table "v0.channel_open_inits"
"""
enum v0_channel_open_inits_select_column {
  """column name"""
  channel_id

  """column name"""
  connection_id

  """column name"""
  counterparty_port_id

  """column name"""
  msg_index

  """column name"""
  port_id

  """column name"""
  version
}

"""aggregate stddev on columns"""
type v0_channel_open_inits_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_channel_open_inits_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_channel_open_inits_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_channel_open_inits"
"""
input v0_channel_open_inits_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_channel_open_inits_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_channel_open_inits_stream_cursor_value_input {
  channel_id: String
  connection_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""aggregate sum on columns"""
type v0_channel_open_inits_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_channel_open_inits_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_channel_open_inits_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_channel_open_inits_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.channel_open_tries"
"""
type v0_channel_open_tries {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""
aggregated selection of "v0.channel_open_tries"
"""
type v0_channel_open_tries_aggregate {
  aggregate: v0_channel_open_tries_aggregate_fields
  nodes: [v0_channel_open_tries!]!
}

"""
aggregate fields of "v0.channel_open_tries"
"""
type v0_channel_open_tries_aggregate_fields {
  avg: v0_channel_open_tries_avg_fields
  count(columns: [v0_channel_open_tries_select_column!], distinct: Boolean): Int!
  max: v0_channel_open_tries_max_fields
  min: v0_channel_open_tries_min_fields
  stddev: v0_channel_open_tries_stddev_fields
  stddev_pop: v0_channel_open_tries_stddev_pop_fields
  stddev_samp: v0_channel_open_tries_stddev_samp_fields
  sum: v0_channel_open_tries_sum_fields
  var_pop: v0_channel_open_tries_var_pop_fields
  var_samp: v0_channel_open_tries_var_samp_fields
  variance: v0_channel_open_tries_variance_fields
}

"""aggregate avg on columns"""
type v0_channel_open_tries_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.channel_open_tries". All fields are combined with a logical 'AND'.
"""
input v0_channel_open_tries_bool_exp {
  _and: [v0_channel_open_tries_bool_exp!]
  _not: v0_channel_open_tries_bool_exp
  _or: [v0_channel_open_tries_bool_exp!]
  channel_id: String_comparison_exp
  connection_id: String_comparison_exp
  counterparty_channel_id: String_comparison_exp
  counterparty_port_id: String_comparison_exp
  msg_index: Int_comparison_exp
  port_id: String_comparison_exp
  version: String_comparison_exp
}

"""aggregate max on columns"""
type v0_channel_open_tries_max_fields {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""aggregate min on columns"""
type v0_channel_open_tries_min_fields {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""Ordering options when selecting data from "v0.channel_open_tries"."""
input v0_channel_open_tries_order_by {
  channel_id: order_by
  connection_id: order_by
  counterparty_channel_id: order_by
  counterparty_port_id: order_by
  msg_index: order_by
  port_id: order_by
  version: order_by
}

"""
select columns of table "v0.channel_open_tries"
"""
enum v0_channel_open_tries_select_column {
  """column name"""
  channel_id

  """column name"""
  connection_id

  """column name"""
  counterparty_channel_id

  """column name"""
  counterparty_port_id

  """column name"""
  msg_index

  """column name"""
  port_id

  """column name"""
  version
}

"""aggregate stddev on columns"""
type v0_channel_open_tries_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_channel_open_tries_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_channel_open_tries_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_channel_open_tries"
"""
input v0_channel_open_tries_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_channel_open_tries_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_channel_open_tries_stream_cursor_value_input {
  channel_id: String
  connection_id: String
  counterparty_channel_id: String
  counterparty_port_id: String
  msg_index: Int
  port_id: String
  version: String
}

"""aggregate sum on columns"""
type v0_channel_open_tries_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_channel_open_tries_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_channel_open_tries_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_channel_open_tries_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.coin_receiveds"
"""
type v0_coin_receiveds {
  amount: bigint
  denom: String
  mode: String
  receiver: String
}

"""
aggregated selection of "v0.coin_receiveds"
"""
type v0_coin_receiveds_aggregate {
  aggregate: v0_coin_receiveds_aggregate_fields
  nodes: [v0_coin_receiveds!]!
}

"""
aggregate fields of "v0.coin_receiveds"
"""
type v0_coin_receiveds_aggregate_fields {
  avg: v0_coin_receiveds_avg_fields
  count(columns: [v0_coin_receiveds_select_column!], distinct: Boolean): Int!
  max: v0_coin_receiveds_max_fields
  min: v0_coin_receiveds_min_fields
  stddev: v0_coin_receiveds_stddev_fields
  stddev_pop: v0_coin_receiveds_stddev_pop_fields
  stddev_samp: v0_coin_receiveds_stddev_samp_fields
  sum: v0_coin_receiveds_sum_fields
  var_pop: v0_coin_receiveds_var_pop_fields
  var_samp: v0_coin_receiveds_var_samp_fields
  variance: v0_coin_receiveds_variance_fields
}

"""aggregate avg on columns"""
type v0_coin_receiveds_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.coin_receiveds". All fields are combined with a logical 'AND'.
"""
input v0_coin_receiveds_bool_exp {
  _and: [v0_coin_receiveds_bool_exp!]
  _not: v0_coin_receiveds_bool_exp
  _or: [v0_coin_receiveds_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  mode: String_comparison_exp
  receiver: String_comparison_exp
}

"""aggregate max on columns"""
type v0_coin_receiveds_max_fields {
  amount: bigint
  denom: String
  mode: String
  receiver: String
}

"""aggregate min on columns"""
type v0_coin_receiveds_min_fields {
  amount: bigint
  denom: String
  mode: String
  receiver: String
}

"""Ordering options when selecting data from "v0.coin_receiveds"."""
input v0_coin_receiveds_order_by {
  amount: order_by
  denom: order_by
  mode: order_by
  receiver: order_by
}

"""
select columns of table "v0.coin_receiveds"
"""
enum v0_coin_receiveds_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  mode

  """column name"""
  receiver
}

"""aggregate stddev on columns"""
type v0_coin_receiveds_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_coin_receiveds_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_coin_receiveds_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_coin_receiveds"
"""
input v0_coin_receiveds_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_coin_receiveds_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_coin_receiveds_stream_cursor_value_input {
  amount: bigint
  denom: String
  mode: String
  receiver: String
}

"""aggregate sum on columns"""
type v0_coin_receiveds_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_coin_receiveds_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_coin_receiveds_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_coin_receiveds_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.coin_spents"
"""
type v0_coin_spents {
  amount: bigint
  denom: String
  mode: String
  spender: String
}

"""
aggregated selection of "v0.coin_spents"
"""
type v0_coin_spents_aggregate {
  aggregate: v0_coin_spents_aggregate_fields
  nodes: [v0_coin_spents!]!
}

"""
aggregate fields of "v0.coin_spents"
"""
type v0_coin_spents_aggregate_fields {
  avg: v0_coin_spents_avg_fields
  count(columns: [v0_coin_spents_select_column!], distinct: Boolean): Int!
  max: v0_coin_spents_max_fields
  min: v0_coin_spents_min_fields
  stddev: v0_coin_spents_stddev_fields
  stddev_pop: v0_coin_spents_stddev_pop_fields
  stddev_samp: v0_coin_spents_stddev_samp_fields
  sum: v0_coin_spents_sum_fields
  var_pop: v0_coin_spents_var_pop_fields
  var_samp: v0_coin_spents_var_samp_fields
  variance: v0_coin_spents_variance_fields
}

"""aggregate avg on columns"""
type v0_coin_spents_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.coin_spents". All fields are combined with a logical 'AND'.
"""
input v0_coin_spents_bool_exp {
  _and: [v0_coin_spents_bool_exp!]
  _not: v0_coin_spents_bool_exp
  _or: [v0_coin_spents_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  mode: String_comparison_exp
  spender: String_comparison_exp
}

"""aggregate max on columns"""
type v0_coin_spents_max_fields {
  amount: bigint
  denom: String
  mode: String
  spender: String
}

"""aggregate min on columns"""
type v0_coin_spents_min_fields {
  amount: bigint
  denom: String
  mode: String
  spender: String
}

"""Ordering options when selecting data from "v0.coin_spents"."""
input v0_coin_spents_order_by {
  amount: order_by
  denom: order_by
  mode: order_by
  spender: order_by
}

"""
select columns of table "v0.coin_spents"
"""
enum v0_coin_spents_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  mode

  """column name"""
  spender
}

"""aggregate stddev on columns"""
type v0_coin_spents_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_coin_spents_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_coin_spents_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_coin_spents"
"""
input v0_coin_spents_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_coin_spents_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_coin_spents_stream_cursor_value_input {
  amount: bigint
  denom: String
  mode: String
  spender: String
}

"""aggregate sum on columns"""
type v0_coin_spents_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_coin_spents_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_coin_spents_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_coin_spents_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.coinbases"
"""
type v0_coinbases {
  amount: bigint
  denom: String
  minter: String
  mode: String
}

"""
aggregated selection of "v0.coinbases"
"""
type v0_coinbases_aggregate {
  aggregate: v0_coinbases_aggregate_fields
  nodes: [v0_coinbases!]!
}

"""
aggregate fields of "v0.coinbases"
"""
type v0_coinbases_aggregate_fields {
  avg: v0_coinbases_avg_fields
  count(columns: [v0_coinbases_select_column!], distinct: Boolean): Int!
  max: v0_coinbases_max_fields
  min: v0_coinbases_min_fields
  stddev: v0_coinbases_stddev_fields
  stddev_pop: v0_coinbases_stddev_pop_fields
  stddev_samp: v0_coinbases_stddev_samp_fields
  sum: v0_coinbases_sum_fields
  var_pop: v0_coinbases_var_pop_fields
  var_samp: v0_coinbases_var_samp_fields
  variance: v0_coinbases_variance_fields
}

"""aggregate avg on columns"""
type v0_coinbases_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.coinbases". All fields are combined with a logical 'AND'.
"""
input v0_coinbases_bool_exp {
  _and: [v0_coinbases_bool_exp!]
  _not: v0_coinbases_bool_exp
  _or: [v0_coinbases_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  minter: String_comparison_exp
  mode: String_comparison_exp
}

"""aggregate max on columns"""
type v0_coinbases_max_fields {
  amount: bigint
  denom: String
  minter: String
  mode: String
}

"""aggregate min on columns"""
type v0_coinbases_min_fields {
  amount: bigint
  denom: String
  minter: String
  mode: String
}

"""Ordering options when selecting data from "v0.coinbases"."""
input v0_coinbases_order_by {
  amount: order_by
  denom: order_by
  minter: order_by
  mode: order_by
}

"""
select columns of table "v0.coinbases"
"""
enum v0_coinbases_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  minter

  """column name"""
  mode
}

"""aggregate stddev on columns"""
type v0_coinbases_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_coinbases_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_coinbases_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_coinbases"
"""
input v0_coinbases_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_coinbases_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_coinbases_stream_cursor_value_input {
  amount: bigint
  denom: String
  minter: String
  mode: String
}

"""aggregate sum on columns"""
type v0_coinbases_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_coinbases_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_coinbases_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_coinbases_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.commissions"
"""
type v0_commissions {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""
aggregated selection of "v0.commissions"
"""
type v0_commissions_aggregate {
  aggregate: v0_commissions_aggregate_fields
  nodes: [v0_commissions!]!
}

"""
aggregate fields of "v0.commissions"
"""
type v0_commissions_aggregate_fields {
  avg: v0_commissions_avg_fields
  count(columns: [v0_commissions_select_column!], distinct: Boolean): Int!
  max: v0_commissions_max_fields
  min: v0_commissions_min_fields
  stddev: v0_commissions_stddev_fields
  stddev_pop: v0_commissions_stddev_pop_fields
  stddev_samp: v0_commissions_stddev_samp_fields
  sum: v0_commissions_sum_fields
  var_pop: v0_commissions_var_pop_fields
  var_samp: v0_commissions_var_samp_fields
  variance: v0_commissions_variance_fields
}

"""aggregate avg on columns"""
type v0_commissions_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.commissions". All fields are combined with a logical 'AND'.
"""
input v0_commissions_bool_exp {
  _and: [v0_commissions_bool_exp!]
  _not: v0_commissions_bool_exp
  _or: [v0_commissions_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  mode: String_comparison_exp
  validator: String_comparison_exp
}

"""aggregate max on columns"""
type v0_commissions_max_fields {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""aggregate min on columns"""
type v0_commissions_min_fields {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""Ordering options when selecting data from "v0.commissions"."""
input v0_commissions_order_by {
  amount: order_by
  denom: order_by
  mode: order_by
  validator: order_by
}

"""
select columns of table "v0.commissions"
"""
enum v0_commissions_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  mode

  """column name"""
  validator
}

"""aggregate stddev on columns"""
type v0_commissions_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_commissions_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_commissions_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_commissions"
"""
input v0_commissions_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_commissions_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_commissions_stream_cursor_value_input {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""aggregate sum on columns"""
type v0_commissions_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_commissions_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_commissions_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_commissions_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.complete_redelegations"
"""
type v0_complete_redelegations {
  amount: bigint
  delegator: String
  denom: String
  destination_validator: String
  mode: String
  source_validator: String
}

"""
aggregated selection of "v0.complete_redelegations"
"""
type v0_complete_redelegations_aggregate {
  aggregate: v0_complete_redelegations_aggregate_fields
  nodes: [v0_complete_redelegations!]!
}

"""
aggregate fields of "v0.complete_redelegations"
"""
type v0_complete_redelegations_aggregate_fields {
  avg: v0_complete_redelegations_avg_fields
  count(columns: [v0_complete_redelegations_select_column!], distinct: Boolean): Int!
  max: v0_complete_redelegations_max_fields
  min: v0_complete_redelegations_min_fields
  stddev: v0_complete_redelegations_stddev_fields
  stddev_pop: v0_complete_redelegations_stddev_pop_fields
  stddev_samp: v0_complete_redelegations_stddev_samp_fields
  sum: v0_complete_redelegations_sum_fields
  var_pop: v0_complete_redelegations_var_pop_fields
  var_samp: v0_complete_redelegations_var_samp_fields
  variance: v0_complete_redelegations_variance_fields
}

"""aggregate avg on columns"""
type v0_complete_redelegations_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.complete_redelegations". All fields are combined with a logical 'AND'.
"""
input v0_complete_redelegations_bool_exp {
  _and: [v0_complete_redelegations_bool_exp!]
  _not: v0_complete_redelegations_bool_exp
  _or: [v0_complete_redelegations_bool_exp!]
  amount: bigint_comparison_exp
  delegator: String_comparison_exp
  denom: String_comparison_exp
  destination_validator: String_comparison_exp
  mode: String_comparison_exp
  source_validator: String_comparison_exp
}

"""aggregate max on columns"""
type v0_complete_redelegations_max_fields {
  amount: bigint
  delegator: String
  denom: String
  destination_validator: String
  mode: String
  source_validator: String
}

"""aggregate min on columns"""
type v0_complete_redelegations_min_fields {
  amount: bigint
  delegator: String
  denom: String
  destination_validator: String
  mode: String
  source_validator: String
}

"""Ordering options when selecting data from "v0.complete_redelegations"."""
input v0_complete_redelegations_order_by {
  amount: order_by
  delegator: order_by
  denom: order_by
  destination_validator: order_by
  mode: order_by
  source_validator: order_by
}

"""
select columns of table "v0.complete_redelegations"
"""
enum v0_complete_redelegations_select_column {
  """column name"""
  amount

  """column name"""
  delegator

  """column name"""
  denom

  """column name"""
  destination_validator

  """column name"""
  mode

  """column name"""
  source_validator
}

"""aggregate stddev on columns"""
type v0_complete_redelegations_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_complete_redelegations_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_complete_redelegations_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_complete_redelegations"
"""
input v0_complete_redelegations_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_complete_redelegations_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_complete_redelegations_stream_cursor_value_input {
  amount: bigint
  delegator: String
  denom: String
  destination_validator: String
  mode: String
  source_validator: String
}

"""aggregate sum on columns"""
type v0_complete_redelegations_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_complete_redelegations_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_complete_redelegations_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_complete_redelegations_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.connection_open_acks"
"""
type v0_connection_open_acks {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  counterparty_connection_id: String
  msg_index: Int
}

"""
aggregated selection of "v0.connection_open_acks"
"""
type v0_connection_open_acks_aggregate {
  aggregate: v0_connection_open_acks_aggregate_fields
  nodes: [v0_connection_open_acks!]!
}

"""
aggregate fields of "v0.connection_open_acks"
"""
type v0_connection_open_acks_aggregate_fields {
  avg: v0_connection_open_acks_avg_fields
  count(columns: [v0_connection_open_acks_select_column!], distinct: Boolean): Int!
  max: v0_connection_open_acks_max_fields
  min: v0_connection_open_acks_min_fields
  stddev: v0_connection_open_acks_stddev_fields
  stddev_pop: v0_connection_open_acks_stddev_pop_fields
  stddev_samp: v0_connection_open_acks_stddev_samp_fields
  sum: v0_connection_open_acks_sum_fields
  var_pop: v0_connection_open_acks_var_pop_fields
  var_samp: v0_connection_open_acks_var_samp_fields
  variance: v0_connection_open_acks_variance_fields
}

"""aggregate avg on columns"""
type v0_connection_open_acks_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.connection_open_acks". All fields are combined with a logical 'AND'.
"""
input v0_connection_open_acks_bool_exp {
  _and: [v0_connection_open_acks_bool_exp!]
  _not: v0_connection_open_acks_bool_exp
  _or: [v0_connection_open_acks_bool_exp!]
  client_id: String_comparison_exp
  connection_id: String_comparison_exp
  counterparty_client_id: String_comparison_exp
  counterparty_connection_id: String_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_connection_open_acks_max_fields {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  counterparty_connection_id: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_connection_open_acks_min_fields {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  counterparty_connection_id: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.connection_open_acks"."""
input v0_connection_open_acks_order_by {
  client_id: order_by
  connection_id: order_by
  counterparty_client_id: order_by
  counterparty_connection_id: order_by
  msg_index: order_by
}

"""
select columns of table "v0.connection_open_acks"
"""
enum v0_connection_open_acks_select_column {
  """column name"""
  client_id

  """column name"""
  connection_id

  """column name"""
  counterparty_client_id

  """column name"""
  counterparty_connection_id

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_connection_open_acks_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_connection_open_acks_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_connection_open_acks_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_connection_open_acks"
"""
input v0_connection_open_acks_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_connection_open_acks_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_connection_open_acks_stream_cursor_value_input {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  counterparty_connection_id: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_connection_open_acks_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_connection_open_acks_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_connection_open_acks_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_connection_open_acks_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.connection_open_inits"
"""
type v0_connection_open_inits {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  msg_index: Int
}

"""
aggregated selection of "v0.connection_open_inits"
"""
type v0_connection_open_inits_aggregate {
  aggregate: v0_connection_open_inits_aggregate_fields
  nodes: [v0_connection_open_inits!]!
}

"""
aggregate fields of "v0.connection_open_inits"
"""
type v0_connection_open_inits_aggregate_fields {
  avg: v0_connection_open_inits_avg_fields
  count(columns: [v0_connection_open_inits_select_column!], distinct: Boolean): Int!
  max: v0_connection_open_inits_max_fields
  min: v0_connection_open_inits_min_fields
  stddev: v0_connection_open_inits_stddev_fields
  stddev_pop: v0_connection_open_inits_stddev_pop_fields
  stddev_samp: v0_connection_open_inits_stddev_samp_fields
  sum: v0_connection_open_inits_sum_fields
  var_pop: v0_connection_open_inits_var_pop_fields
  var_samp: v0_connection_open_inits_var_samp_fields
  variance: v0_connection_open_inits_variance_fields
}

"""aggregate avg on columns"""
type v0_connection_open_inits_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.connection_open_inits". All fields are combined with a logical 'AND'.
"""
input v0_connection_open_inits_bool_exp {
  _and: [v0_connection_open_inits_bool_exp!]
  _not: v0_connection_open_inits_bool_exp
  _or: [v0_connection_open_inits_bool_exp!]
  client_id: String_comparison_exp
  connection_id: String_comparison_exp
  counterparty_client_id: String_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_connection_open_inits_max_fields {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_connection_open_inits_min_fields {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.connection_open_inits"."""
input v0_connection_open_inits_order_by {
  client_id: order_by
  connection_id: order_by
  counterparty_client_id: order_by
  msg_index: order_by
}

"""
select columns of table "v0.connection_open_inits"
"""
enum v0_connection_open_inits_select_column {
  """column name"""
  client_id

  """column name"""
  connection_id

  """column name"""
  counterparty_client_id

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_connection_open_inits_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_connection_open_inits_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_connection_open_inits_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_connection_open_inits"
"""
input v0_connection_open_inits_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_connection_open_inits_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_connection_open_inits_stream_cursor_value_input {
  client_id: String
  connection_id: String
  counterparty_client_id: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_connection_open_inits_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_connection_open_inits_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_connection_open_inits_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_connection_open_inits_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.consensus_param_updates"
"""
type v0_consensus_param_updates {
  abci(
    """JSON select path"""
    path: String
  ): jsonb
  block(
    """JSON select path"""
    path: String
  ): jsonb
  evidence(
    """JSON select path"""
    path: String
  ): jsonb
  validator(
    """JSON select path"""
    path: String
  ): jsonb
}

"""
aggregated selection of "v0.consensus_param_updates"
"""
type v0_consensus_param_updates_aggregate {
  aggregate: v0_consensus_param_updates_aggregate_fields
  nodes: [v0_consensus_param_updates!]!
}

"""
aggregate fields of "v0.consensus_param_updates"
"""
type v0_consensus_param_updates_aggregate_fields {
  count(columns: [v0_consensus_param_updates_select_column!], distinct: Boolean): Int!
}

"""
Boolean expression to filter rows from the table "v0.consensus_param_updates". All fields are combined with a logical 'AND'.
"""
input v0_consensus_param_updates_bool_exp {
  _and: [v0_consensus_param_updates_bool_exp!]
  _not: v0_consensus_param_updates_bool_exp
  _or: [v0_consensus_param_updates_bool_exp!]
  abci: jsonb_comparison_exp
  block: jsonb_comparison_exp
  evidence: jsonb_comparison_exp
  validator: jsonb_comparison_exp
}

"""
Ordering options when selecting data from "v0.consensus_param_updates".
"""
input v0_consensus_param_updates_order_by {
  abci: order_by
  block: order_by
  evidence: order_by
  validator: order_by
}

"""
select columns of table "v0.consensus_param_updates"
"""
enum v0_consensus_param_updates_select_column {
  """column name"""
  abci

  """column name"""
  block

  """column name"""
  evidence

  """column name"""
  validator
}

"""
Streaming cursor of the table "v0_consensus_param_updates"
"""
input v0_consensus_param_updates_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_consensus_param_updates_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_consensus_param_updates_stream_cursor_value_input {
  abci: jsonb
  block: jsonb
  evidence: jsonb
  validator: jsonb
}

"""
columns and relationships of "v0.create_clients"
"""
type v0_create_clients {
  client_id: String
  client_type: String
  consensus_height: String
  msg_index: Int
}

"""
aggregated selection of "v0.create_clients"
"""
type v0_create_clients_aggregate {
  aggregate: v0_create_clients_aggregate_fields
  nodes: [v0_create_clients!]!
}

"""
aggregate fields of "v0.create_clients"
"""
type v0_create_clients_aggregate_fields {
  avg: v0_create_clients_avg_fields
  count(columns: [v0_create_clients_select_column!], distinct: Boolean): Int!
  max: v0_create_clients_max_fields
  min: v0_create_clients_min_fields
  stddev: v0_create_clients_stddev_fields
  stddev_pop: v0_create_clients_stddev_pop_fields
  stddev_samp: v0_create_clients_stddev_samp_fields
  sum: v0_create_clients_sum_fields
  var_pop: v0_create_clients_var_pop_fields
  var_samp: v0_create_clients_var_samp_fields
  variance: v0_create_clients_variance_fields
}

"""aggregate avg on columns"""
type v0_create_clients_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.create_clients". All fields are combined with a logical 'AND'.
"""
input v0_create_clients_bool_exp {
  _and: [v0_create_clients_bool_exp!]
  _not: v0_create_clients_bool_exp
  _or: [v0_create_clients_bool_exp!]
  client_id: String_comparison_exp
  client_type: String_comparison_exp
  consensus_height: String_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_create_clients_max_fields {
  client_id: String
  client_type: String
  consensus_height: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_create_clients_min_fields {
  client_id: String
  client_type: String
  consensus_height: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.create_clients"."""
input v0_create_clients_order_by {
  client_id: order_by
  client_type: order_by
  consensus_height: order_by
  msg_index: order_by
}

"""
select columns of table "v0.create_clients"
"""
enum v0_create_clients_select_column {
  """column name"""
  client_id

  """column name"""
  client_type

  """column name"""
  consensus_height

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_create_clients_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_create_clients_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_create_clients_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_create_clients"
"""
input v0_create_clients_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_create_clients_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_create_clients_stream_cursor_value_input {
  client_id: String
  client_type: String
  consensus_height: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_create_clients_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_create_clients_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_create_clients_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_create_clients_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.create_validators"
"""
type v0_create_validators {
  amount: bigint
  denom: String
  msg_index: Int
  validator: String
}

"""
aggregated selection of "v0.create_validators"
"""
type v0_create_validators_aggregate {
  aggregate: v0_create_validators_aggregate_fields
  nodes: [v0_create_validators!]!
}

"""
aggregate fields of "v0.create_validators"
"""
type v0_create_validators_aggregate_fields {
  avg: v0_create_validators_avg_fields
  count(columns: [v0_create_validators_select_column!], distinct: Boolean): Int!
  max: v0_create_validators_max_fields
  min: v0_create_validators_min_fields
  stddev: v0_create_validators_stddev_fields
  stddev_pop: v0_create_validators_stddev_pop_fields
  stddev_samp: v0_create_validators_stddev_samp_fields
  sum: v0_create_validators_sum_fields
  var_pop: v0_create_validators_var_pop_fields
  var_samp: v0_create_validators_var_samp_fields
  variance: v0_create_validators_variance_fields
}

"""aggregate avg on columns"""
type v0_create_validators_avg_fields {
  amount: Float
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.create_validators". All fields are combined with a logical 'AND'.
"""
input v0_create_validators_bool_exp {
  _and: [v0_create_validators_bool_exp!]
  _not: v0_create_validators_bool_exp
  _or: [v0_create_validators_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  msg_index: Int_comparison_exp
  validator: String_comparison_exp
}

"""aggregate max on columns"""
type v0_create_validators_max_fields {
  amount: bigint
  denom: String
  msg_index: Int
  validator: String
}

"""aggregate min on columns"""
type v0_create_validators_min_fields {
  amount: bigint
  denom: String
  msg_index: Int
  validator: String
}

"""Ordering options when selecting data from "v0.create_validators"."""
input v0_create_validators_order_by {
  amount: order_by
  denom: order_by
  msg_index: order_by
  validator: order_by
}

"""
select columns of table "v0.create_validators"
"""
enum v0_create_validators_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  msg_index

  """column name"""
  validator
}

"""aggregate stddev on columns"""
type v0_create_validators_stddev_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_create_validators_stddev_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_create_validators_stddev_samp_fields {
  amount: Float
  msg_index: Float
}

"""
Streaming cursor of the table "v0_create_validators"
"""
input v0_create_validators_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_create_validators_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_create_validators_stream_cursor_value_input {
  amount: bigint
  denom: String
  msg_index: Int
  validator: String
}

"""aggregate sum on columns"""
type v0_create_validators_sum_fields {
  amount: bigint
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_create_validators_var_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_create_validators_var_samp_fields {
  amount: Float
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_create_validators_variance_fields {
  amount: Float
  msg_index: Float
}

"""
columns and relationships of "v0.delegates"
"""
type v0_delegates {
  amount: bigint
  delegator: String
  denom: String
  msg_index: Int
  new_shares: numeric
  validator: String
}

"""
aggregated selection of "v0.delegates"
"""
type v0_delegates_aggregate {
  aggregate: v0_delegates_aggregate_fields
  nodes: [v0_delegates!]!
}

"""
aggregate fields of "v0.delegates"
"""
type v0_delegates_aggregate_fields {
  avg: v0_delegates_avg_fields
  count(columns: [v0_delegates_select_column!], distinct: Boolean): Int!
  max: v0_delegates_max_fields
  min: v0_delegates_min_fields
  stddev: v0_delegates_stddev_fields
  stddev_pop: v0_delegates_stddev_pop_fields
  stddev_samp: v0_delegates_stddev_samp_fields
  sum: v0_delegates_sum_fields
  var_pop: v0_delegates_var_pop_fields
  var_samp: v0_delegates_var_samp_fields
  variance: v0_delegates_variance_fields
}

"""aggregate avg on columns"""
type v0_delegates_avg_fields {
  amount: Float
  msg_index: Float
  new_shares: Float
}

"""
Boolean expression to filter rows from the table "v0.delegates". All fields are combined with a logical 'AND'.
"""
input v0_delegates_bool_exp {
  _and: [v0_delegates_bool_exp!]
  _not: v0_delegates_bool_exp
  _or: [v0_delegates_bool_exp!]
  amount: bigint_comparison_exp
  delegator: String_comparison_exp
  denom: String_comparison_exp
  msg_index: Int_comparison_exp
  new_shares: numeric_comparison_exp
  validator: String_comparison_exp
}

"""aggregate max on columns"""
type v0_delegates_max_fields {
  amount: bigint
  delegator: String
  denom: String
  msg_index: Int
  new_shares: numeric
  validator: String
}

"""aggregate min on columns"""
type v0_delegates_min_fields {
  amount: bigint
  delegator: String
  denom: String
  msg_index: Int
  new_shares: numeric
  validator: String
}

"""Ordering options when selecting data from "v0.delegates"."""
input v0_delegates_order_by {
  amount: order_by
  delegator: order_by
  denom: order_by
  msg_index: order_by
  new_shares: order_by
  validator: order_by
}

"""
select columns of table "v0.delegates"
"""
enum v0_delegates_select_column {
  """column name"""
  amount

  """column name"""
  delegator

  """column name"""
  denom

  """column name"""
  msg_index

  """column name"""
  new_shares

  """column name"""
  validator
}

"""aggregate stddev on columns"""
type v0_delegates_stddev_fields {
  amount: Float
  msg_index: Float
  new_shares: Float
}

"""aggregate stddev_pop on columns"""
type v0_delegates_stddev_pop_fields {
  amount: Float
  msg_index: Float
  new_shares: Float
}

"""aggregate stddev_samp on columns"""
type v0_delegates_stddev_samp_fields {
  amount: Float
  msg_index: Float
  new_shares: Float
}

"""
Streaming cursor of the table "v0_delegates"
"""
input v0_delegates_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_delegates_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_delegates_stream_cursor_value_input {
  amount: bigint
  delegator: String
  denom: String
  msg_index: Int
  new_shares: numeric
  validator: String
}

"""aggregate sum on columns"""
type v0_delegates_sum_fields {
  amount: bigint
  msg_index: Int
  new_shares: numeric
}

"""aggregate var_pop on columns"""
type v0_delegates_var_pop_fields {
  amount: Float
  msg_index: Float
  new_shares: Float
}

"""aggregate var_samp on columns"""
type v0_delegates_var_samp_fields {
  amount: Float
  msg_index: Float
  new_shares: Float
}

"""aggregate variance on columns"""
type v0_delegates_variance_fields {
  amount: Float
  msg_index: Float
  new_shares: Float
}

"""
columns and relationships of "v0.edit_validators"
"""
type v0_edit_validators {
  commission_rate: String
  min_self_delegation: numeric
  msg_index: Int
}

"""
aggregated selection of "v0.edit_validators"
"""
type v0_edit_validators_aggregate {
  aggregate: v0_edit_validators_aggregate_fields
  nodes: [v0_edit_validators!]!
}

"""
aggregate fields of "v0.edit_validators"
"""
type v0_edit_validators_aggregate_fields {
  avg: v0_edit_validators_avg_fields
  count(columns: [v0_edit_validators_select_column!], distinct: Boolean): Int!
  max: v0_edit_validators_max_fields
  min: v0_edit_validators_min_fields
  stddev: v0_edit_validators_stddev_fields
  stddev_pop: v0_edit_validators_stddev_pop_fields
  stddev_samp: v0_edit_validators_stddev_samp_fields
  sum: v0_edit_validators_sum_fields
  var_pop: v0_edit_validators_var_pop_fields
  var_samp: v0_edit_validators_var_samp_fields
  variance: v0_edit_validators_variance_fields
}

"""aggregate avg on columns"""
type v0_edit_validators_avg_fields {
  min_self_delegation: Float
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.edit_validators". All fields are combined with a logical 'AND'.
"""
input v0_edit_validators_bool_exp {
  _and: [v0_edit_validators_bool_exp!]
  _not: v0_edit_validators_bool_exp
  _or: [v0_edit_validators_bool_exp!]
  commission_rate: String_comparison_exp
  min_self_delegation: numeric_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_edit_validators_max_fields {
  commission_rate: String
  min_self_delegation: numeric
  msg_index: Int
}

"""aggregate min on columns"""
type v0_edit_validators_min_fields {
  commission_rate: String
  min_self_delegation: numeric
  msg_index: Int
}

"""Ordering options when selecting data from "v0.edit_validators"."""
input v0_edit_validators_order_by {
  commission_rate: order_by
  min_self_delegation: order_by
  msg_index: order_by
}

"""
select columns of table "v0.edit_validators"
"""
enum v0_edit_validators_select_column {
  """column name"""
  commission_rate

  """column name"""
  min_self_delegation

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_edit_validators_stddev_fields {
  min_self_delegation: Float
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_edit_validators_stddev_pop_fields {
  min_self_delegation: Float
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_edit_validators_stddev_samp_fields {
  min_self_delegation: Float
  msg_index: Float
}

"""
Streaming cursor of the table "v0_edit_validators"
"""
input v0_edit_validators_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_edit_validators_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_edit_validators_stream_cursor_value_input {
  commission_rate: String
  min_self_delegation: numeric
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_edit_validators_sum_fields {
  min_self_delegation: numeric
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_edit_validators_var_pop_fields {
  min_self_delegation: Float
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_edit_validators_var_samp_fields {
  min_self_delegation: Float
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_edit_validators_variance_fields {
  min_self_delegation: Float
  msg_index: Float
}

"""
columns and relationships of "v0.events"
"""
type v0_events {
  """An object relationship"""
  block: v0_blocks
  block_hash: String!

  """An object relationship"""
  chain: v0_chains!
  chain_id: Int!
  data(
    """JSON select path"""
    path: String
  ): jsonb!
  height: Int!
  index: Int!
  time: timestamptz!

  """An object relationship"""
  transaction: v0_transactions
  transaction_hash: String
  transaction_index: Int
}

"""
aggregated selection of "v0.events"
"""
type v0_events_aggregate {
  aggregate: v0_events_aggregate_fields
  nodes: [v0_events!]!
}

input v0_events_aggregate_bool_exp {
  count: v0_events_aggregate_bool_exp_count
}

input v0_events_aggregate_bool_exp_count {
  arguments: [v0_events_select_column!]
  distinct: Boolean
  filter: v0_events_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "v0.events"
"""
type v0_events_aggregate_fields {
  avg: v0_events_avg_fields
  count(columns: [v0_events_select_column!], distinct: Boolean): Int!
  max: v0_events_max_fields
  min: v0_events_min_fields
  stddev: v0_events_stddev_fields
  stddev_pop: v0_events_stddev_pop_fields
  stddev_samp: v0_events_stddev_samp_fields
  sum: v0_events_sum_fields
  var_pop: v0_events_var_pop_fields
  var_samp: v0_events_var_samp_fields
  variance: v0_events_variance_fields
}

"""
order by aggregate values of table "v0.events"
"""
input v0_events_aggregate_order_by {
  avg: v0_events_avg_order_by
  count: order_by
  max: v0_events_max_order_by
  min: v0_events_min_order_by
  stddev: v0_events_stddev_order_by
  stddev_pop: v0_events_stddev_pop_order_by
  stddev_samp: v0_events_stddev_samp_order_by
  sum: v0_events_sum_order_by
  var_pop: v0_events_var_pop_order_by
  var_samp: v0_events_var_samp_order_by
  variance: v0_events_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input v0_events_append_input {
  data: jsonb
}

"""
input type for inserting array relation for remote table "v0.events"
"""
input v0_events_arr_rel_insert_input {
  data: [v0_events_insert_input!]!

  """upsert condition"""
  on_conflict: v0_events_on_conflict
}

"""aggregate avg on columns"""
type v0_events_avg_fields {
  chain_id: Float
  height: Float
  index: Float
  transaction_index: Float
}

"""
order by avg() on columns of table "v0.events"
"""
input v0_events_avg_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""
Boolean expression to filter rows from the table "v0.events". All fields are combined with a logical 'AND'.
"""
input v0_events_bool_exp {
  _and: [v0_events_bool_exp!]
  _not: v0_events_bool_exp
  _or: [v0_events_bool_exp!]
  block: v0_blocks_bool_exp
  block_hash: String_comparison_exp
  chain: v0_chains_bool_exp
  chain_id: Int_comparison_exp
  data: jsonb_comparison_exp
  height: Int_comparison_exp
  index: Int_comparison_exp
  time: timestamptz_comparison_exp
  transaction: v0_transactions_bool_exp
  transaction_hash: String_comparison_exp
  transaction_index: Int_comparison_exp
}

"""
unique or primary key constraints on table "v0.events"
"""
enum v0_events_constraint {
  """
  unique or primary key constraint on columns "block_hash", "index", "chain_id"
  """
  events_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input v0_events_delete_at_path_input {
  data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input v0_events_delete_elem_input {
  data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input v0_events_delete_key_input {
  data: String
}

"""
input type for incrementing numeric columns in table "v0.events"
"""
input v0_events_inc_input {
  chain_id: Int
  height: Int
  index: Int
  transaction_index: Int
}

"""
input type for inserting data into table "v0.events"
"""
input v0_events_insert_input {
  block: v0_blocks_obj_rel_insert_input
  block_hash: String
  chain: v0_chains_obj_rel_insert_input
  chain_id: Int
  data: jsonb
  height: Int
  index: Int
  time: timestamptz
  transaction: v0_transactions_obj_rel_insert_input
  transaction_hash: String
  transaction_index: Int
}

"""aggregate max on columns"""
type v0_events_max_fields {
  block_hash: String
  chain_id: Int
  height: Int
  index: Int
  time: timestamptz
  transaction_hash: String
  transaction_index: Int
}

"""
order by max() on columns of table "v0.events"
"""
input v0_events_max_order_by {
  block_hash: order_by
  chain_id: order_by
  height: order_by
  index: order_by
  time: order_by
  transaction_hash: order_by
  transaction_index: order_by
}

"""aggregate min on columns"""
type v0_events_min_fields {
  block_hash: String
  chain_id: Int
  height: Int
  index: Int
  time: timestamptz
  transaction_hash: String
  transaction_index: Int
}

"""
order by min() on columns of table "v0.events"
"""
input v0_events_min_order_by {
  block_hash: order_by
  chain_id: order_by
  height: order_by
  index: order_by
  time: order_by
  transaction_hash: order_by
  transaction_index: order_by
}

"""
response of any mutation on the table "v0.events"
"""
type v0_events_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [v0_events!]!
}

"""
on_conflict condition type for table "v0.events"
"""
input v0_events_on_conflict {
  constraint: v0_events_constraint!
  update_columns: [v0_events_update_column!]! = []
  where: v0_events_bool_exp
}

"""Ordering options when selecting data from "v0.events"."""
input v0_events_order_by {
  block: v0_blocks_order_by
  block_hash: order_by
  chain: v0_chains_order_by
  chain_id: order_by
  data: order_by
  height: order_by
  index: order_by
  time: order_by
  transaction: v0_transactions_order_by
  transaction_hash: order_by
  transaction_index: order_by
}

"""primary key columns input for table: v0.events"""
input v0_events_pk_columns_input {
  block_hash: String!
  chain_id: Int!
  index: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input v0_events_prepend_input {
  data: jsonb
}

"""
select columns of table "v0.events"
"""
enum v0_events_select_column {
  """column name"""
  block_hash

  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  height

  """column name"""
  index

  """column name"""
  time

  """column name"""
  transaction_hash

  """column name"""
  transaction_index
}

"""
input type for updating data in table "v0.events"
"""
input v0_events_set_input {
  block_hash: String
  chain_id: Int
  data: jsonb
  height: Int
  index: Int
  time: timestamptz
  transaction_hash: String
  transaction_index: Int
}

"""aggregate stddev on columns"""
type v0_events_stddev_fields {
  chain_id: Float
  height: Float
  index: Float
  transaction_index: Float
}

"""
order by stddev() on columns of table "v0.events"
"""
input v0_events_stddev_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""aggregate stddev_pop on columns"""
type v0_events_stddev_pop_fields {
  chain_id: Float
  height: Float
  index: Float
  transaction_index: Float
}

"""
order by stddev_pop() on columns of table "v0.events"
"""
input v0_events_stddev_pop_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""aggregate stddev_samp on columns"""
type v0_events_stddev_samp_fields {
  chain_id: Float
  height: Float
  index: Float
  transaction_index: Float
}

"""
order by stddev_samp() on columns of table "v0.events"
"""
input v0_events_stddev_samp_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""
Streaming cursor of the table "v0_events"
"""
input v0_events_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_events_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_events_stream_cursor_value_input {
  block_hash: String
  chain_id: Int
  data: jsonb
  height: Int
  index: Int
  time: timestamptz
  transaction_hash: String
  transaction_index: Int
}

"""aggregate sum on columns"""
type v0_events_sum_fields {
  chain_id: Int
  height: Int
  index: Int
  transaction_index: Int
}

"""
order by sum() on columns of table "v0.events"
"""
input v0_events_sum_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""
update columns of table "v0.events"
"""
enum v0_events_update_column {
  """column name"""
  block_hash

  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  height

  """column name"""
  index

  """column name"""
  time

  """column name"""
  transaction_hash

  """column name"""
  transaction_index
}

input v0_events_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: v0_events_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: v0_events_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: v0_events_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: v0_events_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: v0_events_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: v0_events_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: v0_events_set_input

  """filter the rows which have to be updated"""
  where: v0_events_bool_exp!
}

"""aggregate var_pop on columns"""
type v0_events_var_pop_fields {
  chain_id: Float
  height: Float
  index: Float
  transaction_index: Float
}

"""
order by var_pop() on columns of table "v0.events"
"""
input v0_events_var_pop_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""aggregate var_samp on columns"""
type v0_events_var_samp_fields {
  chain_id: Float
  height: Float
  index: Float
  transaction_index: Float
}

"""
order by var_samp() on columns of table "v0.events"
"""
input v0_events_var_samp_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""aggregate variance on columns"""
type v0_events_variance_fields {
  chain_id: Float
  height: Float
  index: Float
  transaction_index: Float
}

"""
order by variance() on columns of table "v0.events"
"""
input v0_events_variance_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
  transaction_index: order_by
}

"""
columns and relationships of "v0.executes"
"""
type v0_executes {
  _contract_address: String
  msg_index: Int
}

"""
aggregated selection of "v0.executes"
"""
type v0_executes_aggregate {
  aggregate: v0_executes_aggregate_fields
  nodes: [v0_executes!]!
}

"""
aggregate fields of "v0.executes"
"""
type v0_executes_aggregate_fields {
  avg: v0_executes_avg_fields
  count(columns: [v0_executes_select_column!], distinct: Boolean): Int!
  max: v0_executes_max_fields
  min: v0_executes_min_fields
  stddev: v0_executes_stddev_fields
  stddev_pop: v0_executes_stddev_pop_fields
  stddev_samp: v0_executes_stddev_samp_fields
  sum: v0_executes_sum_fields
  var_pop: v0_executes_var_pop_fields
  var_samp: v0_executes_var_samp_fields
  variance: v0_executes_variance_fields
}

"""aggregate avg on columns"""
type v0_executes_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.executes". All fields are combined with a logical 'AND'.
"""
input v0_executes_bool_exp {
  _and: [v0_executes_bool_exp!]
  _contract_address: String_comparison_exp
  _not: v0_executes_bool_exp
  _or: [v0_executes_bool_exp!]
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_executes_max_fields {
  _contract_address: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_executes_min_fields {
  _contract_address: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.executes"."""
input v0_executes_order_by {
  _contract_address: order_by
  msg_index: order_by
}

"""
select columns of table "v0.executes"
"""
enum v0_executes_select_column {
  """column name"""
  _contract_address

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_executes_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_executes_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_executes_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_executes"
"""
input v0_executes_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_executes_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_executes_stream_cursor_value_input {
  _contract_address: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_executes_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_executes_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_executes_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_executes_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.ibc_packet_receiveds"
"""
type v0_ibc_packet_receiveds {
  _contract_address: String
  module: String
  msg_index: Int
  success: Boolean
}

"""
aggregated selection of "v0.ibc_packet_receiveds"
"""
type v0_ibc_packet_receiveds_aggregate {
  aggregate: v0_ibc_packet_receiveds_aggregate_fields
  nodes: [v0_ibc_packet_receiveds!]!
}

"""
aggregate fields of "v0.ibc_packet_receiveds"
"""
type v0_ibc_packet_receiveds_aggregate_fields {
  avg: v0_ibc_packet_receiveds_avg_fields
  count(columns: [v0_ibc_packet_receiveds_select_column!], distinct: Boolean): Int!
  max: v0_ibc_packet_receiveds_max_fields
  min: v0_ibc_packet_receiveds_min_fields
  stddev: v0_ibc_packet_receiveds_stddev_fields
  stddev_pop: v0_ibc_packet_receiveds_stddev_pop_fields
  stddev_samp: v0_ibc_packet_receiveds_stddev_samp_fields
  sum: v0_ibc_packet_receiveds_sum_fields
  var_pop: v0_ibc_packet_receiveds_var_pop_fields
  var_samp: v0_ibc_packet_receiveds_var_samp_fields
  variance: v0_ibc_packet_receiveds_variance_fields
}

"""aggregate avg on columns"""
type v0_ibc_packet_receiveds_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.ibc_packet_receiveds". All fields are combined with a logical 'AND'.
"""
input v0_ibc_packet_receiveds_bool_exp {
  _and: [v0_ibc_packet_receiveds_bool_exp!]
  _contract_address: String_comparison_exp
  _not: v0_ibc_packet_receiveds_bool_exp
  _or: [v0_ibc_packet_receiveds_bool_exp!]
  module: String_comparison_exp
  msg_index: Int_comparison_exp
  success: Boolean_comparison_exp
}

"""aggregate max on columns"""
type v0_ibc_packet_receiveds_max_fields {
  _contract_address: String
  module: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_ibc_packet_receiveds_min_fields {
  _contract_address: String
  module: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.ibc_packet_receiveds"."""
input v0_ibc_packet_receiveds_order_by {
  _contract_address: order_by
  module: order_by
  msg_index: order_by
  success: order_by
}

"""
select columns of table "v0.ibc_packet_receiveds"
"""
enum v0_ibc_packet_receiveds_select_column {
  """column name"""
  _contract_address

  """column name"""
  module

  """column name"""
  msg_index

  """column name"""
  success
}

"""aggregate stddev on columns"""
type v0_ibc_packet_receiveds_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_ibc_packet_receiveds_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_ibc_packet_receiveds_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_ibc_packet_receiveds"
"""
input v0_ibc_packet_receiveds_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_ibc_packet_receiveds_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_ibc_packet_receiveds_stream_cursor_value_input {
  _contract_address: String
  module: String
  msg_index: Int
  success: Boolean
}

"""aggregate sum on columns"""
type v0_ibc_packet_receiveds_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_ibc_packet_receiveds_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_ibc_packet_receiveds_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_ibc_packet_receiveds_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.instantiates"
"""
type v0_instantiates {
  _contract_address: String
  code_id: Int
  msg_index: Int
}

"""
aggregated selection of "v0.instantiates"
"""
type v0_instantiates_aggregate {
  aggregate: v0_instantiates_aggregate_fields
  nodes: [v0_instantiates!]!
}

"""
aggregate fields of "v0.instantiates"
"""
type v0_instantiates_aggregate_fields {
  avg: v0_instantiates_avg_fields
  count(columns: [v0_instantiates_select_column!], distinct: Boolean): Int!
  max: v0_instantiates_max_fields
  min: v0_instantiates_min_fields
  stddev: v0_instantiates_stddev_fields
  stddev_pop: v0_instantiates_stddev_pop_fields
  stddev_samp: v0_instantiates_stddev_samp_fields
  sum: v0_instantiates_sum_fields
  var_pop: v0_instantiates_var_pop_fields
  var_samp: v0_instantiates_var_samp_fields
  variance: v0_instantiates_variance_fields
}

"""aggregate avg on columns"""
type v0_instantiates_avg_fields {
  code_id: Float
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.instantiates". All fields are combined with a logical 'AND'.
"""
input v0_instantiates_bool_exp {
  _and: [v0_instantiates_bool_exp!]
  _contract_address: String_comparison_exp
  _not: v0_instantiates_bool_exp
  _or: [v0_instantiates_bool_exp!]
  code_id: Int_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_instantiates_max_fields {
  _contract_address: String
  code_id: Int
  msg_index: Int
}

"""aggregate min on columns"""
type v0_instantiates_min_fields {
  _contract_address: String
  code_id: Int
  msg_index: Int
}

"""Ordering options when selecting data from "v0.instantiates"."""
input v0_instantiates_order_by {
  _contract_address: order_by
  code_id: order_by
  msg_index: order_by
}

"""
select columns of table "v0.instantiates"
"""
enum v0_instantiates_select_column {
  """column name"""
  _contract_address

  """column name"""
  code_id

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_instantiates_stddev_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_instantiates_stddev_pop_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_instantiates_stddev_samp_fields {
  code_id: Float
  msg_index: Float
}

"""
Streaming cursor of the table "v0_instantiates"
"""
input v0_instantiates_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_instantiates_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_instantiates_stream_cursor_value_input {
  _contract_address: String
  code_id: Int
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_instantiates_sum_fields {
  code_id: Int
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_instantiates_var_pop_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_instantiates_var_samp_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_instantiates_variance_fields {
  code_id: Float
  msg_index: Float
}

"""
columns and relationships of "v0.livenesses"
"""
type v0_livenesses {
  address: String
  height: numeric
  missed_blocks: String
  mode: String
}

"""
aggregated selection of "v0.livenesses"
"""
type v0_livenesses_aggregate {
  aggregate: v0_livenesses_aggregate_fields
  nodes: [v0_livenesses!]!
}

"""
aggregate fields of "v0.livenesses"
"""
type v0_livenesses_aggregate_fields {
  avg: v0_livenesses_avg_fields
  count(columns: [v0_livenesses_select_column!], distinct: Boolean): Int!
  max: v0_livenesses_max_fields
  min: v0_livenesses_min_fields
  stddev: v0_livenesses_stddev_fields
  stddev_pop: v0_livenesses_stddev_pop_fields
  stddev_samp: v0_livenesses_stddev_samp_fields
  sum: v0_livenesses_sum_fields
  var_pop: v0_livenesses_var_pop_fields
  var_samp: v0_livenesses_var_samp_fields
  variance: v0_livenesses_variance_fields
}

"""aggregate avg on columns"""
type v0_livenesses_avg_fields {
  height: Float
}

"""
Boolean expression to filter rows from the table "v0.livenesses". All fields are combined with a logical 'AND'.
"""
input v0_livenesses_bool_exp {
  _and: [v0_livenesses_bool_exp!]
  _not: v0_livenesses_bool_exp
  _or: [v0_livenesses_bool_exp!]
  address: String_comparison_exp
  height: numeric_comparison_exp
  missed_blocks: String_comparison_exp
  mode: String_comparison_exp
}

"""aggregate max on columns"""
type v0_livenesses_max_fields {
  address: String
  height: numeric
  missed_blocks: String
  mode: String
}

"""aggregate min on columns"""
type v0_livenesses_min_fields {
  address: String
  height: numeric
  missed_blocks: String
  mode: String
}

"""Ordering options when selecting data from "v0.livenesses"."""
input v0_livenesses_order_by {
  address: order_by
  height: order_by
  missed_blocks: order_by
  mode: order_by
}

"""
select columns of table "v0.livenesses"
"""
enum v0_livenesses_select_column {
  """column name"""
  address

  """column name"""
  height

  """column name"""
  missed_blocks

  """column name"""
  mode
}

"""aggregate stddev on columns"""
type v0_livenesses_stddev_fields {
  height: Float
}

"""aggregate stddev_pop on columns"""
type v0_livenesses_stddev_pop_fields {
  height: Float
}

"""aggregate stddev_samp on columns"""
type v0_livenesses_stddev_samp_fields {
  height: Float
}

"""
Streaming cursor of the table "v0_livenesses"
"""
input v0_livenesses_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_livenesses_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_livenesses_stream_cursor_value_input {
  address: String
  height: numeric
  missed_blocks: String
  mode: String
}

"""aggregate sum on columns"""
type v0_livenesses_sum_fields {
  height: numeric
}

"""aggregate var_pop on columns"""
type v0_livenesses_var_pop_fields {
  height: Float
}

"""aggregate var_samp on columns"""
type v0_livenesses_var_samp_fields {
  height: Float
}

"""aggregate variance on columns"""
type v0_livenesses_variance_fields {
  height: Float
}

"""Raw, unprocessed data"""
type v0_logs {
  block_hash: String!

  """An object relationship"""
  chain: v0_chains!
  chain_id: Int!
  data(
    """JSON select path"""
    path: String
  ): jsonb!
  height: Int!
  time: timestamptz!
}

"""
aggregated selection of "v0.logs"
"""
type v0_logs_aggregate {
  aggregate: v0_logs_aggregate_fields
  nodes: [v0_logs!]!
}

input v0_logs_aggregate_bool_exp {
  count: v0_logs_aggregate_bool_exp_count
}

input v0_logs_aggregate_bool_exp_count {
  arguments: [v0_logs_select_column!]
  distinct: Boolean
  filter: v0_logs_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "v0.logs"
"""
type v0_logs_aggregate_fields {
  avg: v0_logs_avg_fields
  count(columns: [v0_logs_select_column!], distinct: Boolean): Int!
  max: v0_logs_max_fields
  min: v0_logs_min_fields
  stddev: v0_logs_stddev_fields
  stddev_pop: v0_logs_stddev_pop_fields
  stddev_samp: v0_logs_stddev_samp_fields
  sum: v0_logs_sum_fields
  var_pop: v0_logs_var_pop_fields
  var_samp: v0_logs_var_samp_fields
  variance: v0_logs_variance_fields
}

"""
order by aggregate values of table "v0.logs"
"""
input v0_logs_aggregate_order_by {
  avg: v0_logs_avg_order_by
  count: order_by
  max: v0_logs_max_order_by
  min: v0_logs_min_order_by
  stddev: v0_logs_stddev_order_by
  stddev_pop: v0_logs_stddev_pop_order_by
  stddev_samp: v0_logs_stddev_samp_order_by
  sum: v0_logs_sum_order_by
  var_pop: v0_logs_var_pop_order_by
  var_samp: v0_logs_var_samp_order_by
  variance: v0_logs_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input v0_logs_append_input {
  data: jsonb
}

"""
input type for inserting array relation for remote table "v0.logs"
"""
input v0_logs_arr_rel_insert_input {
  data: [v0_logs_insert_input!]!

  """upsert condition"""
  on_conflict: v0_logs_on_conflict
}

"""aggregate avg on columns"""
type v0_logs_avg_fields {
  chain_id: Float
  height: Float
}

"""
order by avg() on columns of table "v0.logs"
"""
input v0_logs_avg_order_by {
  chain_id: order_by
  height: order_by
}

"""
Boolean expression to filter rows from the table "v0.logs". All fields are combined with a logical 'AND'.
"""
input v0_logs_bool_exp {
  _and: [v0_logs_bool_exp!]
  _not: v0_logs_bool_exp
  _or: [v0_logs_bool_exp!]
  block_hash: String_comparison_exp
  chain: v0_chains_bool_exp
  chain_id: Int_comparison_exp
  data: jsonb_comparison_exp
  height: Int_comparison_exp
  time: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "v0.logs"
"""
enum v0_logs_constraint {
  """
  unique or primary key constraint on columns "block_hash", "chain_id"
  """
  logs_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input v0_logs_delete_at_path_input {
  data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input v0_logs_delete_elem_input {
  data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input v0_logs_delete_key_input {
  data: String
}

"""
input type for incrementing numeric columns in table "v0.logs"
"""
input v0_logs_inc_input {
  chain_id: Int
  height: Int
}

"""
input type for inserting data into table "v0.logs"
"""
input v0_logs_insert_input {
  block_hash: String
  chain: v0_chains_obj_rel_insert_input
  chain_id: Int
  data: jsonb
  height: Int
  time: timestamptz
}

"""aggregate max on columns"""
type v0_logs_max_fields {
  block_hash: String
  chain_id: Int
  height: Int
  time: timestamptz
}

"""
order by max() on columns of table "v0.logs"
"""
input v0_logs_max_order_by {
  block_hash: order_by
  chain_id: order_by
  height: order_by
  time: order_by
}

"""aggregate min on columns"""
type v0_logs_min_fields {
  block_hash: String
  chain_id: Int
  height: Int
  time: timestamptz
}

"""
order by min() on columns of table "v0.logs"
"""
input v0_logs_min_order_by {
  block_hash: order_by
  chain_id: order_by
  height: order_by
  time: order_by
}

"""
response of any mutation on the table "v0.logs"
"""
type v0_logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [v0_logs!]!
}

"""
on_conflict condition type for table "v0.logs"
"""
input v0_logs_on_conflict {
  constraint: v0_logs_constraint!
  update_columns: [v0_logs_update_column!]! = []
  where: v0_logs_bool_exp
}

"""Ordering options when selecting data from "v0.logs"."""
input v0_logs_order_by {
  block_hash: order_by
  chain: v0_chains_order_by
  chain_id: order_by
  data: order_by
  height: order_by
  time: order_by
}

"""primary key columns input for table: v0.logs"""
input v0_logs_pk_columns_input {
  block_hash: String!
  chain_id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input v0_logs_prepend_input {
  data: jsonb
}

"""
select columns of table "v0.logs"
"""
enum v0_logs_select_column {
  """column name"""
  block_hash

  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  height

  """column name"""
  time
}

"""
input type for updating data in table "v0.logs"
"""
input v0_logs_set_input {
  block_hash: String
  chain_id: Int
  data: jsonb
  height: Int
  time: timestamptz
}

"""aggregate stddev on columns"""
type v0_logs_stddev_fields {
  chain_id: Float
  height: Float
}

"""
order by stddev() on columns of table "v0.logs"
"""
input v0_logs_stddev_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate stddev_pop on columns"""
type v0_logs_stddev_pop_fields {
  chain_id: Float
  height: Float
}

"""
order by stddev_pop() on columns of table "v0.logs"
"""
input v0_logs_stddev_pop_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate stddev_samp on columns"""
type v0_logs_stddev_samp_fields {
  chain_id: Float
  height: Float
}

"""
order by stddev_samp() on columns of table "v0.logs"
"""
input v0_logs_stddev_samp_order_by {
  chain_id: order_by
  height: order_by
}

"""
Streaming cursor of the table "v0_logs"
"""
input v0_logs_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_logs_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_logs_stream_cursor_value_input {
  block_hash: String
  chain_id: Int
  data: jsonb
  height: Int
  time: timestamptz
}

"""aggregate sum on columns"""
type v0_logs_sum_fields {
  chain_id: Int
  height: Int
}

"""
order by sum() on columns of table "v0.logs"
"""
input v0_logs_sum_order_by {
  chain_id: order_by
  height: order_by
}

"""
update columns of table "v0.logs"
"""
enum v0_logs_update_column {
  """column name"""
  block_hash

  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  height

  """column name"""
  time
}

input v0_logs_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: v0_logs_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: v0_logs_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: v0_logs_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: v0_logs_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: v0_logs_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: v0_logs_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: v0_logs_set_input

  """filter the rows which have to be updated"""
  where: v0_logs_bool_exp!
}

"""aggregate var_pop on columns"""
type v0_logs_var_pop_fields {
  chain_id: Float
  height: Float
}

"""
order by var_pop() on columns of table "v0.logs"
"""
input v0_logs_var_pop_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate var_samp on columns"""
type v0_logs_var_samp_fields {
  chain_id: Float
  height: Float
}

"""
order by var_samp() on columns of table "v0.logs"
"""
input v0_logs_var_samp_order_by {
  chain_id: order_by
  height: order_by
}

"""aggregate variance on columns"""
type v0_logs_variance_fields {
  chain_id: Float
  height: Float
}

"""
order by variance() on columns of table "v0.logs"
"""
input v0_logs_variance_order_by {
  chain_id: order_by
  height: order_by
}

"""
columns and relationships of "v0.messages"
"""
type v0_messages {
  mode: String
  sender: String
}

"""
aggregated selection of "v0.messages"
"""
type v0_messages_aggregate {
  aggregate: v0_messages_aggregate_fields
  nodes: [v0_messages!]!
}

"""
aggregate fields of "v0.messages"
"""
type v0_messages_aggregate_fields {
  count(columns: [v0_messages_select_column!], distinct: Boolean): Int!
  max: v0_messages_max_fields
  min: v0_messages_min_fields
}

"""
Boolean expression to filter rows from the table "v0.messages". All fields are combined with a logical 'AND'.
"""
input v0_messages_bool_exp {
  _and: [v0_messages_bool_exp!]
  _not: v0_messages_bool_exp
  _or: [v0_messages_bool_exp!]
  mode: String_comparison_exp
  sender: String_comparison_exp
}

"""aggregate max on columns"""
type v0_messages_max_fields {
  mode: String
  sender: String
}

"""aggregate min on columns"""
type v0_messages_min_fields {
  mode: String
  sender: String
}

"""Ordering options when selecting data from "v0.messages"."""
input v0_messages_order_by {
  mode: order_by
  sender: order_by
}

"""
select columns of table "v0.messages"
"""
enum v0_messages_select_column {
  """column name"""
  mode

  """column name"""
  sender
}

"""
Streaming cursor of the table "v0_messages"
"""
input v0_messages_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_messages_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_messages_stream_cursor_value_input {
  mode: String
  sender: String
}

"""
columns and relationships of "v0.mints"
"""
type v0_mints {
  amount: numeric
  annual_provisions: numeric
  bonded_ratio: numeric
  inflation: numeric
  mode: String
}

"""
aggregated selection of "v0.mints"
"""
type v0_mints_aggregate {
  aggregate: v0_mints_aggregate_fields
  nodes: [v0_mints!]!
}

"""
aggregate fields of "v0.mints"
"""
type v0_mints_aggregate_fields {
  avg: v0_mints_avg_fields
  count(columns: [v0_mints_select_column!], distinct: Boolean): Int!
  max: v0_mints_max_fields
  min: v0_mints_min_fields
  stddev: v0_mints_stddev_fields
  stddev_pop: v0_mints_stddev_pop_fields
  stddev_samp: v0_mints_stddev_samp_fields
  sum: v0_mints_sum_fields
  var_pop: v0_mints_var_pop_fields
  var_samp: v0_mints_var_samp_fields
  variance: v0_mints_variance_fields
}

"""aggregate avg on columns"""
type v0_mints_avg_fields {
  amount: Float
  annual_provisions: Float
  bonded_ratio: Float
  inflation: Float
}

"""
Boolean expression to filter rows from the table "v0.mints". All fields are combined with a logical 'AND'.
"""
input v0_mints_bool_exp {
  _and: [v0_mints_bool_exp!]
  _not: v0_mints_bool_exp
  _or: [v0_mints_bool_exp!]
  amount: numeric_comparison_exp
  annual_provisions: numeric_comparison_exp
  bonded_ratio: numeric_comparison_exp
  inflation: numeric_comparison_exp
  mode: String_comparison_exp
}

"""aggregate max on columns"""
type v0_mints_max_fields {
  amount: numeric
  annual_provisions: numeric
  bonded_ratio: numeric
  inflation: numeric
  mode: String
}

"""aggregate min on columns"""
type v0_mints_min_fields {
  amount: numeric
  annual_provisions: numeric
  bonded_ratio: numeric
  inflation: numeric
  mode: String
}

"""Ordering options when selecting data from "v0.mints"."""
input v0_mints_order_by {
  amount: order_by
  annual_provisions: order_by
  bonded_ratio: order_by
  inflation: order_by
  mode: order_by
}

"""
select columns of table "v0.mints"
"""
enum v0_mints_select_column {
  """column name"""
  amount

  """column name"""
  annual_provisions

  """column name"""
  bonded_ratio

  """column name"""
  inflation

  """column name"""
  mode
}

"""aggregate stddev on columns"""
type v0_mints_stddev_fields {
  amount: Float
  annual_provisions: Float
  bonded_ratio: Float
  inflation: Float
}

"""aggregate stddev_pop on columns"""
type v0_mints_stddev_pop_fields {
  amount: Float
  annual_provisions: Float
  bonded_ratio: Float
  inflation: Float
}

"""aggregate stddev_samp on columns"""
type v0_mints_stddev_samp_fields {
  amount: Float
  annual_provisions: Float
  bonded_ratio: Float
  inflation: Float
}

"""
Streaming cursor of the table "v0_mints"
"""
input v0_mints_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_mints_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_mints_stream_cursor_value_input {
  amount: numeric
  annual_provisions: numeric
  bonded_ratio: numeric
  inflation: numeric
  mode: String
}

"""aggregate sum on columns"""
type v0_mints_sum_fields {
  amount: numeric
  annual_provisions: numeric
  bonded_ratio: numeric
  inflation: numeric
}

"""aggregate var_pop on columns"""
type v0_mints_var_pop_fields {
  amount: Float
  annual_provisions: Float
  bonded_ratio: Float
  inflation: Float
}

"""aggregate var_samp on columns"""
type v0_mints_var_samp_fields {
  amount: Float
  annual_provisions: Float
  bonded_ratio: Float
  inflation: Float
}

"""aggregate variance on columns"""
type v0_mints_variance_fields {
  amount: Float
  annual_provisions: Float
  bonded_ratio: Float
  inflation: Float
}

"""
columns and relationships of "v0.proposal_deposits"
"""
type v0_proposal_deposits {
  amount: bigint
  denom: String
  msg_index: Int
  proposal_id: Int
}

"""
aggregated selection of "v0.proposal_deposits"
"""
type v0_proposal_deposits_aggregate {
  aggregate: v0_proposal_deposits_aggregate_fields
  nodes: [v0_proposal_deposits!]!
}

"""
aggregate fields of "v0.proposal_deposits"
"""
type v0_proposal_deposits_aggregate_fields {
  avg: v0_proposal_deposits_avg_fields
  count(columns: [v0_proposal_deposits_select_column!], distinct: Boolean): Int!
  max: v0_proposal_deposits_max_fields
  min: v0_proposal_deposits_min_fields
  stddev: v0_proposal_deposits_stddev_fields
  stddev_pop: v0_proposal_deposits_stddev_pop_fields
  stddev_samp: v0_proposal_deposits_stddev_samp_fields
  sum: v0_proposal_deposits_sum_fields
  var_pop: v0_proposal_deposits_var_pop_fields
  var_samp: v0_proposal_deposits_var_samp_fields
  variance: v0_proposal_deposits_variance_fields
}

"""aggregate avg on columns"""
type v0_proposal_deposits_avg_fields {
  amount: Float
  msg_index: Float
  proposal_id: Float
}

"""
Boolean expression to filter rows from the table "v0.proposal_deposits". All fields are combined with a logical 'AND'.
"""
input v0_proposal_deposits_bool_exp {
  _and: [v0_proposal_deposits_bool_exp!]
  _not: v0_proposal_deposits_bool_exp
  _or: [v0_proposal_deposits_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  msg_index: Int_comparison_exp
  proposal_id: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_proposal_deposits_max_fields {
  amount: bigint
  denom: String
  msg_index: Int
  proposal_id: Int
}

"""aggregate min on columns"""
type v0_proposal_deposits_min_fields {
  amount: bigint
  denom: String
  msg_index: Int
  proposal_id: Int
}

"""Ordering options when selecting data from "v0.proposal_deposits"."""
input v0_proposal_deposits_order_by {
  amount: order_by
  denom: order_by
  msg_index: order_by
  proposal_id: order_by
}

"""
select columns of table "v0.proposal_deposits"
"""
enum v0_proposal_deposits_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  msg_index

  """column name"""
  proposal_id
}

"""aggregate stddev on columns"""
type v0_proposal_deposits_stddev_fields {
  amount: Float
  msg_index: Float
  proposal_id: Float
}

"""aggregate stddev_pop on columns"""
type v0_proposal_deposits_stddev_pop_fields {
  amount: Float
  msg_index: Float
  proposal_id: Float
}

"""aggregate stddev_samp on columns"""
type v0_proposal_deposits_stddev_samp_fields {
  amount: Float
  msg_index: Float
  proposal_id: Float
}

"""
Streaming cursor of the table "v0_proposal_deposits"
"""
input v0_proposal_deposits_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_proposal_deposits_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_proposal_deposits_stream_cursor_value_input {
  amount: bigint
  denom: String
  msg_index: Int
  proposal_id: Int
}

"""aggregate sum on columns"""
type v0_proposal_deposits_sum_fields {
  amount: bigint
  msg_index: Int
  proposal_id: Int
}

"""aggregate var_pop on columns"""
type v0_proposal_deposits_var_pop_fields {
  amount: Float
  msg_index: Float
  proposal_id: Float
}

"""aggregate var_samp on columns"""
type v0_proposal_deposits_var_samp_fields {
  amount: Float
  msg_index: Float
  proposal_id: Float
}

"""aggregate variance on columns"""
type v0_proposal_deposits_variance_fields {
  amount: Float
  msg_index: Float
  proposal_id: Float
}

"""
columns and relationships of "v0.proposal_votes"
"""
type v0_proposal_votes {
  msg_index: Int
  option: String
  proposal_id: Int
  voter: String
}

"""
aggregated selection of "v0.proposal_votes"
"""
type v0_proposal_votes_aggregate {
  aggregate: v0_proposal_votes_aggregate_fields
  nodes: [v0_proposal_votes!]!
}

"""
aggregate fields of "v0.proposal_votes"
"""
type v0_proposal_votes_aggregate_fields {
  avg: v0_proposal_votes_avg_fields
  count(columns: [v0_proposal_votes_select_column!], distinct: Boolean): Int!
  max: v0_proposal_votes_max_fields
  min: v0_proposal_votes_min_fields
  stddev: v0_proposal_votes_stddev_fields
  stddev_pop: v0_proposal_votes_stddev_pop_fields
  stddev_samp: v0_proposal_votes_stddev_samp_fields
  sum: v0_proposal_votes_sum_fields
  var_pop: v0_proposal_votes_var_pop_fields
  var_samp: v0_proposal_votes_var_samp_fields
  variance: v0_proposal_votes_variance_fields
}

"""aggregate avg on columns"""
type v0_proposal_votes_avg_fields {
  msg_index: Float
  proposal_id: Float
}

"""
Boolean expression to filter rows from the table "v0.proposal_votes". All fields are combined with a logical 'AND'.
"""
input v0_proposal_votes_bool_exp {
  _and: [v0_proposal_votes_bool_exp!]
  _not: v0_proposal_votes_bool_exp
  _or: [v0_proposal_votes_bool_exp!]
  msg_index: Int_comparison_exp
  option: String_comparison_exp
  proposal_id: Int_comparison_exp
  voter: String_comparison_exp
}

"""aggregate max on columns"""
type v0_proposal_votes_max_fields {
  msg_index: Int
  option: String
  proposal_id: Int
  voter: String
}

"""aggregate min on columns"""
type v0_proposal_votes_min_fields {
  msg_index: Int
  option: String
  proposal_id: Int
  voter: String
}

"""Ordering options when selecting data from "v0.proposal_votes"."""
input v0_proposal_votes_order_by {
  msg_index: order_by
  option: order_by
  proposal_id: order_by
  voter: order_by
}

"""
select columns of table "v0.proposal_votes"
"""
enum v0_proposal_votes_select_column {
  """column name"""
  msg_index

  """column name"""
  option

  """column name"""
  proposal_id

  """column name"""
  voter
}

"""aggregate stddev on columns"""
type v0_proposal_votes_stddev_fields {
  msg_index: Float
  proposal_id: Float
}

"""aggregate stddev_pop on columns"""
type v0_proposal_votes_stddev_pop_fields {
  msg_index: Float
  proposal_id: Float
}

"""aggregate stddev_samp on columns"""
type v0_proposal_votes_stddev_samp_fields {
  msg_index: Float
  proposal_id: Float
}

"""
Streaming cursor of the table "v0_proposal_votes"
"""
input v0_proposal_votes_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_proposal_votes_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_proposal_votes_stream_cursor_value_input {
  msg_index: Int
  option: String
  proposal_id: Int
  voter: String
}

"""aggregate sum on columns"""
type v0_proposal_votes_sum_fields {
  msg_index: Int
  proposal_id: Int
}

"""aggregate var_pop on columns"""
type v0_proposal_votes_var_pop_fields {
  msg_index: Float
  proposal_id: Float
}

"""aggregate var_samp on columns"""
type v0_proposal_votes_var_samp_fields {
  msg_index: Float
  proposal_id: Float
}

"""aggregate variance on columns"""
type v0_proposal_votes_variance_fields {
  msg_index: Float
  proposal_id: Float
}

"""
columns and relationships of "v0.recv_packets"
"""
type v0_recv_packets {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""
aggregated selection of "v0.recv_packets"
"""
type v0_recv_packets_aggregate {
  aggregate: v0_recv_packets_aggregate_fields
  nodes: [v0_recv_packets!]!
}

"""
aggregate fields of "v0.recv_packets"
"""
type v0_recv_packets_aggregate_fields {
  avg: v0_recv_packets_avg_fields
  count(columns: [v0_recv_packets_select_column!], distinct: Boolean): Int!
  max: v0_recv_packets_max_fields
  min: v0_recv_packets_min_fields
  stddev: v0_recv_packets_stddev_fields
  stddev_pop: v0_recv_packets_stddev_pop_fields
  stddev_samp: v0_recv_packets_stddev_samp_fields
  sum: v0_recv_packets_sum_fields
  var_pop: v0_recv_packets_var_pop_fields
  var_samp: v0_recv_packets_var_samp_fields
  variance: v0_recv_packets_variance_fields
}

"""aggregate avg on columns"""
type v0_recv_packets_avg_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
Boolean expression to filter rows from the table "v0.recv_packets". All fields are combined with a logical 'AND'.
"""
input v0_recv_packets_bool_exp {
  _and: [v0_recv_packets_bool_exp!]
  _not: v0_recv_packets_bool_exp
  _or: [v0_recv_packets_bool_exp!]
  connection_id: String_comparison_exp
  msg_index: Int_comparison_exp
  packet_channel_ordering: String_comparison_exp
  packet_connection: String_comparison_exp
  packet_data: String_comparison_exp
  packet_data_hex: String_comparison_exp
  packet_dst_channel: String_comparison_exp
  packet_dst_port: String_comparison_exp
  packet_sequence: numeric_comparison_exp
  packet_src_channel: String_comparison_exp
  packet_src_port: String_comparison_exp
  packet_timeout_height: String_comparison_exp
  packet_timeout_timestamp: numeric_comparison_exp
}

"""aggregate max on columns"""
type v0_recv_packets_max_fields {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""aggregate min on columns"""
type v0_recv_packets_min_fields {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""Ordering options when selecting data from "v0.recv_packets"."""
input v0_recv_packets_order_by {
  connection_id: order_by
  msg_index: order_by
  packet_channel_ordering: order_by
  packet_connection: order_by
  packet_data: order_by
  packet_data_hex: order_by
  packet_dst_channel: order_by
  packet_dst_port: order_by
  packet_sequence: order_by
  packet_src_channel: order_by
  packet_src_port: order_by
  packet_timeout_height: order_by
  packet_timeout_timestamp: order_by
}

"""
select columns of table "v0.recv_packets"
"""
enum v0_recv_packets_select_column {
  """column name"""
  connection_id

  """column name"""
  msg_index

  """column name"""
  packet_channel_ordering

  """column name"""
  packet_connection

  """column name"""
  packet_data

  """column name"""
  packet_data_hex

  """column name"""
  packet_dst_channel

  """column name"""
  packet_dst_port

  """column name"""
  packet_sequence

  """column name"""
  packet_src_channel

  """column name"""
  packet_src_port

  """column name"""
  packet_timeout_height

  """column name"""
  packet_timeout_timestamp
}

"""aggregate stddev on columns"""
type v0_recv_packets_stddev_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate stddev_pop on columns"""
type v0_recv_packets_stddev_pop_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate stddev_samp on columns"""
type v0_recv_packets_stddev_samp_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
Streaming cursor of the table "v0_recv_packets"
"""
input v0_recv_packets_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_recv_packets_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_recv_packets_stream_cursor_value_input {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""aggregate sum on columns"""
type v0_recv_packets_sum_fields {
  msg_index: Int
  packet_sequence: numeric
  packet_timeout_timestamp: numeric
}

"""aggregate var_pop on columns"""
type v0_recv_packets_var_pop_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate var_samp on columns"""
type v0_recv_packets_var_samp_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate variance on columns"""
type v0_recv_packets_variance_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
columns and relationships of "v0.redelegates"
"""
type v0_redelegates {
  amount: bigint
  completion_time: String
  denom: String
  destination_validator: String
  msg_index: Int
  source_validator: String
}

"""
aggregated selection of "v0.redelegates"
"""
type v0_redelegates_aggregate {
  aggregate: v0_redelegates_aggregate_fields
  nodes: [v0_redelegates!]!
}

"""
aggregate fields of "v0.redelegates"
"""
type v0_redelegates_aggregate_fields {
  avg: v0_redelegates_avg_fields
  count(columns: [v0_redelegates_select_column!], distinct: Boolean): Int!
  max: v0_redelegates_max_fields
  min: v0_redelegates_min_fields
  stddev: v0_redelegates_stddev_fields
  stddev_pop: v0_redelegates_stddev_pop_fields
  stddev_samp: v0_redelegates_stddev_samp_fields
  sum: v0_redelegates_sum_fields
  var_pop: v0_redelegates_var_pop_fields
  var_samp: v0_redelegates_var_samp_fields
  variance: v0_redelegates_variance_fields
}

"""aggregate avg on columns"""
type v0_redelegates_avg_fields {
  amount: Float
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.redelegates". All fields are combined with a logical 'AND'.
"""
input v0_redelegates_bool_exp {
  _and: [v0_redelegates_bool_exp!]
  _not: v0_redelegates_bool_exp
  _or: [v0_redelegates_bool_exp!]
  amount: bigint_comparison_exp
  completion_time: String_comparison_exp
  denom: String_comparison_exp
  destination_validator: String_comparison_exp
  msg_index: Int_comparison_exp
  source_validator: String_comparison_exp
}

"""aggregate max on columns"""
type v0_redelegates_max_fields {
  amount: bigint
  completion_time: String
  denom: String
  destination_validator: String
  msg_index: Int
  source_validator: String
}

"""aggregate min on columns"""
type v0_redelegates_min_fields {
  amount: bigint
  completion_time: String
  denom: String
  destination_validator: String
  msg_index: Int
  source_validator: String
}

"""Ordering options when selecting data from "v0.redelegates"."""
input v0_redelegates_order_by {
  amount: order_by
  completion_time: order_by
  denom: order_by
  destination_validator: order_by
  msg_index: order_by
  source_validator: order_by
}

"""
select columns of table "v0.redelegates"
"""
enum v0_redelegates_select_column {
  """column name"""
  amount

  """column name"""
  completion_time

  """column name"""
  denom

  """column name"""
  destination_validator

  """column name"""
  msg_index

  """column name"""
  source_validator
}

"""aggregate stddev on columns"""
type v0_redelegates_stddev_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_redelegates_stddev_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_redelegates_stddev_samp_fields {
  amount: Float
  msg_index: Float
}

"""
Streaming cursor of the table "v0_redelegates"
"""
input v0_redelegates_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_redelegates_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_redelegates_stream_cursor_value_input {
  amount: bigint
  completion_time: String
  denom: String
  destination_validator: String
  msg_index: Int
  source_validator: String
}

"""aggregate sum on columns"""
type v0_redelegates_sum_fields {
  amount: bigint
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_redelegates_var_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_redelegates_var_samp_fields {
  amount: Float
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_redelegates_variance_fields {
  amount: Float
  msg_index: Float
}

"""
columns and relationships of "v0.replies"
"""
type v0_replies {
  _contract_address: String
  msg_index: Int
}

"""
aggregated selection of "v0.replies"
"""
type v0_replies_aggregate {
  aggregate: v0_replies_aggregate_fields
  nodes: [v0_replies!]!
}

"""
aggregate fields of "v0.replies"
"""
type v0_replies_aggregate_fields {
  avg: v0_replies_avg_fields
  count(columns: [v0_replies_select_column!], distinct: Boolean): Int!
  max: v0_replies_max_fields
  min: v0_replies_min_fields
  stddev: v0_replies_stddev_fields
  stddev_pop: v0_replies_stddev_pop_fields
  stddev_samp: v0_replies_stddev_samp_fields
  sum: v0_replies_sum_fields
  var_pop: v0_replies_var_pop_fields
  var_samp: v0_replies_var_samp_fields
  variance: v0_replies_variance_fields
}

"""aggregate avg on columns"""
type v0_replies_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.replies". All fields are combined with a logical 'AND'.
"""
input v0_replies_bool_exp {
  _and: [v0_replies_bool_exp!]
  _contract_address: String_comparison_exp
  _not: v0_replies_bool_exp
  _or: [v0_replies_bool_exp!]
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_replies_max_fields {
  _contract_address: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_replies_min_fields {
  _contract_address: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.replies"."""
input v0_replies_order_by {
  _contract_address: order_by
  msg_index: order_by
}

"""
select columns of table "v0.replies"
"""
enum v0_replies_select_column {
  """column name"""
  _contract_address

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_replies_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_replies_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_replies_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_replies"
"""
input v0_replies_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_replies_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_replies_stream_cursor_value_input {
  _contract_address: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_replies_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_replies_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_replies_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_replies_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.rewardses"
"""
type v0_rewardses {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""
aggregated selection of "v0.rewardses"
"""
type v0_rewardses_aggregate {
  aggregate: v0_rewardses_aggregate_fields
  nodes: [v0_rewardses!]!
}

"""
aggregate fields of "v0.rewardses"
"""
type v0_rewardses_aggregate_fields {
  avg: v0_rewardses_avg_fields
  count(columns: [v0_rewardses_select_column!], distinct: Boolean): Int!
  max: v0_rewardses_max_fields
  min: v0_rewardses_min_fields
  stddev: v0_rewardses_stddev_fields
  stddev_pop: v0_rewardses_stddev_pop_fields
  stddev_samp: v0_rewardses_stddev_samp_fields
  sum: v0_rewardses_sum_fields
  var_pop: v0_rewardses_var_pop_fields
  var_samp: v0_rewardses_var_samp_fields
  variance: v0_rewardses_variance_fields
}

"""aggregate avg on columns"""
type v0_rewardses_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.rewardses". All fields are combined with a logical 'AND'.
"""
input v0_rewardses_bool_exp {
  _and: [v0_rewardses_bool_exp!]
  _not: v0_rewardses_bool_exp
  _or: [v0_rewardses_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  mode: String_comparison_exp
  validator: String_comparison_exp
}

"""aggregate max on columns"""
type v0_rewardses_max_fields {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""aggregate min on columns"""
type v0_rewardses_min_fields {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""Ordering options when selecting data from "v0.rewardses"."""
input v0_rewardses_order_by {
  amount: order_by
  denom: order_by
  mode: order_by
  validator: order_by
}

"""
select columns of table "v0.rewardses"
"""
enum v0_rewardses_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  mode

  """column name"""
  validator
}

"""aggregate stddev on columns"""
type v0_rewardses_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_rewardses_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_rewardses_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_rewardses"
"""
input v0_rewardses_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_rewardses_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_rewardses_stream_cursor_value_input {
  amount: bigint
  denom: String
  mode: String
  validator: String
}

"""aggregate sum on columns"""
type v0_rewardses_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_rewardses_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_rewardses_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_rewardses_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.send_packets"
"""
type v0_send_packets {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""
aggregated selection of "v0.send_packets"
"""
type v0_send_packets_aggregate {
  aggregate: v0_send_packets_aggregate_fields
  nodes: [v0_send_packets!]!
}

"""
aggregate fields of "v0.send_packets"
"""
type v0_send_packets_aggregate_fields {
  avg: v0_send_packets_avg_fields
  count(columns: [v0_send_packets_select_column!], distinct: Boolean): Int!
  max: v0_send_packets_max_fields
  min: v0_send_packets_min_fields
  stddev: v0_send_packets_stddev_fields
  stddev_pop: v0_send_packets_stddev_pop_fields
  stddev_samp: v0_send_packets_stddev_samp_fields
  sum: v0_send_packets_sum_fields
  var_pop: v0_send_packets_var_pop_fields
  var_samp: v0_send_packets_var_samp_fields
  variance: v0_send_packets_variance_fields
}

"""aggregate avg on columns"""
type v0_send_packets_avg_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
Boolean expression to filter rows from the table "v0.send_packets". All fields are combined with a logical 'AND'.
"""
input v0_send_packets_bool_exp {
  _and: [v0_send_packets_bool_exp!]
  _not: v0_send_packets_bool_exp
  _or: [v0_send_packets_bool_exp!]
  connection_id: String_comparison_exp
  msg_index: Int_comparison_exp
  packet_channel_ordering: String_comparison_exp
  packet_connection: String_comparison_exp
  packet_data: String_comparison_exp
  packet_data_hex: String_comparison_exp
  packet_dst_channel: String_comparison_exp
  packet_dst_port: String_comparison_exp
  packet_sequence: numeric_comparison_exp
  packet_src_channel: String_comparison_exp
  packet_src_port: String_comparison_exp
  packet_timeout_height: String_comparison_exp
  packet_timeout_timestamp: numeric_comparison_exp
}

"""aggregate max on columns"""
type v0_send_packets_max_fields {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""aggregate min on columns"""
type v0_send_packets_min_fields {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""Ordering options when selecting data from "v0.send_packets"."""
input v0_send_packets_order_by {
  connection_id: order_by
  msg_index: order_by
  packet_channel_ordering: order_by
  packet_connection: order_by
  packet_data: order_by
  packet_data_hex: order_by
  packet_dst_channel: order_by
  packet_dst_port: order_by
  packet_sequence: order_by
  packet_src_channel: order_by
  packet_src_port: order_by
  packet_timeout_height: order_by
  packet_timeout_timestamp: order_by
}

"""
select columns of table "v0.send_packets"
"""
enum v0_send_packets_select_column {
  """column name"""
  connection_id

  """column name"""
  msg_index

  """column name"""
  packet_channel_ordering

  """column name"""
  packet_connection

  """column name"""
  packet_data

  """column name"""
  packet_data_hex

  """column name"""
  packet_dst_channel

  """column name"""
  packet_dst_port

  """column name"""
  packet_sequence

  """column name"""
  packet_src_channel

  """column name"""
  packet_src_port

  """column name"""
  packet_timeout_height

  """column name"""
  packet_timeout_timestamp
}

"""aggregate stddev on columns"""
type v0_send_packets_stddev_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate stddev_pop on columns"""
type v0_send_packets_stddev_pop_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate stddev_samp on columns"""
type v0_send_packets_stddev_samp_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
Streaming cursor of the table "v0_send_packets"
"""
input v0_send_packets_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_send_packets_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_send_packets_stream_cursor_value_input {
  connection_id: String
  msg_index: Int
  packet_channel_ordering: String
  packet_connection: String
  packet_data: String
  packet_data_hex: String
  packet_dst_channel: String
  packet_dst_port: String
  packet_sequence: numeric
  packet_src_channel: String
  packet_src_port: String
  packet_timeout_height: String
  packet_timeout_timestamp: numeric
}

"""aggregate sum on columns"""
type v0_send_packets_sum_fields {
  msg_index: Int
  packet_sequence: numeric
  packet_timeout_timestamp: numeric
}

"""aggregate var_pop on columns"""
type v0_send_packets_var_pop_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate var_samp on columns"""
type v0_send_packets_var_samp_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""aggregate variance on columns"""
type v0_send_packets_variance_fields {
  msg_index: Float
  packet_sequence: Float
  packet_timeout_timestamp: Float
}

"""
columns and relationships of "v0.slashes"
"""
type v0_slashes {
  address: String
  burned_coins: numeric
  jailed: String
  mode: String
  power: numeric
  reason: String
}

"""
aggregated selection of "v0.slashes"
"""
type v0_slashes_aggregate {
  aggregate: v0_slashes_aggregate_fields
  nodes: [v0_slashes!]!
}

"""
aggregate fields of "v0.slashes"
"""
type v0_slashes_aggregate_fields {
  avg: v0_slashes_avg_fields
  count(columns: [v0_slashes_select_column!], distinct: Boolean): Int!
  max: v0_slashes_max_fields
  min: v0_slashes_min_fields
  stddev: v0_slashes_stddev_fields
  stddev_pop: v0_slashes_stddev_pop_fields
  stddev_samp: v0_slashes_stddev_samp_fields
  sum: v0_slashes_sum_fields
  var_pop: v0_slashes_var_pop_fields
  var_samp: v0_slashes_var_samp_fields
  variance: v0_slashes_variance_fields
}

"""aggregate avg on columns"""
type v0_slashes_avg_fields {
  burned_coins: Float
  power: Float
}

"""
Boolean expression to filter rows from the table "v0.slashes". All fields are combined with a logical 'AND'.
"""
input v0_slashes_bool_exp {
  _and: [v0_slashes_bool_exp!]
  _not: v0_slashes_bool_exp
  _or: [v0_slashes_bool_exp!]
  address: String_comparison_exp
  burned_coins: numeric_comparison_exp
  jailed: String_comparison_exp
  mode: String_comparison_exp
  power: numeric_comparison_exp
  reason: String_comparison_exp
}

"""aggregate max on columns"""
type v0_slashes_max_fields {
  address: String
  burned_coins: numeric
  jailed: String
  mode: String
  power: numeric
  reason: String
}

"""aggregate min on columns"""
type v0_slashes_min_fields {
  address: String
  burned_coins: numeric
  jailed: String
  mode: String
  power: numeric
  reason: String
}

"""Ordering options when selecting data from "v0.slashes"."""
input v0_slashes_order_by {
  address: order_by
  burned_coins: order_by
  jailed: order_by
  mode: order_by
  power: order_by
  reason: order_by
}

"""
select columns of table "v0.slashes"
"""
enum v0_slashes_select_column {
  """column name"""
  address

  """column name"""
  burned_coins

  """column name"""
  jailed

  """column name"""
  mode

  """column name"""
  power

  """column name"""
  reason
}

"""aggregate stddev on columns"""
type v0_slashes_stddev_fields {
  burned_coins: Float
  power: Float
}

"""aggregate stddev_pop on columns"""
type v0_slashes_stddev_pop_fields {
  burned_coins: Float
  power: Float
}

"""aggregate stddev_samp on columns"""
type v0_slashes_stddev_samp_fields {
  burned_coins: Float
  power: Float
}

"""
Streaming cursor of the table "v0_slashes"
"""
input v0_slashes_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_slashes_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_slashes_stream_cursor_value_input {
  address: String
  burned_coins: numeric
  jailed: String
  mode: String
  power: numeric
  reason: String
}

"""aggregate sum on columns"""
type v0_slashes_sum_fields {
  burned_coins: numeric
  power: numeric
}

"""aggregate var_pop on columns"""
type v0_slashes_var_pop_fields {
  burned_coins: Float
  power: Float
}

"""aggregate var_samp on columns"""
type v0_slashes_var_samp_fields {
  burned_coins: Float
  power: Float
}

"""aggregate variance on columns"""
type v0_slashes_variance_fields {
  burned_coins: Float
  power: Float
}

"""
columns and relationships of "v0.store_codes"
"""
type v0_store_codes {
  code_checksum: String
  code_id: numeric
  msg_index: Int
}

"""
aggregated selection of "v0.store_codes"
"""
type v0_store_codes_aggregate {
  aggregate: v0_store_codes_aggregate_fields
  nodes: [v0_store_codes!]!
}

"""
aggregate fields of "v0.store_codes"
"""
type v0_store_codes_aggregate_fields {
  avg: v0_store_codes_avg_fields
  count(columns: [v0_store_codes_select_column!], distinct: Boolean): Int!
  max: v0_store_codes_max_fields
  min: v0_store_codes_min_fields
  stddev: v0_store_codes_stddev_fields
  stddev_pop: v0_store_codes_stddev_pop_fields
  stddev_samp: v0_store_codes_stddev_samp_fields
  sum: v0_store_codes_sum_fields
  var_pop: v0_store_codes_var_pop_fields
  var_samp: v0_store_codes_var_samp_fields
  variance: v0_store_codes_variance_fields
}

"""aggregate avg on columns"""
type v0_store_codes_avg_fields {
  code_id: Float
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.store_codes". All fields are combined with a logical 'AND'.
"""
input v0_store_codes_bool_exp {
  _and: [v0_store_codes_bool_exp!]
  _not: v0_store_codes_bool_exp
  _or: [v0_store_codes_bool_exp!]
  code_checksum: String_comparison_exp
  code_id: numeric_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_store_codes_max_fields {
  code_checksum: String
  code_id: numeric
  msg_index: Int
}

"""aggregate min on columns"""
type v0_store_codes_min_fields {
  code_checksum: String
  code_id: numeric
  msg_index: Int
}

"""Ordering options when selecting data from "v0.store_codes"."""
input v0_store_codes_order_by {
  code_checksum: order_by
  code_id: order_by
  msg_index: order_by
}

"""
select columns of table "v0.store_codes"
"""
enum v0_store_codes_select_column {
  """column name"""
  code_checksum

  """column name"""
  code_id

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_store_codes_stddev_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_store_codes_stddev_pop_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_store_codes_stddev_samp_fields {
  code_id: Float
  msg_index: Float
}

"""
Streaming cursor of the table "v0_store_codes"
"""
input v0_store_codes_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_store_codes_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_store_codes_stream_cursor_value_input {
  code_checksum: String
  code_id: numeric
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_store_codes_sum_fields {
  code_id: numeric
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_store_codes_var_pop_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_store_codes_var_samp_fields {
  code_id: Float
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_store_codes_variance_fields {
  code_id: Float
  msg_index: Float
}

"""
columns and relationships of "v0.store_wasm_codes"
"""
type v0_store_wasm_codes {
  mode: String
  wasm_checksum: String
}

"""
aggregated selection of "v0.store_wasm_codes"
"""
type v0_store_wasm_codes_aggregate {
  aggregate: v0_store_wasm_codes_aggregate_fields
  nodes: [v0_store_wasm_codes!]!
}

"""
aggregate fields of "v0.store_wasm_codes"
"""
type v0_store_wasm_codes_aggregate_fields {
  count(columns: [v0_store_wasm_codes_select_column!], distinct: Boolean): Int!
  max: v0_store_wasm_codes_max_fields
  min: v0_store_wasm_codes_min_fields
}

"""
Boolean expression to filter rows from the table "v0.store_wasm_codes". All fields are combined with a logical 'AND'.
"""
input v0_store_wasm_codes_bool_exp {
  _and: [v0_store_wasm_codes_bool_exp!]
  _not: v0_store_wasm_codes_bool_exp
  _or: [v0_store_wasm_codes_bool_exp!]
  mode: String_comparison_exp
  wasm_checksum: String_comparison_exp
}

"""aggregate max on columns"""
type v0_store_wasm_codes_max_fields {
  mode: String
  wasm_checksum: String
}

"""aggregate min on columns"""
type v0_store_wasm_codes_min_fields {
  mode: String
  wasm_checksum: String
}

"""Ordering options when selecting data from "v0.store_wasm_codes"."""
input v0_store_wasm_codes_order_by {
  mode: order_by
  wasm_checksum: order_by
}

"""
select columns of table "v0.store_wasm_codes"
"""
enum v0_store_wasm_codes_select_column {
  """column name"""
  mode

  """column name"""
  wasm_checksum
}

"""
Streaming cursor of the table "v0_store_wasm_codes"
"""
input v0_store_wasm_codes_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_store_wasm_codes_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_store_wasm_codes_stream_cursor_value_input {
  mode: String
  wasm_checksum: String
}

"""
columns and relationships of "v0.submit_proposals"
"""
type v0_submit_proposals {
  msg_index: Int
  proposal_id: Int
  proposal_messages: String
  voting_period_start: Int
}

"""
aggregated selection of "v0.submit_proposals"
"""
type v0_submit_proposals_aggregate {
  aggregate: v0_submit_proposals_aggregate_fields
  nodes: [v0_submit_proposals!]!
}

"""
aggregate fields of "v0.submit_proposals"
"""
type v0_submit_proposals_aggregate_fields {
  avg: v0_submit_proposals_avg_fields
  count(columns: [v0_submit_proposals_select_column!], distinct: Boolean): Int!
  max: v0_submit_proposals_max_fields
  min: v0_submit_proposals_min_fields
  stddev: v0_submit_proposals_stddev_fields
  stddev_pop: v0_submit_proposals_stddev_pop_fields
  stddev_samp: v0_submit_proposals_stddev_samp_fields
  sum: v0_submit_proposals_sum_fields
  var_pop: v0_submit_proposals_var_pop_fields
  var_samp: v0_submit_proposals_var_samp_fields
  variance: v0_submit_proposals_variance_fields
}

"""aggregate avg on columns"""
type v0_submit_proposals_avg_fields {
  msg_index: Float
  proposal_id: Float
  voting_period_start: Float
}

"""
Boolean expression to filter rows from the table "v0.submit_proposals". All fields are combined with a logical 'AND'.
"""
input v0_submit_proposals_bool_exp {
  _and: [v0_submit_proposals_bool_exp!]
  _not: v0_submit_proposals_bool_exp
  _or: [v0_submit_proposals_bool_exp!]
  msg_index: Int_comparison_exp
  proposal_id: Int_comparison_exp
  proposal_messages: String_comparison_exp
  voting_period_start: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_submit_proposals_max_fields {
  msg_index: Int
  proposal_id: Int
  proposal_messages: String
  voting_period_start: Int
}

"""aggregate min on columns"""
type v0_submit_proposals_min_fields {
  msg_index: Int
  proposal_id: Int
  proposal_messages: String
  voting_period_start: Int
}

"""Ordering options when selecting data from "v0.submit_proposals"."""
input v0_submit_proposals_order_by {
  msg_index: order_by
  proposal_id: order_by
  proposal_messages: order_by
  voting_period_start: order_by
}

"""
select columns of table "v0.submit_proposals"
"""
enum v0_submit_proposals_select_column {
  """column name"""
  msg_index

  """column name"""
  proposal_id

  """column name"""
  proposal_messages

  """column name"""
  voting_period_start
}

"""aggregate stddev on columns"""
type v0_submit_proposals_stddev_fields {
  msg_index: Float
  proposal_id: Float
  voting_period_start: Float
}

"""aggregate stddev_pop on columns"""
type v0_submit_proposals_stddev_pop_fields {
  msg_index: Float
  proposal_id: Float
  voting_period_start: Float
}

"""aggregate stddev_samp on columns"""
type v0_submit_proposals_stddev_samp_fields {
  msg_index: Float
  proposal_id: Float
  voting_period_start: Float
}

"""
Streaming cursor of the table "v0_submit_proposals"
"""
input v0_submit_proposals_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_submit_proposals_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_submit_proposals_stream_cursor_value_input {
  msg_index: Int
  proposal_id: Int
  proposal_messages: String
  voting_period_start: Int
}

"""aggregate sum on columns"""
type v0_submit_proposals_sum_fields {
  msg_index: Int
  proposal_id: Int
  voting_period_start: Int
}

"""aggregate var_pop on columns"""
type v0_submit_proposals_var_pop_fields {
  msg_index: Float
  proposal_id: Float
  voting_period_start: Float
}

"""aggregate var_samp on columns"""
type v0_submit_proposals_var_samp_fields {
  msg_index: Float
  proposal_id: Float
  voting_period_start: Float
}

"""aggregate variance on columns"""
type v0_submit_proposals_variance_fields {
  msg_index: Float
  proposal_id: Float
  voting_period_start: Float
}

"""
columns and relationships of "v0.transactions"
"""
type v0_transactions {
  """An object relationship"""
  block: v0_blocks
  block_hash: String!

  """An object relationship"""
  chain: v0_chains!
  chain_id: Int!
  data(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  events(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): [v0_events!]!

  """An aggregate relationship"""
  events_aggregate(
    """distinct select on columns"""
    distinct_on: [v0_events_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [v0_events_order_by!]

    """filter the rows returned"""
    where: v0_events_bool_exp
  ): v0_events_aggregate!
  hash: String!
  height: Int!
  index: Int!
}

"""
aggregated selection of "v0.transactions"
"""
type v0_transactions_aggregate {
  aggregate: v0_transactions_aggregate_fields
  nodes: [v0_transactions!]!
}

input v0_transactions_aggregate_bool_exp {
  count: v0_transactions_aggregate_bool_exp_count
}

input v0_transactions_aggregate_bool_exp_count {
  arguments: [v0_transactions_select_column!]
  distinct: Boolean
  filter: v0_transactions_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "v0.transactions"
"""
type v0_transactions_aggregate_fields {
  avg: v0_transactions_avg_fields
  count(columns: [v0_transactions_select_column!], distinct: Boolean): Int!
  max: v0_transactions_max_fields
  min: v0_transactions_min_fields
  stddev: v0_transactions_stddev_fields
  stddev_pop: v0_transactions_stddev_pop_fields
  stddev_samp: v0_transactions_stddev_samp_fields
  sum: v0_transactions_sum_fields
  var_pop: v0_transactions_var_pop_fields
  var_samp: v0_transactions_var_samp_fields
  variance: v0_transactions_variance_fields
}

"""
order by aggregate values of table "v0.transactions"
"""
input v0_transactions_aggregate_order_by {
  avg: v0_transactions_avg_order_by
  count: order_by
  max: v0_transactions_max_order_by
  min: v0_transactions_min_order_by
  stddev: v0_transactions_stddev_order_by
  stddev_pop: v0_transactions_stddev_pop_order_by
  stddev_samp: v0_transactions_stddev_samp_order_by
  sum: v0_transactions_sum_order_by
  var_pop: v0_transactions_var_pop_order_by
  var_samp: v0_transactions_var_samp_order_by
  variance: v0_transactions_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input v0_transactions_append_input {
  data: jsonb
}

"""
input type for inserting array relation for remote table "v0.transactions"
"""
input v0_transactions_arr_rel_insert_input {
  data: [v0_transactions_insert_input!]!

  """upsert condition"""
  on_conflict: v0_transactions_on_conflict
}

"""aggregate avg on columns"""
type v0_transactions_avg_fields {
  chain_id: Float
  height: Float
  index: Float
}

"""
order by avg() on columns of table "v0.transactions"
"""
input v0_transactions_avg_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""
Boolean expression to filter rows from the table "v0.transactions". All fields are combined with a logical 'AND'.
"""
input v0_transactions_bool_exp {
  _and: [v0_transactions_bool_exp!]
  _not: v0_transactions_bool_exp
  _or: [v0_transactions_bool_exp!]
  block: v0_blocks_bool_exp
  block_hash: String_comparison_exp
  chain: v0_chains_bool_exp
  chain_id: Int_comparison_exp
  data: jsonb_comparison_exp
  events: v0_events_bool_exp
  events_aggregate: v0_events_aggregate_bool_exp
  hash: String_comparison_exp
  height: Int_comparison_exp
  index: Int_comparison_exp
}

"""
unique or primary key constraints on table "v0.transactions"
"""
enum v0_transactions_constraint {
  """
  unique or primary key constraint on columns "chain_id", "hash"
  """
  transactions_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input v0_transactions_delete_at_path_input {
  data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input v0_transactions_delete_elem_input {
  data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input v0_transactions_delete_key_input {
  data: String
}

"""
input type for incrementing numeric columns in table "v0.transactions"
"""
input v0_transactions_inc_input {
  chain_id: Int
  height: Int
  index: Int
}

"""
input type for inserting data into table "v0.transactions"
"""
input v0_transactions_insert_input {
  block: v0_blocks_obj_rel_insert_input
  block_hash: String
  chain: v0_chains_obj_rel_insert_input
  chain_id: Int
  data: jsonb
  events: v0_events_arr_rel_insert_input
  hash: String
  height: Int
  index: Int
}

"""aggregate max on columns"""
type v0_transactions_max_fields {
  block_hash: String
  chain_id: Int
  hash: String
  height: Int
  index: Int
}

"""
order by max() on columns of table "v0.transactions"
"""
input v0_transactions_max_order_by {
  block_hash: order_by
  chain_id: order_by
  hash: order_by
  height: order_by
  index: order_by
}

"""aggregate min on columns"""
type v0_transactions_min_fields {
  block_hash: String
  chain_id: Int
  hash: String
  height: Int
  index: Int
}

"""
order by min() on columns of table "v0.transactions"
"""
input v0_transactions_min_order_by {
  block_hash: order_by
  chain_id: order_by
  hash: order_by
  height: order_by
  index: order_by
}

"""
response of any mutation on the table "v0.transactions"
"""
type v0_transactions_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [v0_transactions!]!
}

"""
input type for inserting object relation for remote table "v0.transactions"
"""
input v0_transactions_obj_rel_insert_input {
  data: v0_transactions_insert_input!

  """upsert condition"""
  on_conflict: v0_transactions_on_conflict
}

"""
on_conflict condition type for table "v0.transactions"
"""
input v0_transactions_on_conflict {
  constraint: v0_transactions_constraint!
  update_columns: [v0_transactions_update_column!]! = []
  where: v0_transactions_bool_exp
}

"""Ordering options when selecting data from "v0.transactions"."""
input v0_transactions_order_by {
  block: v0_blocks_order_by
  block_hash: order_by
  chain: v0_chains_order_by
  chain_id: order_by
  data: order_by
  events_aggregate: v0_events_aggregate_order_by
  hash: order_by
  height: order_by
  index: order_by
}

"""primary key columns input for table: v0.transactions"""
input v0_transactions_pk_columns_input {
  chain_id: Int!
  hash: String!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input v0_transactions_prepend_input {
  data: jsonb
}

"""
select columns of table "v0.transactions"
"""
enum v0_transactions_select_column {
  """column name"""
  block_hash

  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  hash

  """column name"""
  height

  """column name"""
  index
}

"""
input type for updating data in table "v0.transactions"
"""
input v0_transactions_set_input {
  block_hash: String
  chain_id: Int
  data: jsonb
  hash: String
  height: Int
  index: Int
}

"""aggregate stddev on columns"""
type v0_transactions_stddev_fields {
  chain_id: Float
  height: Float
  index: Float
}

"""
order by stddev() on columns of table "v0.transactions"
"""
input v0_transactions_stddev_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""aggregate stddev_pop on columns"""
type v0_transactions_stddev_pop_fields {
  chain_id: Float
  height: Float
  index: Float
}

"""
order by stddev_pop() on columns of table "v0.transactions"
"""
input v0_transactions_stddev_pop_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""aggregate stddev_samp on columns"""
type v0_transactions_stddev_samp_fields {
  chain_id: Float
  height: Float
  index: Float
}

"""
order by stddev_samp() on columns of table "v0.transactions"
"""
input v0_transactions_stddev_samp_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""
Streaming cursor of the table "v0_transactions"
"""
input v0_transactions_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_transactions_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_transactions_stream_cursor_value_input {
  block_hash: String
  chain_id: Int
  data: jsonb
  hash: String
  height: Int
  index: Int
}

"""aggregate sum on columns"""
type v0_transactions_sum_fields {
  chain_id: Int
  height: Int
  index: Int
}

"""
order by sum() on columns of table "v0.transactions"
"""
input v0_transactions_sum_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""
update columns of table "v0.transactions"
"""
enum v0_transactions_update_column {
  """column name"""
  block_hash

  """column name"""
  chain_id

  """column name"""
  data

  """column name"""
  hash

  """column name"""
  height

  """column name"""
  index
}

input v0_transactions_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: v0_transactions_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: v0_transactions_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: v0_transactions_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: v0_transactions_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: v0_transactions_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: v0_transactions_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: v0_transactions_set_input

  """filter the rows which have to be updated"""
  where: v0_transactions_bool_exp!
}

"""aggregate var_pop on columns"""
type v0_transactions_var_pop_fields {
  chain_id: Float
  height: Float
  index: Float
}

"""
order by var_pop() on columns of table "v0.transactions"
"""
input v0_transactions_var_pop_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""aggregate var_samp on columns"""
type v0_transactions_var_samp_fields {
  chain_id: Float
  height: Float
  index: Float
}

"""
order by var_samp() on columns of table "v0.transactions"
"""
input v0_transactions_var_samp_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""aggregate variance on columns"""
type v0_transactions_variance_fields {
  chain_id: Float
  height: Float
  index: Float
}

"""
order by variance() on columns of table "v0.transactions"
"""
input v0_transactions_variance_order_by {
  chain_id: order_by
  height: order_by
  index: order_by
}

"""
columns and relationships of "v0.transfers"
"""
type v0_transfers {
  amount: bigint
  denom: String
  mode: String
  recipient: String
  sender: String
}

"""
aggregated selection of "v0.transfers"
"""
type v0_transfers_aggregate {
  aggregate: v0_transfers_aggregate_fields
  nodes: [v0_transfers!]!
}

"""
aggregate fields of "v0.transfers"
"""
type v0_transfers_aggregate_fields {
  avg: v0_transfers_avg_fields
  count(columns: [v0_transfers_select_column!], distinct: Boolean): Int!
  max: v0_transfers_max_fields
  min: v0_transfers_min_fields
  stddev: v0_transfers_stddev_fields
  stddev_pop: v0_transfers_stddev_pop_fields
  stddev_samp: v0_transfers_stddev_samp_fields
  sum: v0_transfers_sum_fields
  var_pop: v0_transfers_var_pop_fields
  var_samp: v0_transfers_var_samp_fields
  variance: v0_transfers_variance_fields
}

"""aggregate avg on columns"""
type v0_transfers_avg_fields {
  amount: Float
}

"""
Boolean expression to filter rows from the table "v0.transfers". All fields are combined with a logical 'AND'.
"""
input v0_transfers_bool_exp {
  _and: [v0_transfers_bool_exp!]
  _not: v0_transfers_bool_exp
  _or: [v0_transfers_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  mode: String_comparison_exp
  recipient: String_comparison_exp
  sender: String_comparison_exp
}

"""aggregate max on columns"""
type v0_transfers_max_fields {
  amount: bigint
  denom: String
  mode: String
  recipient: String
  sender: String
}

"""aggregate min on columns"""
type v0_transfers_min_fields {
  amount: bigint
  denom: String
  mode: String
  recipient: String
  sender: String
}

"""Ordering options when selecting data from "v0.transfers"."""
input v0_transfers_order_by {
  amount: order_by
  denom: order_by
  mode: order_by
  recipient: order_by
  sender: order_by
}

"""
select columns of table "v0.transfers"
"""
enum v0_transfers_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  mode

  """column name"""
  recipient

  """column name"""
  sender
}

"""aggregate stddev on columns"""
type v0_transfers_stddev_fields {
  amount: Float
}

"""aggregate stddev_pop on columns"""
type v0_transfers_stddev_pop_fields {
  amount: Float
}

"""aggregate stddev_samp on columns"""
type v0_transfers_stddev_samp_fields {
  amount: Float
}

"""
Streaming cursor of the table "v0_transfers"
"""
input v0_transfers_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_transfers_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_transfers_stream_cursor_value_input {
  amount: bigint
  denom: String
  mode: String
  recipient: String
  sender: String
}

"""aggregate sum on columns"""
type v0_transfers_sum_fields {
  amount: bigint
}

"""aggregate var_pop on columns"""
type v0_transfers_var_pop_fields {
  amount: Float
}

"""aggregate var_samp on columns"""
type v0_transfers_var_samp_fields {
  amount: Float
}

"""aggregate variance on columns"""
type v0_transfers_variance_fields {
  amount: Float
}

"""
columns and relationships of "v0.update_clients"
"""
type v0_update_clients {
  client_id: String
  client_type: String
  consensus_height: String
  consensus_heights: String
  header: String
  msg_index: Int
}

"""
aggregated selection of "v0.update_clients"
"""
type v0_update_clients_aggregate {
  aggregate: v0_update_clients_aggregate_fields
  nodes: [v0_update_clients!]!
}

"""
aggregate fields of "v0.update_clients"
"""
type v0_update_clients_aggregate_fields {
  avg: v0_update_clients_avg_fields
  count(columns: [v0_update_clients_select_column!], distinct: Boolean): Int!
  max: v0_update_clients_max_fields
  min: v0_update_clients_min_fields
  stddev: v0_update_clients_stddev_fields
  stddev_pop: v0_update_clients_stddev_pop_fields
  stddev_samp: v0_update_clients_stddev_samp_fields
  sum: v0_update_clients_sum_fields
  var_pop: v0_update_clients_var_pop_fields
  var_samp: v0_update_clients_var_samp_fields
  variance: v0_update_clients_variance_fields
}

"""aggregate avg on columns"""
type v0_update_clients_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.update_clients". All fields are combined with a logical 'AND'.
"""
input v0_update_clients_bool_exp {
  _and: [v0_update_clients_bool_exp!]
  _not: v0_update_clients_bool_exp
  _or: [v0_update_clients_bool_exp!]
  client_id: String_comparison_exp
  client_type: String_comparison_exp
  consensus_height: String_comparison_exp
  consensus_heights: String_comparison_exp
  header: String_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_update_clients_max_fields {
  client_id: String
  client_type: String
  consensus_height: String
  consensus_heights: String
  header: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_update_clients_min_fields {
  client_id: String
  client_type: String
  consensus_height: String
  consensus_heights: String
  header: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.update_clients"."""
input v0_update_clients_order_by {
  client_id: order_by
  client_type: order_by
  consensus_height: order_by
  consensus_heights: order_by
  header: order_by
  msg_index: order_by
}

"""
select columns of table "v0.update_clients"
"""
enum v0_update_clients_select_column {
  """column name"""
  client_id

  """column name"""
  client_type

  """column name"""
  consensus_height

  """column name"""
  consensus_heights

  """column name"""
  header

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_update_clients_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_update_clients_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_update_clients_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_update_clients"
"""
input v0_update_clients_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_update_clients_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_update_clients_stream_cursor_value_input {
  client_id: String
  client_type: String
  consensus_height: String
  consensus_heights: String
  header: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_update_clients_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_update_clients_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_update_clients_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_update_clients_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.validator_updates"
"""
type v0_validator_updates {
  power: numeric
  pub_key(
    """JSON select path"""
    path: String
  ): jsonb
}

"""
aggregated selection of "v0.validator_updates"
"""
type v0_validator_updates_aggregate {
  aggregate: v0_validator_updates_aggregate_fields
  nodes: [v0_validator_updates!]!
}

"""
aggregate fields of "v0.validator_updates"
"""
type v0_validator_updates_aggregate_fields {
  avg: v0_validator_updates_avg_fields
  count(columns: [v0_validator_updates_select_column!], distinct: Boolean): Int!
  max: v0_validator_updates_max_fields
  min: v0_validator_updates_min_fields
  stddev: v0_validator_updates_stddev_fields
  stddev_pop: v0_validator_updates_stddev_pop_fields
  stddev_samp: v0_validator_updates_stddev_samp_fields
  sum: v0_validator_updates_sum_fields
  var_pop: v0_validator_updates_var_pop_fields
  var_samp: v0_validator_updates_var_samp_fields
  variance: v0_validator_updates_variance_fields
}

"""aggregate avg on columns"""
type v0_validator_updates_avg_fields {
  power: Float
}

"""
Boolean expression to filter rows from the table "v0.validator_updates". All fields are combined with a logical 'AND'.
"""
input v0_validator_updates_bool_exp {
  _and: [v0_validator_updates_bool_exp!]
  _not: v0_validator_updates_bool_exp
  _or: [v0_validator_updates_bool_exp!]
  power: numeric_comparison_exp
  pub_key: jsonb_comparison_exp
}

"""aggregate max on columns"""
type v0_validator_updates_max_fields {
  power: numeric
}

"""aggregate min on columns"""
type v0_validator_updates_min_fields {
  power: numeric
}

"""Ordering options when selecting data from "v0.validator_updates"."""
input v0_validator_updates_order_by {
  power: order_by
  pub_key: order_by
}

"""
select columns of table "v0.validator_updates"
"""
enum v0_validator_updates_select_column {
  """column name"""
  power

  """column name"""
  pub_key
}

"""aggregate stddev on columns"""
type v0_validator_updates_stddev_fields {
  power: Float
}

"""aggregate stddev_pop on columns"""
type v0_validator_updates_stddev_pop_fields {
  power: Float
}

"""aggregate stddev_samp on columns"""
type v0_validator_updates_stddev_samp_fields {
  power: Float
}

"""
Streaming cursor of the table "v0_validator_updates"
"""
input v0_validator_updates_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_validator_updates_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_validator_updates_stream_cursor_value_input {
  power: numeric
  pub_key: jsonb
}

"""aggregate sum on columns"""
type v0_validator_updates_sum_fields {
  power: numeric
}

"""aggregate var_pop on columns"""
type v0_validator_updates_var_pop_fields {
  power: Float
}

"""aggregate var_samp on columns"""
type v0_validator_updates_var_samp_fields {
  power: Float
}

"""aggregate variance on columns"""
type v0_validator_updates_variance_fields {
  power: Float
}

"""
columns and relationships of "v0.wasm_fungible_token_packets"
"""
type v0_wasm_fungible_token_packets {
  _contract_address: String
  acknowledgement: String
  amount: numeric
  denom: String
  error: String
  module: String
  msg_index: Int
  receiver: String
  sender: String
  success: Boolean
}

"""
aggregated selection of "v0.wasm_fungible_token_packets"
"""
type v0_wasm_fungible_token_packets_aggregate {
  aggregate: v0_wasm_fungible_token_packets_aggregate_fields
  nodes: [v0_wasm_fungible_token_packets!]!
}

"""
aggregate fields of "v0.wasm_fungible_token_packets"
"""
type v0_wasm_fungible_token_packets_aggregate_fields {
  avg: v0_wasm_fungible_token_packets_avg_fields
  count(columns: [v0_wasm_fungible_token_packets_select_column!], distinct: Boolean): Int!
  max: v0_wasm_fungible_token_packets_max_fields
  min: v0_wasm_fungible_token_packets_min_fields
  stddev: v0_wasm_fungible_token_packets_stddev_fields
  stddev_pop: v0_wasm_fungible_token_packets_stddev_pop_fields
  stddev_samp: v0_wasm_fungible_token_packets_stddev_samp_fields
  sum: v0_wasm_fungible_token_packets_sum_fields
  var_pop: v0_wasm_fungible_token_packets_var_pop_fields
  var_samp: v0_wasm_fungible_token_packets_var_samp_fields
  variance: v0_wasm_fungible_token_packets_variance_fields
}

"""aggregate avg on columns"""
type v0_wasm_fungible_token_packets_avg_fields {
  amount: Float
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.wasm_fungible_token_packets". All fields are combined with a logical 'AND'.
"""
input v0_wasm_fungible_token_packets_bool_exp {
  _and: [v0_wasm_fungible_token_packets_bool_exp!]
  _contract_address: String_comparison_exp
  _not: v0_wasm_fungible_token_packets_bool_exp
  _or: [v0_wasm_fungible_token_packets_bool_exp!]
  acknowledgement: String_comparison_exp
  amount: numeric_comparison_exp
  denom: String_comparison_exp
  error: String_comparison_exp
  module: String_comparison_exp
  msg_index: Int_comparison_exp
  receiver: String_comparison_exp
  sender: String_comparison_exp
  success: Boolean_comparison_exp
}

"""aggregate max on columns"""
type v0_wasm_fungible_token_packets_max_fields {
  _contract_address: String
  acknowledgement: String
  amount: numeric
  denom: String
  error: String
  module: String
  msg_index: Int
  receiver: String
  sender: String
}

"""aggregate min on columns"""
type v0_wasm_fungible_token_packets_min_fields {
  _contract_address: String
  acknowledgement: String
  amount: numeric
  denom: String
  error: String
  module: String
  msg_index: Int
  receiver: String
  sender: String
}

"""
Ordering options when selecting data from "v0.wasm_fungible_token_packets".
"""
input v0_wasm_fungible_token_packets_order_by {
  _contract_address: order_by
  acknowledgement: order_by
  amount: order_by
  denom: order_by
  error: order_by
  module: order_by
  msg_index: order_by
  receiver: order_by
  sender: order_by
  success: order_by
}

"""
select columns of table "v0.wasm_fungible_token_packets"
"""
enum v0_wasm_fungible_token_packets_select_column {
  """column name"""
  _contract_address

  """column name"""
  acknowledgement

  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  error

  """column name"""
  module

  """column name"""
  msg_index

  """column name"""
  receiver

  """column name"""
  sender

  """column name"""
  success
}

"""aggregate stddev on columns"""
type v0_wasm_fungible_token_packets_stddev_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_wasm_fungible_token_packets_stddev_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_wasm_fungible_token_packets_stddev_samp_fields {
  amount: Float
  msg_index: Float
}

"""
Streaming cursor of the table "v0_wasm_fungible_token_packets"
"""
input v0_wasm_fungible_token_packets_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_wasm_fungible_token_packets_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_wasm_fungible_token_packets_stream_cursor_value_input {
  _contract_address: String
  acknowledgement: String
  amount: numeric
  denom: String
  error: String
  module: String
  msg_index: Int
  receiver: String
  sender: String
  success: Boolean
}

"""aggregate sum on columns"""
type v0_wasm_fungible_token_packets_sum_fields {
  amount: numeric
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_wasm_fungible_token_packets_var_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_wasm_fungible_token_packets_var_samp_fields {
  amount: Float
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_wasm_fungible_token_packets_variance_fields {
  amount: Float
  msg_index: Float
}

"""
columns and relationships of "v0.wasm_ibc_transfers"
"""
type v0_wasm_ibc_transfers {
  _contract_address: String
  denom: String
  msg_index: Int
  receiver: String
  sender: String
  value: numeric
}

"""
aggregated selection of "v0.wasm_ibc_transfers"
"""
type v0_wasm_ibc_transfers_aggregate {
  aggregate: v0_wasm_ibc_transfers_aggregate_fields
  nodes: [v0_wasm_ibc_transfers!]!
}

"""
aggregate fields of "v0.wasm_ibc_transfers"
"""
type v0_wasm_ibc_transfers_aggregate_fields {
  avg: v0_wasm_ibc_transfers_avg_fields
  count(columns: [v0_wasm_ibc_transfers_select_column!], distinct: Boolean): Int!
  max: v0_wasm_ibc_transfers_max_fields
  min: v0_wasm_ibc_transfers_min_fields
  stddev: v0_wasm_ibc_transfers_stddev_fields
  stddev_pop: v0_wasm_ibc_transfers_stddev_pop_fields
  stddev_samp: v0_wasm_ibc_transfers_stddev_samp_fields
  sum: v0_wasm_ibc_transfers_sum_fields
  var_pop: v0_wasm_ibc_transfers_var_pop_fields
  var_samp: v0_wasm_ibc_transfers_var_samp_fields
  variance: v0_wasm_ibc_transfers_variance_fields
}

"""aggregate avg on columns"""
type v0_wasm_ibc_transfers_avg_fields {
  msg_index: Float
  value: Float
}

"""
Boolean expression to filter rows from the table "v0.wasm_ibc_transfers". All fields are combined with a logical 'AND'.
"""
input v0_wasm_ibc_transfers_bool_exp {
  _and: [v0_wasm_ibc_transfers_bool_exp!]
  _contract_address: String_comparison_exp
  _not: v0_wasm_ibc_transfers_bool_exp
  _or: [v0_wasm_ibc_transfers_bool_exp!]
  denom: String_comparison_exp
  msg_index: Int_comparison_exp
  receiver: String_comparison_exp
  sender: String_comparison_exp
  value: numeric_comparison_exp
}

"""aggregate max on columns"""
type v0_wasm_ibc_transfers_max_fields {
  _contract_address: String
  denom: String
  msg_index: Int
  receiver: String
  sender: String
  value: numeric
}

"""aggregate min on columns"""
type v0_wasm_ibc_transfers_min_fields {
  _contract_address: String
  denom: String
  msg_index: Int
  receiver: String
  sender: String
  value: numeric
}

"""Ordering options when selecting data from "v0.wasm_ibc_transfers"."""
input v0_wasm_ibc_transfers_order_by {
  _contract_address: order_by
  denom: order_by
  msg_index: order_by
  receiver: order_by
  sender: order_by
  value: order_by
}

"""
select columns of table "v0.wasm_ibc_transfers"
"""
enum v0_wasm_ibc_transfers_select_column {
  """column name"""
  _contract_address

  """column name"""
  denom

  """column name"""
  msg_index

  """column name"""
  receiver

  """column name"""
  sender

  """column name"""
  value
}

"""aggregate stddev on columns"""
type v0_wasm_ibc_transfers_stddev_fields {
  msg_index: Float
  value: Float
}

"""aggregate stddev_pop on columns"""
type v0_wasm_ibc_transfers_stddev_pop_fields {
  msg_index: Float
  value: Float
}

"""aggregate stddev_samp on columns"""
type v0_wasm_ibc_transfers_stddev_samp_fields {
  msg_index: Float
  value: Float
}

"""
Streaming cursor of the table "v0_wasm_ibc_transfers"
"""
input v0_wasm_ibc_transfers_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_wasm_ibc_transfers_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_wasm_ibc_transfers_stream_cursor_value_input {
  _contract_address: String
  denom: String
  msg_index: Int
  receiver: String
  sender: String
  value: numeric
}

"""aggregate sum on columns"""
type v0_wasm_ibc_transfers_sum_fields {
  msg_index: Int
  value: numeric
}

"""aggregate var_pop on columns"""
type v0_wasm_ibc_transfers_var_pop_fields {
  msg_index: Float
  value: Float
}

"""aggregate var_samp on columns"""
type v0_wasm_ibc_transfers_var_samp_fields {
  msg_index: Float
  value: Float
}

"""aggregate variance on columns"""
type v0_wasm_ibc_transfers_variance_fields {
  msg_index: Float
  value: Float
}

"""
columns and relationships of "v0.wasm_message"
"""
type v0_wasm_message {
  _contract_address: String
  module: String
  msg_index: Int
}

"""
aggregated selection of "v0.wasm_message"
"""
type v0_wasm_message_aggregate {
  aggregate: v0_wasm_message_aggregate_fields
  nodes: [v0_wasm_message!]!
}

"""
aggregate fields of "v0.wasm_message"
"""
type v0_wasm_message_aggregate_fields {
  avg: v0_wasm_message_avg_fields
  count(columns: [v0_wasm_message_select_column!], distinct: Boolean): Int!
  max: v0_wasm_message_max_fields
  min: v0_wasm_message_min_fields
  stddev: v0_wasm_message_stddev_fields
  stddev_pop: v0_wasm_message_stddev_pop_fields
  stddev_samp: v0_wasm_message_stddev_samp_fields
  sum: v0_wasm_message_sum_fields
  var_pop: v0_wasm_message_var_pop_fields
  var_samp: v0_wasm_message_var_samp_fields
  variance: v0_wasm_message_variance_fields
}

"""aggregate avg on columns"""
type v0_wasm_message_avg_fields {
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.wasm_message". All fields are combined with a logical 'AND'.
"""
input v0_wasm_message_bool_exp {
  _and: [v0_wasm_message_bool_exp!]
  _contract_address: String_comparison_exp
  _not: v0_wasm_message_bool_exp
  _or: [v0_wasm_message_bool_exp!]
  module: String_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_wasm_message_max_fields {
  _contract_address: String
  module: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_wasm_message_min_fields {
  _contract_address: String
  module: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.wasm_message"."""
input v0_wasm_message_order_by {
  _contract_address: order_by
  module: order_by
  msg_index: order_by
}

"""
select columns of table "v0.wasm_message"
"""
enum v0_wasm_message_select_column {
  """column name"""
  _contract_address

  """column name"""
  module

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_wasm_message_stddev_fields {
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_wasm_message_stddev_pop_fields {
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_wasm_message_stddev_samp_fields {
  msg_index: Float
}

"""
Streaming cursor of the table "v0_wasm_message"
"""
input v0_wasm_message_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_wasm_message_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_wasm_message_stream_cursor_value_input {
  _contract_address: String
  module: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_wasm_message_sum_fields {
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_wasm_message_var_pop_fields {
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_wasm_message_var_samp_fields {
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_wasm_message_variance_fields {
  msg_index: Float
}

"""
columns and relationships of "v0.withdraw_commissions"
"""
type v0_withdraw_commissions {
  amount: bigint
  denom: String
  msg_index: Int
}

"""
aggregated selection of "v0.withdraw_commissions"
"""
type v0_withdraw_commissions_aggregate {
  aggregate: v0_withdraw_commissions_aggregate_fields
  nodes: [v0_withdraw_commissions!]!
}

"""
aggregate fields of "v0.withdraw_commissions"
"""
type v0_withdraw_commissions_aggregate_fields {
  avg: v0_withdraw_commissions_avg_fields
  count(columns: [v0_withdraw_commissions_select_column!], distinct: Boolean): Int!
  max: v0_withdraw_commissions_max_fields
  min: v0_withdraw_commissions_min_fields
  stddev: v0_withdraw_commissions_stddev_fields
  stddev_pop: v0_withdraw_commissions_stddev_pop_fields
  stddev_samp: v0_withdraw_commissions_stddev_samp_fields
  sum: v0_withdraw_commissions_sum_fields
  var_pop: v0_withdraw_commissions_var_pop_fields
  var_samp: v0_withdraw_commissions_var_samp_fields
  variance: v0_withdraw_commissions_variance_fields
}

"""aggregate avg on columns"""
type v0_withdraw_commissions_avg_fields {
  amount: Float
  msg_index: Float
}

"""
Boolean expression to filter rows from the table "v0.withdraw_commissions". All fields are combined with a logical 'AND'.
"""
input v0_withdraw_commissions_bool_exp {
  _and: [v0_withdraw_commissions_bool_exp!]
  _not: v0_withdraw_commissions_bool_exp
  _or: [v0_withdraw_commissions_bool_exp!]
  amount: bigint_comparison_exp
  denom: String_comparison_exp
  msg_index: Int_comparison_exp
}

"""aggregate max on columns"""
type v0_withdraw_commissions_max_fields {
  amount: bigint
  denom: String
  msg_index: Int
}

"""aggregate min on columns"""
type v0_withdraw_commissions_min_fields {
  amount: bigint
  denom: String
  msg_index: Int
}

"""Ordering options when selecting data from "v0.withdraw_commissions"."""
input v0_withdraw_commissions_order_by {
  amount: order_by
  denom: order_by
  msg_index: order_by
}

"""
select columns of table "v0.withdraw_commissions"
"""
enum v0_withdraw_commissions_select_column {
  """column name"""
  amount

  """column name"""
  denom

  """column name"""
  msg_index
}

"""aggregate stddev on columns"""
type v0_withdraw_commissions_stddev_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_pop on columns"""
type v0_withdraw_commissions_stddev_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate stddev_samp on columns"""
type v0_withdraw_commissions_stddev_samp_fields {
  amount: Float
  msg_index: Float
}

"""
Streaming cursor of the table "v0_withdraw_commissions"
"""
input v0_withdraw_commissions_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: v0_withdraw_commissions_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input v0_withdraw_commissions_stream_cursor_value_input {
  amount: bigint
  denom: String
  msg_index: Int
}

"""aggregate sum on columns"""
type v0_withdraw_commissions_sum_fields {
  amount: bigint
  msg_index: Int
}

"""aggregate var_pop on columns"""
type v0_withdraw_commissions_var_pop_fields {
  amount: Float
  msg_index: Float
}

"""aggregate var_samp on columns"""
type v0_withdraw_commissions_var_samp_fields {
  amount: Float
  msg_index: Float
}

"""aggregate variance on columns"""
type v0_withdraw_commissions_variance_fields {
  amount: Float
  msg_index: Float
}

